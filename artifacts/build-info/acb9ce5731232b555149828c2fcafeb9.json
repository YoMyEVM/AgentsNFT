{
	"id": "acb9ce5731232b555149828c2fcafeb9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721Royalty.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Royalty.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"./ERC721.sol\";\nimport {ERC2981} from \"./ERC2981.sol\";\n\n/**\n * @dev Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n * information.\n *\n * Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually\n * for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC721Royalty is ERC2981, ERC721 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC2981) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"ERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/common/ERC2981.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC2981} from \"./IERC2981.sol\";\r\nimport {IERC165, ERC165} from \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\r\n *\r\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\r\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\r\n *\r\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\r\n * fee is specified in basis points by default.\r\n *\r\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\r\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\r\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\r\n */\r\nabstract contract ERC2981 is IERC2981, ERC165 {\r\n    struct RoyaltyInfo {\r\n        address receiver;\r\n        uint96 royaltyFraction;\r\n    }\r\n\r\n    RoyaltyInfo private _defaultRoyaltyInfo;\r\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\r\n\r\n    /**\r\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\r\n     */\r\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\r\n\r\n    /**\r\n     * @dev The default royalty receiver is invalid.\r\n     */\r\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\r\n     */\r\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\r\n\r\n    /**\r\n     * @dev The royalty receiver for `tokenId` is invalid.\r\n     */\r\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\r\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC2981\r\n     */\r\n    function royaltyInfo(\r\n        uint256 tokenId,\r\n        uint256 salePrice\r\n    ) public view virtual returns (address receiver, uint256 amount) {\r\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\r\n        address royaltyReceiver = _royaltyInfo.receiver;\r\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\r\n\r\n        if (royaltyReceiver == address(0)) {\r\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\r\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\r\n        }\r\n\r\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\r\n\r\n        return (royaltyReceiver, royaltyAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\r\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\r\n     * override.\r\n     */\r\n    function _feeDenominator() internal pure virtual returns (uint96) {\r\n        return 10000;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the royalty information that all ids in this contract will default to.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `receiver` cannot be the zero address.\r\n     * - `feeNumerator` cannot be greater than the fee denominator.\r\n     */\r\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\r\n        uint256 denominator = _feeDenominator();\r\n        if (feeNumerator > denominator) {\r\n            // Royalty fee will exceed the sale price\r\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\r\n        }\r\n        if (receiver == address(0)) {\r\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\r\n        }\r\n\r\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes default royalty information.\r\n     */\r\n    function _deleteDefaultRoyalty() internal virtual {\r\n        delete _defaultRoyaltyInfo;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `receiver` cannot be the zero address.\r\n     * - `feeNumerator` cannot be greater than the fee denominator.\r\n     */\r\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\r\n        uint256 denominator = _feeDenominator();\r\n        if (feeNumerator > denominator) {\r\n            // Royalty fee will exceed the sale price\r\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\r\n        }\r\n        if (receiver == address(0)) {\r\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\r\n        }\r\n\r\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\r\n    }\r\n\r\n    /**\r\n     * @dev Resets royalty information for the token id back to the global default.\r\n     */\r\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\r\n        delete _tokenRoyaltyInfo[tokenId];\r\n    }\r\n}"
			},
			"ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./Strings.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC2981.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Interface for the NFT Royalty Standard.\r\n *\r\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\r\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\r\n */\r\ninterface IERC2981 is IERC165 {\r\n    /**\r\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\r\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\r\n     *\r\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\r\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\r\n     */\r\n    function royaltyInfo(\r\n        uint256 tokenId,\r\n        uint256 salePrice\r\n    ) external view returns (address receiver, uint256 royaltyAmount);\r\n}"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d56059c3ecc255971371860dd5559b4f8ae216a17fd09fefc58b162598db8f0864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d56059c3ecc255971371860dd5559b4f8ae216a17fd09fefc58b162598db8f0864736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH1 0x59 0xC3 0xEC 0xC2 SSTORE SWAP8 SGT PUSH18 0x860DD5559B4F8AE216A17FD09FEFC58B1625 SWAP9 0xDB DUP16 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "126:7518:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d56059c3ecc255971371860dd5559b4f8ae216a17fd09fefc58b162598db8f0864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH1 0x59 0xC3 0xEC 0xC2 SSTORE SWAP8 SGT PUSH18 0x860DD5559B4F8AE216A17FD09FEFC58B1625 SWAP9 0xDB DUP16 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "126:7518:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d56059c3ecc255971371860dd5559b4f8ae216a17fd09fefc58b162598db8f0864736f6c634300081c0033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Address.sol",
								"Context.sol",
								"ERC165.sol",
								"ERC2981.sol",
								"ERC721.sol",
								"ERC721Royalty.sol",
								"IERC165.sol",
								"IERC2981.sol",
								"IERC721.sol",
								"IERC721Metadata.sol",
								"IERC721Receiver.sol",
								"Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC2981.sol": {
				"ERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.",
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"ERC2981.sol\":{\"keccak256\":\"0x24d9a2460e6d189405daae9b3316b8bd812f217ee5cc22ca8a35d3d9d801d56d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c11e4f6110bc048281b537502619b7efc1ef281cd39a811fedc1b7407d0ca0\",\"dweb:/ipfs/QmNTCHvnSvvPHujRbku6TWeQJ7nQZ71XEM7VczZZ4nZCJg\"]},\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC2981.sol\":{\"keccak256\":\"0xe38577182afa81deee98d6e8f736049f1cb9a2d6b30508be5ce698ee76f02c59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acf2d2401b1e6becbca62a65da22bcce558f00df5ed7ad755c3dcc7a5de45db\",\"dweb:/ipfs/QmceBQn2w3kQkPC6KdAZreT7JEip9ZasNidZyPr6QzLmzz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 360,
								"contract": "ERC2981.sol:ERC2981",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(RoyaltyInfo)357_storage"
							},
							{
								"astId": 365,
								"contract": "ERC2981.sol:ERC2981",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)357_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)357_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)357_storage"
							},
							"t_struct(RoyaltyInfo)357_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 354,
										"contract": "ERC2981.sol:ERC2981",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 356,
										"contract": "ERC2981.sol:ERC2981",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721.sol\":489:13194  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC721.sol\":1251:1364  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC721.sol\":1325:1330  name_ */\n  dup2\n    /* \"ERC721.sol\":1317:1322  _name */\n  0x00\n    /* \"ERC721.sol\":1317:1330  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC721.sol\":1350:1357  symbol_ */\n  dup1\n    /* \"ERC721.sol\":1340:1347  _symbol */\n  0x01\n    /* \"ERC721.sol\":1340:1357  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC721.sol\":1251:1364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC721.sol\":489:13194  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_20:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_21:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_63\n    /* \"#utility.yul\":1885:1934   */\n  tag_64\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1869:1935   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_66\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2010:2122   */\ntag_65:\n    /* \"#utility.yul\":2131:2183   */\n  tag_67\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_20\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_22:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_70\n  tag_13\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2292:2414   */\ntag_69:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_71\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_74\n  tag_11\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2694:2813   */\ntag_73:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_76\n  tag_12\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2889:3006   */\ntag_75:\n    /* \"#utility.yul\":3030:3104   */\n  tag_77\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3191:3308   */\ntag_78:\n    /* \"#utility.yul\":3332:3406   */\n  tag_80\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_23:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_24:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_25:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_84:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_86\n  tag_24\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3950:4034   */\ntag_85:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_26:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_27:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_28:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_29:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_91\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4665:4704   */\n  tag_92\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_28\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_30:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_31:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_32:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_96\n    /* \"#utility.yul\":5054:5088   */\n  tag_97\n    /* \"#utility.yul\":5063:5087   */\n  tag_98\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5054:5088   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5036:5089   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_33:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_34:\n    /* \"#utility.yul\":5292:5331   */\n  tag_101\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5353:5444   */\n  tag_102\n    /* \"#utility.yul\":5402:5443   */\n  tag_103\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_29\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_35:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_36:\n    /* \"#utility.yul\":5613:5645   */\n  tag_106\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5654:5719   */\n  tag_107\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_37:\n    /* \"#utility.yul\":5791:5911   */\ntag_109:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_112\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_38:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_115\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6142:6171   */\n  tag_116\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_27\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_117:\n    /* \"#utility.yul\":6369:6449   */\n  tag_118\n    /* \"#utility.yul\":6425:6447   */\n  tag_119\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_37\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_114:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_39:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_40:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_122\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_41:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_124\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_126\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_23\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_128\n  tag_16\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7274:7330   */\ntag_127:\n    /* \"#utility.yul\":7354:7392   */\n  tag_129\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_25\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7439:7506   */\n  tag_130\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_38\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_133:\n    /* \"#utility.yul\":8380:8447   */\n  tag_134\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_131)\n    /* \"#utility.yul\":7601:8219   */\ntag_132:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_135\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_26\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_136:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_140\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_40\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_139:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_131:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC721.sol\":489:13194  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC721.sol\":489:13194  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"ERC721.sol\":1431:1731  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":2349:2447  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":3860:4077  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":3398:3799  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"ERC721.sol\":4724:5054  function transferFrom(... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"ERC721.sol\":5120:5299  function safeTransferFrom(... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"ERC721.sol\":2052:2287  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":1790:1995  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":2511:2613  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":4144:4434  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"ERC721.sol\":5365:5685  function safeTransferFrom(... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"ERC721.sol\":2679:3008  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":4500:4662  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721.sol\":1431:1731  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"ERC721.sol\":1533:1537  bool */\n      0x00\n        /* \"ERC721.sol\":1583:1608  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"ERC721.sol\":1568:1608  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC721.sol\":1568:1579  interfaceId */\n      dup3\n        /* \"ERC721.sol\":1568:1608  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721.sol\":1568:1672  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"ERC721.sol\":1639:1672  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"ERC721.sol\":1624:1672  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC721.sol\":1624:1635  interfaceId */\n      dup3\n        /* \"ERC721.sol\":1624:1672  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721.sol\":1568:1672  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"ERC721.sol\":1568:1724  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"ERC721.sol\":1688:1724  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"ERC721.sol\":1712:1723  interfaceId */\n      dup3\n        /* \"ERC721.sol\":1688:1711  super.supportsInterface */\n      tag_79\n        /* \"ERC721.sol\":1688:1724  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"ERC721.sol\":1568:1724  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"ERC721.sol\":1549:1724  return... */\n      swap1\n      pop\n        /* \"ERC721.sol\":1431:1731  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":2349:2447  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"ERC721.sol\":2403:2416  string memory */\n      0x60\n        /* \"ERC721.sol\":2435:2440  _name */\n      0x00\n        /* \"ERC721.sol\":2428:2440  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721.sol\":2349:2447  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721.sol\":3860:4077  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"ERC721.sol\":3936:3943  address */\n      0x00\n        /* \"ERC721.sol\":3963:3979  _exists(tokenId) */\n      tag_88\n        /* \"ERC721.sol\":3971:3978  tokenId */\n      dup3\n        /* \"ERC721.sol\":3963:3970  _exists */\n      tag_89\n        /* \"ERC721.sol\":3963:3979  _exists(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"ERC721.sol\":3955:4028  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"ERC721.sol\":4046:4061  _tokenApprovals */\n      0x04\n        /* \"ERC721.sol\":4046:4070  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721.sol\":4062:4069  tokenId */\n      dup4\n        /* \"ERC721.sol\":4046:4070  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":4039:4070  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"ERC721.sol\":3860:4077  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":3398:3799  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"ERC721.sol\":3478:3491  address owner */\n      0x00\n        /* \"ERC721.sol\":3494:3517  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"ERC721.sol\":3509:3516  tokenId */\n      dup3\n        /* \"ERC721.sol\":3494:3508  ERC721.ownerOf */\n      tag_47\n        /* \"ERC721.sol\":3494:3517  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"ERC721.sol\":3478:3517  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721.sol\":3541:3546  owner */\n      dup1\n        /* \"ERC721.sol\":3535:3546  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":3535:3537  to */\n      dup4\n        /* \"ERC721.sol\":3535:3546  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC721.sol\":3527:3584  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"ERC721.sol\":3632:3637  owner */\n      dup1\n        /* \"ERC721.sol\":3616:3637  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":3616:3628  _msgSender() */\n      tag_98\n        /* \"ERC721.sol\":3616:3626  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":3616:3628  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"ERC721.sol\":3616:3637  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721.sol\":3616:3678  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"ERC721.sol\":3641:3678  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"ERC721.sol\":3658:3663  owner */\n      dup2\n        /* \"ERC721.sol\":3665:3677  _msgSender() */\n      tag_102\n        /* \"ERC721.sol\":3665:3675  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":3665:3677  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"ERC721.sol\":3641:3657  isApprovedForAll */\n      tag_73\n        /* \"ERC721.sol\":3641:3678  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_101:\n        /* \"ERC721.sol\":3616:3678  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_100:\n        /* \"ERC721.sol\":3595:3760  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"ERC721.sol\":3771:3792  _approve(to, tokenId) */\n      tag_106\n        /* \"ERC721.sol\":3780:3782  to */\n      dup4\n        /* \"ERC721.sol\":3784:3791  tokenId */\n      dup4\n        /* \"ERC721.sol\":3771:3779  _approve */\n      tag_107\n        /* \"ERC721.sol\":3771:3792  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"ERC721.sol\":3468:3799  {... */\n      pop\n        /* \"ERC721.sol\":3398:3799  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":4724:5054  function transferFrom(... */\n    tag_41:\n        /* \"ERC721.sol\":4913:4954  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"ERC721.sol\":4932:4944  _msgSender() */\n      tag_110\n        /* \"ERC721.sol\":4932:4942  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":4932:4944  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"ERC721.sol\":4946:4953  tokenId */\n      dup3\n        /* \"ERC721.sol\":4913:4931  _isApprovedOrOwner */\n      tag_111\n        /* \"ERC721.sol\":4913:4954  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"ERC721.sol\":4905:5008  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"ERC721.sol\":5019:5047  _transfer(from, to, tokenId) */\n      tag_115\n        /* \"ERC721.sol\":5029:5033  from */\n      dup4\n        /* \"ERC721.sol\":5035:5037  to */\n      dup4\n        /* \"ERC721.sol\":5039:5046  tokenId */\n      dup4\n        /* \"ERC721.sol\":5019:5028  _transfer */\n      tag_116\n        /* \"ERC721.sol\":5019:5047  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"ERC721.sol\":4724:5054  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":5120:5299  function safeTransferFrom(... */\n    tag_44:\n        /* \"ERC721.sol\":5253:5292  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_118\n        /* \"ERC721.sol\":5270:5274  from */\n      dup4\n        /* \"ERC721.sol\":5276:5278  to */\n      dup4\n        /* \"ERC721.sol\":5280:5287  tokenId */\n      dup4\n        /* \"ERC721.sol\":5253:5292  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC721.sol\":5253:5269  safeTransferFrom */\n      tag_65\n        /* \"ERC721.sol\":5253:5292  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_118:\n        /* \"ERC721.sol\":5120:5299  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":2052:2287  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"ERC721.sol\":2124:2131  address */\n      0x00\n        /* \"ERC721.sol\":2143:2156  address owner */\n      0x00\n        /* \"ERC721.sol\":2159:2166  _owners */\n      0x02\n        /* \"ERC721.sol\":2159:2175  _owners[tokenId] */\n      0x00\n        /* \"ERC721.sol\":2167:2174  tokenId */\n      dup5\n        /* \"ERC721.sol\":2159:2175  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":2143:2175  address owner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"ERC721.sol\":2210:2211  0 */\n      0x00\n        /* \"ERC721.sol\":2193:2212  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":2193:2198  owner */\n      dup2\n        /* \"ERC721.sol\":2193:2212  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC721.sol\":2185:2258  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"ERC721.sol\":2275:2280  owner */\n      dup1\n        /* \"ERC721.sol\":2268:2280  return owner */\n      swap2\n      pop\n      pop\n        /* \"ERC721.sol\":2052:2287  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":1790:1995  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"ERC721.sol\":1862:1869  uint256 */\n      0x00\n        /* \"ERC721.sol\":1906:1907  0 */\n      0x00\n        /* \"ERC721.sol\":1889:1908  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":1889:1894  owner */\n      dup3\n        /* \"ERC721.sol\":1889:1908  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC721.sol\":1881:1955  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"ERC721.sol\":1972:1981  _balances */\n      0x03\n        /* \"ERC721.sol\":1972:1988  _balances[owner] */\n      0x00\n        /* \"ERC721.sol\":1982:1987  owner */\n      dup4\n        /* \"ERC721.sol\":1972:1988  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721.sol\":1965:1988  return _balances[owner] */\n      swap1\n      pop\n        /* \"ERC721.sol\":1790:1995  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":2511:2613  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"ERC721.sol\":2567:2580  string memory */\n      0x60\n        /* \"ERC721.sol\":2599:2606  _symbol */\n      0x01\n        /* \"ERC721.sol\":2592:2606  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721.sol\":2511:2613  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721.sol\":4144:4434  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"ERC721.sol\":4258:4270  _msgSender() */\n      tag_134\n        /* \"ERC721.sol\":4258:4268  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":4258:4270  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"ERC721.sol\":4246:4270  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":4246:4254  operator */\n      dup3\n        /* \"ERC721.sol\":4246:4270  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC721.sol\":4238:4300  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"ERC721.sol\":4356:4364  approved */\n      dup1\n        /* \"ERC721.sol\":4311:4329  _operatorApprovals */\n      0x05\n        /* \"ERC721.sol\":4311:4343  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"ERC721.sol\":4330:4342  _msgSender() */\n      tag_138\n        /* \"ERC721.sol\":4330:4340  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":4330:4342  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"ERC721.sol\":4311:4343  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721.sol\":4311:4353  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"ERC721.sol\":4344:4352  operator */\n      dup5\n        /* \"ERC721.sol\":4311:4353  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721.sol\":4311:4364  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721.sol\":4408:4416  operator */\n      dup2\n        /* \"ERC721.sol\":4379:4427  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":4394:4406  _msgSender() */\n      tag_139\n        /* \"ERC721.sol\":4394:4404  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":4394:4406  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"ERC721.sol\":4379:4427  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC721.sol\":4418:4426  approved */\n      dup4\n        /* \"ERC721.sol\":4379:4427  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC721.sol\":4144:4434  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":5365:5685  function safeTransferFrom(... */\n    tag_65:\n        /* \"ERC721.sol\":5534:5575  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_142\n        /* \"ERC721.sol\":5553:5565  _msgSender() */\n      tag_143\n        /* \"ERC721.sol\":5553:5563  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":5553:5565  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"ERC721.sol\":5567:5574  tokenId */\n      dup4\n        /* \"ERC721.sol\":5534:5552  _isApprovedOrOwner */\n      tag_111\n        /* \"ERC721.sol\":5534:5575  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"ERC721.sol\":5526:5629  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_114\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"ERC721.sol\":5639:5678  _safeTransfer(from, to, tokenId, _data) */\n      tag_146\n        /* \"ERC721.sol\":5653:5657  from */\n      dup5\n        /* \"ERC721.sol\":5659:5661  to */\n      dup5\n        /* \"ERC721.sol\":5663:5670  tokenId */\n      dup5\n        /* \"ERC721.sol\":5672:5677  _data */\n      dup5\n        /* \"ERC721.sol\":5639:5652  _safeTransfer */\n      tag_147\n        /* \"ERC721.sol\":5639:5678  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_146:\n        /* \"ERC721.sol\":5365:5685  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":2679:3008  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"ERC721.sol\":2752:2765  string memory */\n      0x60\n        /* \"ERC721.sol\":2785:2801  _exists(tokenId) */\n      tag_149\n        /* \"ERC721.sol\":2793:2800  tokenId */\n      dup3\n        /* \"ERC721.sol\":2785:2792  _exists */\n      tag_89\n        /* \"ERC721.sol\":2785:2801  _exists(tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"ERC721.sol\":2777:2853  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"ERC721.sol\":2864:2885  string memory baseURI */\n      0x00\n        /* \"ERC721.sol\":2888:2898  _baseURI() */\n      tag_153\n        /* \"ERC721.sol\":2888:2896  _baseURI */\n      tag_154\n        /* \"ERC721.sol\":2888:2898  _baseURI() */\n      jump\t// in\n    tag_153:\n        /* \"ERC721.sol\":2864:2898  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"ERC721.sol\":2939:2940  0 */\n      0x00\n        /* \"ERC721.sol\":2921:2928  baseURI */\n      dup2\n        /* \"ERC721.sol\":2915:2936  bytes(baseURI).length */\n      mload\n        /* \"ERC721.sol\":2915:2940  bytes(baseURI).length > 0 */\n      gt\n        /* \"ERC721.sol\":2915:3001  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_155\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_156)\n    tag_155:\n        /* \"ERC721.sol\":2967:2974  baseURI */\n      dup1\n        /* \"ERC721.sol\":2976:2994  tokenId.toString() */\n      tag_157\n        /* \"ERC721.sol\":2976:2983  tokenId */\n      dup5\n        /* \"ERC721.sol\":2976:2992  tokenId.toString */\n      tag_158\n        /* \"ERC721.sol\":2976:2994  tokenId.toString() */\n      jump\t// in\n    tag_157:\n        /* \"ERC721.sol\":2950:2995  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721.sol\":2915:3001  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_156:\n        /* \"ERC721.sol\":2908:3001  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"ERC721.sol\":2679:3008  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":4500:4662  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"ERC721.sol\":4597:4601  bool */\n      0x00\n        /* \"ERC721.sol\":4620:4638  _operatorApprovals */\n      0x05\n        /* \"ERC721.sol\":4620:4645  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC721.sol\":4639:4644  owner */\n      dup5\n        /* \"ERC721.sol\":4620:4645  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721.sol\":4620:4655  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC721.sol\":4646:4654  operator */\n      dup4\n        /* \"ERC721.sol\":4620:4655  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC721.sol\":4613:4655  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"ERC721.sol\":4500:4662  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"ERC165.sol\":848:852  bool */\n      0x00\n        /* \"ERC165.sol\":886:911  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC165.sol\":871:882  interfaceId */\n      dup3\n        /* \"ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC165.sol\":864:911  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":7157:7282  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_89:\n        /* \"ERC721.sol\":7222:7226  bool */\n      0x00\n        /* \"ERC721.sol\":7273:7274  0 */\n      0x00\n        /* \"ERC721.sol\":7245:7275  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":7245:7252  _owners */\n      0x02\n        /* \"ERC721.sol\":7245:7261  _owners[tokenId] */\n      0x00\n        /* \"ERC721.sol\":7253:7260  tokenId */\n      dup5\n        /* \"ERC721.sol\":7245:7261  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":7245:7275  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC721.sol\":7238:7275  return _owners[tokenId] != address(0) */\n      swap1\n      pop\n        /* \"ERC721.sol\":7157:7282  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"Context.sol\":639:646  address */\n      0x00\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":658:675  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721.sol\":11008:11179  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"ERC721.sol\":11109:11111  to */\n      dup2\n        /* \"ERC721.sol\":11082:11097  _tokenApprovals */\n      0x04\n        /* \"ERC721.sol\":11082:11106  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721.sol\":11098:11105  tokenId */\n      dup4\n        /* \"ERC721.sol\":11082:11106  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721.sol\":11082:11111  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721.sol\":11164:11171  tokenId */\n      dup1\n        /* \"ERC721.sol\":11160:11162  to */\n      dup3\n        /* \"ERC721.sol\":11126:11172  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":11135:11158  ERC721.ownerOf(tokenId) */\n      tag_166\n        /* \"ERC721.sol\":11150:11157  tokenId */\n      dup4\n        /* \"ERC721.sol\":11135:11149  ERC721.ownerOf */\n      tag_47\n        /* \"ERC721.sol\":11135:11158  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"ERC721.sol\":11126:11172  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721.sol\":11008:11179  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":7440:7784  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"ERC721.sol\":7533:7537  bool */\n      0x00\n        /* \"ERC721.sol\":7557:7573  _exists(tokenId) */\n      tag_168\n        /* \"ERC721.sol\":7565:7572  tokenId */\n      dup3\n        /* \"ERC721.sol\":7557:7564  _exists */\n      tag_89\n        /* \"ERC721.sol\":7557:7573  _exists(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"ERC721.sol\":7549:7622  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"ERC721.sol\":7632:7645  address owner */\n      0x00\n        /* \"ERC721.sol\":7648:7671  ERC721.ownerOf(tokenId) */\n      tag_172\n        /* \"ERC721.sol\":7663:7670  tokenId */\n      dup4\n        /* \"ERC721.sol\":7648:7662  ERC721.ownerOf */\n      tag_47\n        /* \"ERC721.sol\":7648:7671  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"ERC721.sol\":7632:7671  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721.sol\":7700:7705  owner */\n      dup1\n        /* \"ERC721.sol\":7689:7705  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":7689:7696  spender */\n      dup5\n        /* \"ERC721.sol\":7689:7705  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721.sol\":7689:7740  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_173\n      jumpi\n      pop\n        /* \"ERC721.sol\":7733:7740  spender */\n      dup4\n        /* \"ERC721.sol\":7709:7740  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":7709:7729  getApproved(tokenId) */\n      tag_174\n        /* \"ERC721.sol\":7721:7728  tokenId */\n      dup5\n        /* \"ERC721.sol\":7709:7720  getApproved */\n      tag_31\n        /* \"ERC721.sol\":7709:7729  getApproved(tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"ERC721.sol\":7709:7740  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721.sol\":7689:7740  spender == owner || getApproved(tokenId) == spender */\n    tag_173:\n        /* \"ERC721.sol\":7689:7776  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_175\n      jumpi\n      pop\n        /* \"ERC721.sol\":7744:7776  isApprovedForAll(owner, spender) */\n      tag_176\n        /* \"ERC721.sol\":7761:7766  owner */\n      dup2\n        /* \"ERC721.sol\":7768:7775  spender */\n      dup6\n        /* \"ERC721.sol\":7744:7760  isApprovedForAll */\n      tag_73\n        /* \"ERC721.sol\":7744:7776  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_176:\n        /* \"ERC721.sol\":7689:7776  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n    tag_175:\n        /* \"ERC721.sol\":7681:7777  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap2\n      pop\n      pop\n        /* \"ERC721.sol\":7440:7784  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":10337:10897  function _transfer(... */\n    tag_116:\n        /* \"ERC721.sol\":10491:10495  from */\n      dup3\n        /* \"ERC721.sol\":10464:10495  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":10464:10487  ERC721.ownerOf(tokenId) */\n      tag_178\n        /* \"ERC721.sol\":10479:10486  tokenId */\n      dup3\n        /* \"ERC721.sol\":10464:10478  ERC721.ownerOf */\n      tag_47\n        /* \"ERC721.sol\":10464:10487  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"ERC721.sol\":10464:10495  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721.sol\":10456:10541  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"ERC721.sol\":10573:10574  0 */\n      0x00\n        /* \"ERC721.sol\":10559:10575  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":10559:10561  to */\n      dup3\n        /* \"ERC721.sol\":10559:10575  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC721.sol\":10551:10616  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"ERC721.sol\":10627:10666  _beforeTokenTransfer(from, to, tokenId) */\n      tag_185\n        /* \"ERC721.sol\":10648:10652  from */\n      dup4\n        /* \"ERC721.sol\":10654:10656  to */\n      dup4\n        /* \"ERC721.sol\":10658:10665  tokenId */\n      dup4\n        /* \"ERC721.sol\":10627:10647  _beforeTokenTransfer */\n      tag_186\n        /* \"ERC721.sol\":10627:10666  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"ERC721.sol\":10728:10757  _approve(address(0), tokenId) */\n      tag_187\n        /* \"ERC721.sol\":10745:10746  0 */\n      0x00\n        /* \"ERC721.sol\":10749:10756  tokenId */\n      dup3\n        /* \"ERC721.sol\":10728:10736  _approve */\n      tag_107\n        /* \"ERC721.sol\":10728:10757  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"ERC721.sol\":10787:10788  1 */\n      0x01\n        /* \"ERC721.sol\":10768:10777  _balances */\n      0x03\n        /* \"ERC721.sol\":10768:10783  _balances[from] */\n      0x00\n        /* \"ERC721.sol\":10778:10782  from */\n      dup6\n        /* \"ERC721.sol\":10768:10783  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721.sol\":10768:10788  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721.sol\":10815:10816  1 */\n      0x01\n        /* \"ERC721.sol\":10798:10807  _balances */\n      0x03\n        /* \"ERC721.sol\":10798:10811  _balances[to] */\n      0x00\n        /* \"ERC721.sol\":10808:10810  to */\n      dup5\n        /* \"ERC721.sol\":10798:10811  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721.sol\":10798:10816  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721.sol\":10845:10847  to */\n      dup2\n        /* \"ERC721.sol\":10826:10833  _owners */\n      0x02\n        /* \"ERC721.sol\":10826:10842  _owners[tokenId] */\n      0x00\n        /* \"ERC721.sol\":10834:10841  tokenId */\n      dup4\n        /* \"ERC721.sol\":10826:10842  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721.sol\":10826:10847  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721.sol\":10882:10889  tokenId */\n      dup1\n        /* \"ERC721.sol\":10878:10880  to */\n      dup3\n        /* \"ERC721.sol\":10863:10890  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721.sol\":10872:10876  from */\n      dup5\n        /* \"ERC721.sol\":10863:10890  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721.sol\":10337:10897  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":6547:6854  function _safeTransfer(... */\n    tag_147:\n        /* \"ERC721.sol\":6698:6726  _transfer(from, to, tokenId) */\n      tag_193\n        /* \"ERC721.sol\":6708:6712  from */\n      dup5\n        /* \"ERC721.sol\":6714:6716  to */\n      dup5\n        /* \"ERC721.sol\":6718:6725  tokenId */\n      dup5\n        /* \"ERC721.sol\":6698:6707  _transfer */\n      tag_116\n        /* \"ERC721.sol\":6698:6726  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"ERC721.sol\":6744:6792  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_194\n        /* \"ERC721.sol\":6767:6771  from */\n      dup5\n        /* \"ERC721.sol\":6773:6775  to */\n      dup5\n        /* \"ERC721.sol\":6777:6784  tokenId */\n      dup5\n        /* \"ERC721.sol\":6786:6791  _data */\n      dup5\n        /* \"ERC721.sol\":6744:6766  _checkOnERC721Received */\n      tag_195\n        /* \"ERC721.sol\":6744:6792  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_194:\n        /* \"ERC721.sol\":6736:6847  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"ERC721.sol\":6547:6854  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":3249:3341  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_154:\n        /* \"ERC721.sol\":3300:3313  string memory */\n      0x60\n        /* \"ERC721.sol\":3325:3334  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"ERC721.sol\":3249:3341  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Strings.sol\":275:978  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_158:\n        /* \"Strings.sol\":331:344  string memory */\n      0x60\n        /* \"Strings.sol\":557:558  0 */\n      0x00\n        /* \"Strings.sol\":548:553  value */\n      dup3\n        /* \"Strings.sol\":548:558  value == 0 */\n      sub\n        /* \"Strings.sol\":544:595  if (value == 0) {... */\n      tag_201\n      jumpi\n        /* \"Strings.sol\":574:584  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_200)\n        /* \"Strings.sol\":544:595  if (value == 0) {... */\n    tag_201:\n        /* \"Strings.sol\":604:616  uint256 temp */\n      0x00\n        /* \"Strings.sol\":619:624  value */\n      dup3\n        /* \"Strings.sol\":604:624  uint256 temp = value */\n      swap1\n      pop\n        /* \"Strings.sol\":634:648  uint256 digits */\n      0x00\n        /* \"Strings.sol\":658:733  while (temp != 0) {... */\n    tag_202:\n        /* \"Strings.sol\":673:674  0 */\n      0x00\n        /* \"Strings.sol\":665:669  temp */\n      dup3\n        /* \"Strings.sol\":665:674  temp != 0 */\n      eq\n        /* \"Strings.sol\":658:733  while (temp != 0) {... */\n      tag_203\n      jumpi\n        /* \"Strings.sol\":690:698  digits++ */\n      dup1\n      dup1\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap2\n      pop\n      pop\n        /* \"Strings.sol\":720:722  10 */\n      0x0a\n        /* \"Strings.sol\":712:722  temp /= 10 */\n      dup3\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap2\n      pop\n        /* \"Strings.sol\":658:733  while (temp != 0) {... */\n      jump(tag_202)\n    tag_203:\n        /* \"Strings.sol\":742:761  bytes memory buffer */\n      0x00\n        /* \"Strings.sol\":774:780  digits */\n      dup2\n        /* \"Strings.sol\":764:781  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_208\n      jumpi\n      tag_209\n      tag_210\n      jump\t// in\n    tag_209:\n    tag_208:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_211:\n      pop\n        /* \"Strings.sol\":742:781  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"Strings.sol\":791:941  while (value != 0) {... */\n    tag_212:\n        /* \"Strings.sol\":807:808  0 */\n      0x00\n        /* \"Strings.sol\":798:803  value */\n      dup6\n        /* \"Strings.sol\":798:808  value != 0 */\n      eq\n        /* \"Strings.sol\":791:941  while (value != 0) {... */\n      tag_213\n      jumpi\n        /* \"Strings.sol\":834:835  1 */\n      0x01\n        /* \"Strings.sol\":824:835  digits -= 1 */\n      dup3\n      tag_214\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_214:\n      swap2\n      pop\n        /* \"Strings.sol\":900:902  10 */\n      0x0a\n        /* \"Strings.sol\":892:897  value */\n      dup6\n        /* \"Strings.sol\":892:902  value % 10 */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"Strings.sol\":879:881  48 */\n      0x30\n        /* \"Strings.sol\":879:903  48 + uint256(value % 10) */\n      tag_217\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_217:\n        /* \"Strings.sol\":866:905  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"Strings.sol\":849:855  buffer */\n      dup2\n        /* \"Strings.sol\":856:862  digits */\n      dup4\n        /* \"Strings.sol\":849:863  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n    tag_218:\n      0x20\n      add\n      add\n        /* \"Strings.sol\":849:905  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Strings.sol\":928:930  10 */\n      0x0a\n        /* \"Strings.sol\":919:930  value /= 10 */\n      dup6\n      tag_221\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_221:\n      swap5\n      pop\n        /* \"Strings.sol\":791:941  while (value != 0) {... */\n      jump(tag_212)\n    tag_213:\n        /* \"Strings.sol\":964:970  buffer */\n      dup1\n        /* \"Strings.sol\":950:971  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Strings.sol\":275:978  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_200:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":13070:13192  function _beforeTokenTransfer(... */\n    tag_186:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721.sol\":11732:12514  function _checkOnERC721Received(... */\n    tag_195:\n        /* \"ERC721.sol\":11882:11886  bool */\n      0x00\n        /* \"ERC721.sol\":11902:11917  to.isContract() */\n      tag_224\n        /* \"ERC721.sol\":11902:11904  to */\n      dup5\n        /* \"ERC721.sol\":11902:11915  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_225\n        /* \"ERC721.sol\":11902:11917  to.isContract() */\n      jump\t// in\n    tag_224:\n        /* \"ERC721.sol\":11898:12508  if (to.isContract()) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"ERC721.sol\":11953:11955  to */\n      dup4\n        /* \"ERC721.sol\":11937:11973  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"ERC721.sol\":11974:11986  _msgSender() */\n      tag_227\n        /* \"ERC721.sol\":11974:11984  _msgSender */\n      tag_99\n        /* \"ERC721.sol\":11974:11986  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"ERC721.sol\":11988:11992  from */\n      dup8\n        /* \"ERC721.sol\":11994:12001  tokenId */\n      dup7\n        /* \"ERC721.sol\":12003:12008  _data */\n      dup7\n        /* \"ERC721.sol\":11937:12009  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      0x01\n    tag_230:\n        /* \"ERC721.sol\":11933:12456  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_233\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_238\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_237)\n    tag_238:\n      0x60\n      swap2\n      pop\n    tag_237:\n      pop\n        /* \"ERC721.sol\":12197:12198  0 */\n      0x00\n        /* \"ERC721.sol\":12180:12186  reason */\n      dup2\n        /* \"ERC721.sol\":12180:12193  reason.length */\n      mload\n        /* \"ERC721.sol\":12180:12198  reason.length == 0 */\n      sub\n        /* \"ERC721.sol\":12176:12442  if (reason.length == 0) {... */\n      tag_239\n      jumpi\n        /* \"ERC721.sol\":12222:12282  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_198\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721.sol\":12176:12442  if (reason.length == 0) {... */\n    tag_239:\n        /* \"ERC721.sol\":12394:12400  reason */\n      dup1\n        /* \"ERC721.sol\":12388:12401  mload(reason) */\n      mload\n        /* \"ERC721.sol\":12379:12385  reason */\n      dup2\n        /* \"ERC721.sol\":12375:12377  32 */\n      0x20\n        /* \"ERC721.sol\":12371:12386  add(32, reason) */\n      add\n        /* \"ERC721.sol\":12364:12402  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"ERC721.sol\":11933:12456  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_233:\n        /* \"ERC721.sol\":12069:12114  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"ERC721.sol\":12059:12114  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC721.sol\":12059:12065  retval */\n      dup2\n        /* \"ERC721.sol\":12059:12114  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721.sol\":12052:12114  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_223)\n        /* \"ERC721.sol\":11898:12508  if (to.isContract()) {... */\n    tag_226:\n        /* \"ERC721.sol\":12493:12497  true */\n      0x01\n        /* \"ERC721.sol\":12486:12497  return true */\n      swap1\n      pop\n        /* \"ERC721.sol\":11732:12514  function _checkOnERC721Received(... */\n    tag_223:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":718:1095  function isContract(address account) internal view returns (bool) {... */\n    tag_225:\n        /* \"Address.sol\":778:782  bool */\n      0x00\n        /* \"Address.sol\":981:993  uint256 size */\n      0x00\n        /* \"Address.sol\":1046:1053  account */\n      dup3\n        /* \"Address.sol\":1034:1054  extcodesize(account) */\n      extcodesize\n        /* \"Address.sol\":1026:1054  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"Address.sol\":1087:1088  0 */\n      0x00\n        /* \"Address.sol\":1080:1084  size */\n      dup2\n        /* \"Address.sol\":1080:1088  size > 0 */\n      gt\n        /* \"Address.sol\":1073:1088  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"Address.sol\":718:1095  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_245:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_246:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_247:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_248:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_249:\n        /* \"#utility.yul\":561:584   */\n      tag_316\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_248\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_317:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_250:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_319\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_249\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_322\n      tag_246\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":833:952   */\n    tag_321:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_323\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_250\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_251:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_252:\n        /* \"#utility.yul\":1268:1289   */\n      tag_326\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_251\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_328\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_252\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_253:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_254:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_255:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_256:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_257:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_334\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_253\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2222:2293   */\n      tag_335\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_254\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_336\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_255\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2392:2421   */\n      tag_337\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_256\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_27:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_339\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_257\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_258:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_259:\n        /* \"#utility.yul\":2909:2933   */\n      tag_342\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_258\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_343:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_260:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_345\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_30:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_348\n      tag_246\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3185:3304   */\n    tag_347:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_349\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_260\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_261:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_262:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_352\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_261\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_263:\n        /* \"#utility.yul\":3765:3789   */\n      tag_354\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_262\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_33:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_356\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_263\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_264:\n        /* \"#utility.yul\":4103:4127   */\n      tag_358\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_262\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_359:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_265:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_361\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_264\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_36:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_364\n      tag_246\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4396:4515   */\n    tag_363:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_365\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_265\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_366\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_260\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_40:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_369\n      tag_246\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4893:5012   */\n    tag_368:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_370\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_265\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_371\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_265\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_372\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_260\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_51:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_375\n      tag_246\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5484:5603   */\n    tag_374:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_376\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_265\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_266:\n        /* \"#utility.yul\":5830:5854   */\n      tag_378\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_258\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_54:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_380\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_266\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_267:\n        /* \"#utility.yul\":6165:6186   */\n      tag_382\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_251\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_383:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_268:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_385\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_267\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_60:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      0x00\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_388\n      tag_246\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6446:6565   */\n    tag_387:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_389\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_265\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_390\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_268\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_269:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_270:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_210:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_271:\n        /* \"#utility.yul\":7345:7372   */\n      tag_395\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_256\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_397\n      tag_210\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7418:7506   */\n    tag_396:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_272:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_399\n      tag_245\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_400\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_271\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_273:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_403\n      tag_210\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7821:7877   */\n    tag_402:\n        /* \"#utility.yul\":7895:7924   */\n      tag_404\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_256\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_274:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_275:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_407\n        /* \"#utility.yul\":8269:8317   */\n      tag_408\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_273\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8253:8318   */\n      tag_272\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_410\n      tag_270\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8393:8505   */\n    tag_409:\n        /* \"#utility.yul\":8514:8568   */\n      tag_411\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_274\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_276:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_414\n      tag_269\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8664:8786   */\n    tag_413:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_415\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_275\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_64:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_418\n      tag_246\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9073:9193   */\n    tag_417:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_419\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_265\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_420\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_265\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_421\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_260\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_423\n      tag_247\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9660:9777   */\n    tag_422:\n        /* \"#utility.yul\":9801:9863   */\n      tag_424\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_276\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_72:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      0x00\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_427\n      tag_246\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9979:10098   */\n    tag_426:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_428\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_265\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_429\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_265\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_277:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_82:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_432:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_434\n      tag_277\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10782:10866   */\n    tag_433:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11109   */\n    tag_278:\n        /* \"#utility.yul\":11018:11052   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":11014:11015   */\n      0x00\n        /* \"#utility.yul\":11006:11012   */\n      dup3\n        /* \"#utility.yul\":11002:11016   */\n      add\n        /* \"#utility.yul\":10995:11053   */\n      mstore\n        /* \"#utility.yul\":11087:11101   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":11082:11084   */\n      0x20\n        /* \"#utility.yul\":11074:11080   */\n      dup3\n        /* \"#utility.yul\":11070:11085   */\n      add\n        /* \"#utility.yul\":11063:11102   */\n      mstore\n        /* \"#utility.yul\":10878:11109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11115:11481   */\n    tag_279:\n        /* \"#utility.yul\":11257:11260   */\n      0x00\n        /* \"#utility.yul\":11278:11345   */\n      tag_437\n        /* \"#utility.yul\":11342:11344   */\n      0x2c\n        /* \"#utility.yul\":11337:11340   */\n      dup4\n        /* \"#utility.yul\":11278:11345   */\n      tag_254\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11271:11345   */\n      swap2\n      pop\n        /* \"#utility.yul\":11354:11447   */\n      tag_438\n        /* \"#utility.yul\":11443:11446   */\n      dup3\n        /* \"#utility.yul\":11354:11447   */\n      tag_278\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11472:11474   */\n      0x40\n        /* \"#utility.yul\":11467:11470   */\n      dup3\n        /* \"#utility.yul\":11463:11475   */\n      add\n        /* \"#utility.yul\":11456:11475   */\n      swap1\n      pop\n        /* \"#utility.yul\":11115:11481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11487:11906   */\n    tag_92:\n        /* \"#utility.yul\":11653:11657   */\n      0x00\n        /* \"#utility.yul\":11691:11693   */\n      0x20\n        /* \"#utility.yul\":11680:11689   */\n      dup3\n        /* \"#utility.yul\":11676:11694   */\n      add\n        /* \"#utility.yul\":11668:11694   */\n      swap1\n      pop\n        /* \"#utility.yul\":11740:11749   */\n      dup2\n        /* \"#utility.yul\":11734:11738   */\n      dup2\n        /* \"#utility.yul\":11730:11750   */\n      sub\n        /* \"#utility.yul\":11726:11727   */\n      0x00\n        /* \"#utility.yul\":11715:11724   */\n      dup4\n        /* \"#utility.yul\":11711:11728   */\n      add\n        /* \"#utility.yul\":11704:11751   */\n      mstore\n        /* \"#utility.yul\":11768:11899   */\n      tag_440\n        /* \"#utility.yul\":11894:11898   */\n      dup2\n        /* \"#utility.yul\":11768:11899   */\n      tag_279\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11760:11899   */\n      swap1\n      pop\n        /* \"#utility.yul\":11487:11906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11912:12132   */\n    tag_280:\n        /* \"#utility.yul\":12052:12086   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":12048:12049   */\n      0x00\n        /* \"#utility.yul\":12040:12046   */\n      dup3\n        /* \"#utility.yul\":12036:12050   */\n      add\n        /* \"#utility.yul\":12029:12087   */\n      mstore\n        /* \"#utility.yul\":12121:12124   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12116:12118   */\n      0x20\n        /* \"#utility.yul\":12108:12114   */\n      dup3\n        /* \"#utility.yul\":12104:12119   */\n      add\n        /* \"#utility.yul\":12097:12125   */\n      mstore\n        /* \"#utility.yul\":11912:12132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12138:12504   */\n    tag_281:\n        /* \"#utility.yul\":12280:12283   */\n      0x00\n        /* \"#utility.yul\":12301:12368   */\n      tag_443\n        /* \"#utility.yul\":12365:12367   */\n      0x21\n        /* \"#utility.yul\":12360:12363   */\n      dup4\n        /* \"#utility.yul\":12301:12368   */\n      tag_254\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12294:12368   */\n      swap2\n      pop\n        /* \"#utility.yul\":12377:12470   */\n      tag_444\n        /* \"#utility.yul\":12466:12469   */\n      dup3\n        /* \"#utility.yul\":12377:12470   */\n      tag_280\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12495:12497   */\n      0x40\n        /* \"#utility.yul\":12490:12493   */\n      dup3\n        /* \"#utility.yul\":12486:12498   */\n      add\n        /* \"#utility.yul\":12479:12498   */\n      swap1\n      pop\n        /* \"#utility.yul\":12138:12504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12510:12929   */\n    tag_97:\n        /* \"#utility.yul\":12676:12680   */\n      0x00\n        /* \"#utility.yul\":12714:12716   */\n      0x20\n        /* \"#utility.yul\":12703:12712   */\n      dup3\n        /* \"#utility.yul\":12699:12717   */\n      add\n        /* \"#utility.yul\":12691:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12763:12772   */\n      dup2\n        /* \"#utility.yul\":12757:12761   */\n      dup2\n        /* \"#utility.yul\":12753:12773   */\n      sub\n        /* \"#utility.yul\":12749:12750   */\n      0x00\n        /* \"#utility.yul\":12738:12747   */\n      dup4\n        /* \"#utility.yul\":12734:12751   */\n      add\n        /* \"#utility.yul\":12727:12774   */\n      mstore\n        /* \"#utility.yul\":12791:12922   */\n      tag_446\n        /* \"#utility.yul\":12917:12921   */\n      dup2\n        /* \"#utility.yul\":12791:12922   */\n      tag_281\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":12783:12922   */\n      swap1\n      pop\n        /* \"#utility.yul\":12510:12929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12935:13178   */\n    tag_282:\n        /* \"#utility.yul\":13075:13109   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":13071:13072   */\n      0x00\n        /* \"#utility.yul\":13063:13069   */\n      dup3\n        /* \"#utility.yul\":13059:13073   */\n      add\n        /* \"#utility.yul\":13052:13110   */\n      mstore\n        /* \"#utility.yul\":13144:13170   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":13139:13141   */\n      0x20\n        /* \"#utility.yul\":13131:13137   */\n      dup3\n        /* \"#utility.yul\":13127:13142   */\n      add\n        /* \"#utility.yul\":13120:13171   */\n      mstore\n        /* \"#utility.yul\":12935:13178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13184:13550   */\n    tag_283:\n        /* \"#utility.yul\":13326:13329   */\n      0x00\n        /* \"#utility.yul\":13347:13414   */\n      tag_449\n        /* \"#utility.yul\":13411:13413   */\n      0x38\n        /* \"#utility.yul\":13406:13409   */\n      dup4\n        /* \"#utility.yul\":13347:13414   */\n      tag_254\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13340:13414   */\n      swap2\n      pop\n        /* \"#utility.yul\":13423:13516   */\n      tag_450\n        /* \"#utility.yul\":13512:13515   */\n      dup3\n        /* \"#utility.yul\":13423:13516   */\n      tag_282\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13541:13543   */\n      0x40\n        /* \"#utility.yul\":13536:13539   */\n      dup3\n        /* \"#utility.yul\":13532:13544   */\n      add\n        /* \"#utility.yul\":13525:13544   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13556:13975   */\n    tag_105:\n        /* \"#utility.yul\":13722:13726   */\n      0x00\n        /* \"#utility.yul\":13760:13762   */\n      0x20\n        /* \"#utility.yul\":13749:13758   */\n      dup3\n        /* \"#utility.yul\":13745:13763   */\n      add\n        /* \"#utility.yul\":13737:13763   */\n      swap1\n      pop\n        /* \"#utility.yul\":13809:13818   */\n      dup2\n        /* \"#utility.yul\":13803:13807   */\n      dup2\n        /* \"#utility.yul\":13799:13819   */\n      sub\n        /* \"#utility.yul\":13795:13796   */\n      0x00\n        /* \"#utility.yul\":13784:13793   */\n      dup4\n        /* \"#utility.yul\":13780:13797   */\n      add\n        /* \"#utility.yul\":13773:13820   */\n      mstore\n        /* \"#utility.yul\":13837:13968   */\n      tag_452\n        /* \"#utility.yul\":13963:13967   */\n      dup2\n        /* \"#utility.yul\":13837:13968   */\n      tag_283\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13829:13968   */\n      swap1\n      pop\n        /* \"#utility.yul\":13556:13975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13981:14217   */\n    tag_284:\n        /* \"#utility.yul\":14121:14155   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":14117:14118   */\n      0x00\n        /* \"#utility.yul\":14109:14115   */\n      dup3\n        /* \"#utility.yul\":14105:14119   */\n      add\n        /* \"#utility.yul\":14098:14156   */\n      mstore\n        /* \"#utility.yul\":14190:14209   */\n      0x776e6572206e6f7220617070726f766564000000000000000000000000000000\n        /* \"#utility.yul\":14185:14187   */\n      0x20\n        /* \"#utility.yul\":14177:14183   */\n      dup3\n        /* \"#utility.yul\":14173:14188   */\n      add\n        /* \"#utility.yul\":14166:14210   */\n      mstore\n        /* \"#utility.yul\":13981:14217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14223:14589   */\n    tag_285:\n        /* \"#utility.yul\":14365:14368   */\n      0x00\n        /* \"#utility.yul\":14386:14453   */\n      tag_455\n        /* \"#utility.yul\":14450:14452   */\n      0x31\n        /* \"#utility.yul\":14445:14448   */\n      dup4\n        /* \"#utility.yul\":14386:14453   */\n      tag_254\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14379:14453   */\n      swap2\n      pop\n        /* \"#utility.yul\":14462:14555   */\n      tag_456\n        /* \"#utility.yul\":14551:14554   */\n      dup3\n        /* \"#utility.yul\":14462:14555   */\n      tag_284\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14580:14582   */\n      0x40\n        /* \"#utility.yul\":14575:14578   */\n      dup3\n        /* \"#utility.yul\":14571:14583   */\n      add\n        /* \"#utility.yul\":14564:14583   */\n      swap1\n      pop\n        /* \"#utility.yul\":14223:14589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14595:15014   */\n    tag_114:\n        /* \"#utility.yul\":14761:14765   */\n      0x00\n        /* \"#utility.yul\":14799:14801   */\n      0x20\n        /* \"#utility.yul\":14788:14797   */\n      dup3\n        /* \"#utility.yul\":14784:14802   */\n      add\n        /* \"#utility.yul\":14776:14802   */\n      swap1\n      pop\n        /* \"#utility.yul\":14848:14857   */\n      dup2\n        /* \"#utility.yul\":14842:14846   */\n      dup2\n        /* \"#utility.yul\":14838:14858   */\n      sub\n        /* \"#utility.yul\":14834:14835   */\n      0x00\n        /* \"#utility.yul\":14823:14832   */\n      dup4\n        /* \"#utility.yul\":14819:14836   */\n      add\n        /* \"#utility.yul\":14812:14859   */\n      mstore\n        /* \"#utility.yul\":14876:15007   */\n      tag_458\n        /* \"#utility.yul\":15002:15006   */\n      dup2\n        /* \"#utility.yul\":14876:15007   */\n      tag_285\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14868:15007   */\n      swap1\n      pop\n        /* \"#utility.yul\":14595:15014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15020:15248   */\n    tag_286:\n        /* \"#utility.yul\":15160:15194   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":15156:15157   */\n      0x00\n        /* \"#utility.yul\":15148:15154   */\n      dup3\n        /* \"#utility.yul\":15144:15158   */\n      add\n        /* \"#utility.yul\":15137:15195   */\n      mstore\n        /* \"#utility.yul\":15229:15240   */\n      0x656e7420746f6b656e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15224:15226   */\n      0x20\n        /* \"#utility.yul\":15216:15222   */\n      dup3\n        /* \"#utility.yul\":15212:15227   */\n      add\n        /* \"#utility.yul\":15205:15241   */\n      mstore\n        /* \"#utility.yul\":15020:15248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15254:15620   */\n    tag_287:\n        /* \"#utility.yul\":15396:15399   */\n      0x00\n        /* \"#utility.yul\":15417:15484   */\n      tag_461\n        /* \"#utility.yul\":15481:15483   */\n      0x29\n        /* \"#utility.yul\":15476:15479   */\n      dup4\n        /* \"#utility.yul\":15417:15484   */\n      tag_254\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15410:15484   */\n      swap2\n      pop\n        /* \"#utility.yul\":15493:15586   */\n      tag_462\n        /* \"#utility.yul\":15582:15585   */\n      dup3\n        /* \"#utility.yul\":15493:15586   */\n      tag_286\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15611:15613   */\n      0x40\n        /* \"#utility.yul\":15606:15609   */\n      dup3\n        /* \"#utility.yul\":15602:15614   */\n      add\n        /* \"#utility.yul\":15595:15614   */\n      swap1\n      pop\n        /* \"#utility.yul\":15254:15620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15626:16045   */\n    tag_122:\n        /* \"#utility.yul\":15792:15796   */\n      0x00\n        /* \"#utility.yul\":15830:15832   */\n      0x20\n        /* \"#utility.yul\":15819:15828   */\n      dup3\n        /* \"#utility.yul\":15815:15833   */\n      add\n        /* \"#utility.yul\":15807:15833   */\n      swap1\n      pop\n        /* \"#utility.yul\":15879:15888   */\n      dup2\n        /* \"#utility.yul\":15873:15877   */\n      dup2\n        /* \"#utility.yul\":15869:15889   */\n      sub\n        /* \"#utility.yul\":15865:15866   */\n      0x00\n        /* \"#utility.yul\":15854:15863   */\n      dup4\n        /* \"#utility.yul\":15850:15867   */\n      add\n        /* \"#utility.yul\":15843:15890   */\n      mstore\n        /* \"#utility.yul\":15907:16038   */\n      tag_464\n        /* \"#utility.yul\":16033:16037   */\n      dup2\n        /* \"#utility.yul\":15907:16038   */\n      tag_287\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15899:16038   */\n      swap1\n      pop\n        /* \"#utility.yul\":15626:16045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16051:16280   */\n    tag_288:\n        /* \"#utility.yul\":16191:16225   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":16187:16188   */\n      0x00\n        /* \"#utility.yul\":16179:16185   */\n      dup3\n        /* \"#utility.yul\":16175:16189   */\n      add\n        /* \"#utility.yul\":16168:16226   */\n      mstore\n        /* \"#utility.yul\":16260:16272   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16255:16257   */\n      0x20\n        /* \"#utility.yul\":16247:16253   */\n      dup3\n        /* \"#utility.yul\":16243:16258   */\n      add\n        /* \"#utility.yul\":16236:16273   */\n      mstore\n        /* \"#utility.yul\":16051:16280   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16652   */\n    tag_289:\n        /* \"#utility.yul\":16428:16431   */\n      0x00\n        /* \"#utility.yul\":16449:16516   */\n      tag_467\n        /* \"#utility.yul\":16513:16515   */\n      0x2a\n        /* \"#utility.yul\":16508:16511   */\n      dup4\n        /* \"#utility.yul\":16449:16516   */\n      tag_254\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16442:16516   */\n      swap2\n      pop\n        /* \"#utility.yul\":16525:16618   */\n      tag_468\n        /* \"#utility.yul\":16614:16617   */\n      dup3\n        /* \"#utility.yul\":16525:16618   */\n      tag_288\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16643:16645   */\n      0x40\n        /* \"#utility.yul\":16638:16641   */\n      dup3\n        /* \"#utility.yul\":16634:16646   */\n      add\n        /* \"#utility.yul\":16627:16646   */\n      swap1\n      pop\n        /* \"#utility.yul\":16286:16652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16658:17077   */\n    tag_126:\n        /* \"#utility.yul\":16824:16828   */\n      0x00\n        /* \"#utility.yul\":16862:16864   */\n      0x20\n        /* \"#utility.yul\":16851:16860   */\n      dup3\n        /* \"#utility.yul\":16847:16865   */\n      add\n        /* \"#utility.yul\":16839:16865   */\n      swap1\n      pop\n        /* \"#utility.yul\":16911:16920   */\n      dup2\n        /* \"#utility.yul\":16905:16909   */\n      dup2\n        /* \"#utility.yul\":16901:16921   */\n      sub\n        /* \"#utility.yul\":16897:16898   */\n      0x00\n        /* \"#utility.yul\":16886:16895   */\n      dup4\n        /* \"#utility.yul\":16882:16899   */\n      add\n        /* \"#utility.yul\":16875:16922   */\n      mstore\n        /* \"#utility.yul\":16939:17070   */\n      tag_470\n        /* \"#utility.yul\":17065:17069   */\n      dup2\n        /* \"#utility.yul\":16939:17070   */\n      tag_289\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16931:17070   */\n      swap1\n      pop\n        /* \"#utility.yul\":16658:17077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17083:17258   */\n    tag_290:\n        /* \"#utility.yul\":17223:17250   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":17219:17220   */\n      0x00\n        /* \"#utility.yul\":17211:17217   */\n      dup3\n        /* \"#utility.yul\":17207:17221   */\n      add\n        /* \"#utility.yul\":17200:17251   */\n      mstore\n        /* \"#utility.yul\":17083:17258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17264:17630   */\n    tag_291:\n        /* \"#utility.yul\":17406:17409   */\n      0x00\n        /* \"#utility.yul\":17427:17494   */\n      tag_473\n        /* \"#utility.yul\":17491:17493   */\n      0x19\n        /* \"#utility.yul\":17486:17489   */\n      dup4\n        /* \"#utility.yul\":17427:17494   */\n      tag_254\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17420:17494   */\n      swap2\n      pop\n        /* \"#utility.yul\":17503:17596   */\n      tag_474\n        /* \"#utility.yul\":17592:17595   */\n      dup3\n        /* \"#utility.yul\":17503:17596   */\n      tag_290\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17621:17623   */\n      0x20\n        /* \"#utility.yul\":17616:17619   */\n      dup3\n        /* \"#utility.yul\":17612:17624   */\n      add\n        /* \"#utility.yul\":17605:17624   */\n      swap1\n      pop\n        /* \"#utility.yul\":17264:17630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17636:18055   */\n    tag_137:\n        /* \"#utility.yul\":17802:17806   */\n      0x00\n        /* \"#utility.yul\":17840:17842   */\n      0x20\n        /* \"#utility.yul\":17829:17838   */\n      dup3\n        /* \"#utility.yul\":17825:17843   */\n      add\n        /* \"#utility.yul\":17817:17843   */\n      swap1\n      pop\n        /* \"#utility.yul\":17889:17898   */\n      dup2\n        /* \"#utility.yul\":17883:17887   */\n      dup2\n        /* \"#utility.yul\":17879:17899   */\n      sub\n        /* \"#utility.yul\":17875:17876   */\n      0x00\n        /* \"#utility.yul\":17864:17873   */\n      dup4\n        /* \"#utility.yul\":17860:17877   */\n      add\n        /* \"#utility.yul\":17853:17900   */\n      mstore\n        /* \"#utility.yul\":17917:18048   */\n      tag_476\n        /* \"#utility.yul\":18043:18047   */\n      dup2\n        /* \"#utility.yul\":17917:18048   */\n      tag_291\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17909:18048   */\n      swap1\n      pop\n        /* \"#utility.yul\":17636:18055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18061:18295   */\n    tag_292:\n        /* \"#utility.yul\":18201:18235   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":18197:18198   */\n      0x00\n        /* \"#utility.yul\":18189:18195   */\n      dup3\n        /* \"#utility.yul\":18185:18199   */\n      add\n        /* \"#utility.yul\":18178:18236   */\n      mstore\n        /* \"#utility.yul\":18270:18287   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":18265:18267   */\n      0x20\n        /* \"#utility.yul\":18257:18263   */\n      dup3\n        /* \"#utility.yul\":18253:18268   */\n      add\n        /* \"#utility.yul\":18246:18288   */\n      mstore\n        /* \"#utility.yul\":18061:18295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18301:18667   */\n    tag_293:\n        /* \"#utility.yul\":18443:18446   */\n      0x00\n        /* \"#utility.yul\":18464:18531   */\n      tag_479\n        /* \"#utility.yul\":18528:18530   */\n      0x2f\n        /* \"#utility.yul\":18523:18526   */\n      dup4\n        /* \"#utility.yul\":18464:18531   */\n      tag_254\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18457:18531   */\n      swap2\n      pop\n        /* \"#utility.yul\":18540:18633   */\n      tag_480\n        /* \"#utility.yul\":18629:18632   */\n      dup3\n        /* \"#utility.yul\":18540:18633   */\n      tag_292\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":18658:18660   */\n      0x40\n        /* \"#utility.yul\":18653:18656   */\n      dup3\n        /* \"#utility.yul\":18649:18661   */\n      add\n        /* \"#utility.yul\":18642:18661   */\n      swap1\n      pop\n        /* \"#utility.yul\":18301:18667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18673:19092   */\n    tag_152:\n        /* \"#utility.yul\":18839:18843   */\n      0x00\n        /* \"#utility.yul\":18877:18879   */\n      0x20\n        /* \"#utility.yul\":18866:18875   */\n      dup3\n        /* \"#utility.yul\":18862:18880   */\n      add\n        /* \"#utility.yul\":18854:18880   */\n      swap1\n      pop\n        /* \"#utility.yul\":18926:18935   */\n      dup2\n        /* \"#utility.yul\":18920:18924   */\n      dup2\n        /* \"#utility.yul\":18916:18936   */\n      sub\n        /* \"#utility.yul\":18912:18913   */\n      0x00\n        /* \"#utility.yul\":18901:18910   */\n      dup4\n        /* \"#utility.yul\":18897:18914   */\n      add\n        /* \"#utility.yul\":18890:18937   */\n      mstore\n        /* \"#utility.yul\":18954:19085   */\n      tag_482\n        /* \"#utility.yul\":19080:19084   */\n      dup2\n        /* \"#utility.yul\":18954:19085   */\n      tag_293\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18946:19085   */\n      swap1\n      pop\n        /* \"#utility.yul\":18673:19092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19098:19246   */\n    tag_294:\n        /* \"#utility.yul\":19200:19211   */\n      0x00\n        /* \"#utility.yul\":19237:19240   */\n      dup2\n        /* \"#utility.yul\":19222:19240   */\n      swap1\n      pop\n        /* \"#utility.yul\":19098:19246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19252:19642   */\n    tag_295:\n        /* \"#utility.yul\":19358:19361   */\n      0x00\n        /* \"#utility.yul\":19386:19425   */\n      tag_485\n        /* \"#utility.yul\":19419:19424   */\n      dup3\n        /* \"#utility.yul\":19386:19425   */\n      tag_253\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":19441:19530   */\n      tag_486\n        /* \"#utility.yul\":19523:19529   */\n      dup2\n        /* \"#utility.yul\":19518:19521   */\n      dup6\n        /* \"#utility.yul\":19441:19530   */\n      tag_294\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":19434:19530   */\n      swap4\n      pop\n        /* \"#utility.yul\":19539:19604   */\n      tag_487\n        /* \"#utility.yul\":19597:19603   */\n      dup2\n        /* \"#utility.yul\":19592:19595   */\n      dup6\n        /* \"#utility.yul\":19585:19589   */\n      0x20\n        /* \"#utility.yul\":19578:19583   */\n      dup7\n        /* \"#utility.yul\":19574:19590   */\n      add\n        /* \"#utility.yul\":19539:19604   */\n      tag_255\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":19629:19635   */\n      dup1\n        /* \"#utility.yul\":19624:19627   */\n      dup5\n        /* \"#utility.yul\":19620:19636   */\n      add\n        /* \"#utility.yul\":19613:19636   */\n      swap2\n      pop\n        /* \"#utility.yul\":19362:19642   */\n      pop\n        /* \"#utility.yul\":19252:19642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19648:20083   */\n    tag_160:\n        /* \"#utility.yul\":19828:19831   */\n      0x00\n        /* \"#utility.yul\":19850:19945   */\n      tag_489\n        /* \"#utility.yul\":19941:19944   */\n      dup3\n        /* \"#utility.yul\":19932:19938   */\n      dup6\n        /* \"#utility.yul\":19850:19945   */\n      tag_295\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19843:19945   */\n      swap2\n      pop\n        /* \"#utility.yul\":19962:20057   */\n      tag_490\n        /* \"#utility.yul\":20053:20056   */\n      dup3\n        /* \"#utility.yul\":20044:20050   */\n      dup5\n        /* \"#utility.yul\":19962:20057   */\n      tag_295\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":19955:20057   */\n      swap2\n      pop\n        /* \"#utility.yul\":20074:20077   */\n      dup2\n        /* \"#utility.yul\":20067:20077   */\n      swap1\n      pop\n        /* \"#utility.yul\":19648:20083   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20089:20320   */\n    tag_296:\n        /* \"#utility.yul\":20229:20263   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":20225:20226   */\n      0x00\n        /* \"#utility.yul\":20217:20223   */\n      dup3\n        /* \"#utility.yul\":20213:20227   */\n      add\n        /* \"#utility.yul\":20206:20264   */\n      mstore\n        /* \"#utility.yul\":20298:20312   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":20293:20295   */\n      0x20\n        /* \"#utility.yul\":20285:20291   */\n      dup3\n        /* \"#utility.yul\":20281:20296   */\n      add\n        /* \"#utility.yul\":20274:20313   */\n      mstore\n        /* \"#utility.yul\":20089:20320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20326:20692   */\n    tag_297:\n        /* \"#utility.yul\":20468:20471   */\n      0x00\n        /* \"#utility.yul\":20489:20556   */\n      tag_493\n        /* \"#utility.yul\":20553:20555   */\n      0x2c\n        /* \"#utility.yul\":20548:20551   */\n      dup4\n        /* \"#utility.yul\":20489:20556   */\n      tag_254\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":20482:20556   */\n      swap2\n      pop\n        /* \"#utility.yul\":20565:20658   */\n      tag_494\n        /* \"#utility.yul\":20654:20657   */\n      dup3\n        /* \"#utility.yul\":20565:20658   */\n      tag_296\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":20683:20685   */\n      0x40\n        /* \"#utility.yul\":20678:20681   */\n      dup3\n        /* \"#utility.yul\":20674:20686   */\n      add\n        /* \"#utility.yul\":20667:20686   */\n      swap1\n      pop\n        /* \"#utility.yul\":20326:20692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20698:21117   */\n    tag_171:\n        /* \"#utility.yul\":20864:20868   */\n      0x00\n        /* \"#utility.yul\":20902:20904   */\n      0x20\n        /* \"#utility.yul\":20891:20900   */\n      dup3\n        /* \"#utility.yul\":20887:20905   */\n      add\n        /* \"#utility.yul\":20879:20905   */\n      swap1\n      pop\n        /* \"#utility.yul\":20951:20960   */\n      dup2\n        /* \"#utility.yul\":20945:20949   */\n      dup2\n        /* \"#utility.yul\":20941:20961   */\n      sub\n        /* \"#utility.yul\":20937:20938   */\n      0x00\n        /* \"#utility.yul\":20926:20935   */\n      dup4\n        /* \"#utility.yul\":20922:20939   */\n      add\n        /* \"#utility.yul\":20915:20962   */\n      mstore\n        /* \"#utility.yul\":20979:21110   */\n      tag_496\n        /* \"#utility.yul\":21105:21109   */\n      dup2\n        /* \"#utility.yul\":20979:21110   */\n      tag_297\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":20971:21110   */\n      swap1\n      pop\n        /* \"#utility.yul\":20698:21117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21123:21351   */\n    tag_298:\n        /* \"#utility.yul\":21263:21297   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":21259:21260   */\n      0x00\n        /* \"#utility.yul\":21251:21257   */\n      dup3\n        /* \"#utility.yul\":21247:21261   */\n      add\n        /* \"#utility.yul\":21240:21298   */\n      mstore\n        /* \"#utility.yul\":21332:21343   */\n      0x73206e6f74206f776e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21327:21329   */\n      0x20\n        /* \"#utility.yul\":21319:21325   */\n      dup3\n        /* \"#utility.yul\":21315:21330   */\n      add\n        /* \"#utility.yul\":21308:21344   */\n      mstore\n        /* \"#utility.yul\":21123:21351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21357:21723   */\n    tag_299:\n        /* \"#utility.yul\":21499:21502   */\n      0x00\n        /* \"#utility.yul\":21520:21587   */\n      tag_499\n        /* \"#utility.yul\":21584:21586   */\n      0x29\n        /* \"#utility.yul\":21579:21582   */\n      dup4\n        /* \"#utility.yul\":21520:21587   */\n      tag_254\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":21513:21587   */\n      swap2\n      pop\n        /* \"#utility.yul\":21596:21689   */\n      tag_500\n        /* \"#utility.yul\":21685:21688   */\n      dup3\n        /* \"#utility.yul\":21596:21689   */\n      tag_298\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":21714:21716   */\n      0x40\n        /* \"#utility.yul\":21709:21712   */\n      dup3\n        /* \"#utility.yul\":21705:21717   */\n      add\n        /* \"#utility.yul\":21698:21717   */\n      swap1\n      pop\n        /* \"#utility.yul\":21357:21723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21729:22148   */\n    tag_181:\n        /* \"#utility.yul\":21895:21899   */\n      0x00\n        /* \"#utility.yul\":21933:21935   */\n      0x20\n        /* \"#utility.yul\":21922:21931   */\n      dup3\n        /* \"#utility.yul\":21918:21936   */\n      add\n        /* \"#utility.yul\":21910:21936   */\n      swap1\n      pop\n        /* \"#utility.yul\":21982:21991   */\n      dup2\n        /* \"#utility.yul\":21976:21980   */\n      dup2\n        /* \"#utility.yul\":21972:21992   */\n      sub\n        /* \"#utility.yul\":21968:21969   */\n      0x00\n        /* \"#utility.yul\":21957:21966   */\n      dup4\n        /* \"#utility.yul\":21953:21970   */\n      add\n        /* \"#utility.yul\":21946:21993   */\n      mstore\n        /* \"#utility.yul\":22010:22141   */\n      tag_502\n        /* \"#utility.yul\":22136:22140   */\n      dup2\n        /* \"#utility.yul\":22010:22141   */\n      tag_299\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":22002:22141   */\n      swap1\n      pop\n        /* \"#utility.yul\":21729:22148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22154:22377   */\n    tag_300:\n        /* \"#utility.yul\":22294:22328   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":22290:22291   */\n      0x00\n        /* \"#utility.yul\":22282:22288   */\n      dup3\n        /* \"#utility.yul\":22278:22292   */\n      add\n        /* \"#utility.yul\":22271:22329   */\n      mstore\n        /* \"#utility.yul\":22363:22369   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22358:22360   */\n      0x20\n        /* \"#utility.yul\":22350:22356   */\n      dup3\n        /* \"#utility.yul\":22346:22361   */\n      add\n        /* \"#utility.yul\":22339:22370   */\n      mstore\n        /* \"#utility.yul\":22154:22377   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22383:22749   */\n    tag_301:\n        /* \"#utility.yul\":22525:22528   */\n      0x00\n        /* \"#utility.yul\":22546:22613   */\n      tag_505\n        /* \"#utility.yul\":22610:22612   */\n      0x24\n        /* \"#utility.yul\":22605:22608   */\n      dup4\n        /* \"#utility.yul\":22546:22613   */\n      tag_254\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":22539:22613   */\n      swap2\n      pop\n        /* \"#utility.yul\":22622:22715   */\n      tag_506\n        /* \"#utility.yul\":22711:22714   */\n      dup3\n        /* \"#utility.yul\":22622:22715   */\n      tag_300\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":22740:22742   */\n      0x40\n        /* \"#utility.yul\":22735:22738   */\n      dup3\n        /* \"#utility.yul\":22731:22743   */\n      add\n        /* \"#utility.yul\":22724:22743   */\n      swap1\n      pop\n        /* \"#utility.yul\":22383:22749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22755:23174   */\n    tag_184:\n        /* \"#utility.yul\":22921:22925   */\n      0x00\n        /* \"#utility.yul\":22959:22961   */\n      0x20\n        /* \"#utility.yul\":22948:22957   */\n      dup3\n        /* \"#utility.yul\":22944:22962   */\n      add\n        /* \"#utility.yul\":22936:22962   */\n      swap1\n      pop\n        /* \"#utility.yul\":23008:23017   */\n      dup2\n        /* \"#utility.yul\":23002:23006   */\n      dup2\n        /* \"#utility.yul\":22998:23018   */\n      sub\n        /* \"#utility.yul\":22994:22995   */\n      0x00\n        /* \"#utility.yul\":22983:22992   */\n      dup4\n        /* \"#utility.yul\":22979:22996   */\n      add\n        /* \"#utility.yul\":22972:23019   */\n      mstore\n        /* \"#utility.yul\":23036:23167   */\n      tag_508\n        /* \"#utility.yul\":23162:23166   */\n      dup2\n        /* \"#utility.yul\":23036:23167   */\n      tag_301\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":23028:23167   */\n      swap1\n      pop\n        /* \"#utility.yul\":22755:23174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23180:23360   */\n    tag_302:\n        /* \"#utility.yul\":23228:23305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23225:23226   */\n      0x00\n        /* \"#utility.yul\":23218:23306   */\n      mstore\n        /* \"#utility.yul\":23325:23329   */\n      0x11\n        /* \"#utility.yul\":23322:23323   */\n      0x04\n        /* \"#utility.yul\":23315:23330   */\n      mstore\n        /* \"#utility.yul\":23349:23353   */\n      0x24\n        /* \"#utility.yul\":23346:23347   */\n      0x00\n        /* \"#utility.yul\":23339:23354   */\n      revert\n        /* \"#utility.yul\":23366:23560   */\n    tag_189:\n        /* \"#utility.yul\":23406:23410   */\n      0x00\n        /* \"#utility.yul\":23426:23446   */\n      tag_511\n        /* \"#utility.yul\":23444:23445   */\n      dup3\n        /* \"#utility.yul\":23426:23446   */\n      tag_258\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":23421:23446   */\n      swap2\n      pop\n        /* \"#utility.yul\":23460:23480   */\n      tag_512\n        /* \"#utility.yul\":23478:23479   */\n      dup4\n        /* \"#utility.yul\":23460:23480   */\n      tag_258\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":23455:23480   */\n      swap3\n      pop\n        /* \"#utility.yul\":23504:23505   */\n      dup3\n        /* \"#utility.yul\":23501:23502   */\n      dup3\n        /* \"#utility.yul\":23497:23506   */\n      sub\n        /* \"#utility.yul\":23489:23506   */\n      swap1\n      pop\n        /* \"#utility.yul\":23528:23529   */\n      dup2\n        /* \"#utility.yul\":23522:23526   */\n      dup2\n        /* \"#utility.yul\":23519:23530   */\n      gt\n        /* \"#utility.yul\":23516:23553   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":23533:23551   */\n      tag_514\n      tag_302\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":23516:23553   */\n    tag_513:\n        /* \"#utility.yul\":23366:23560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23566:23757   */\n    tag_191:\n        /* \"#utility.yul\":23606:23609   */\n      0x00\n        /* \"#utility.yul\":23625:23645   */\n      tag_516\n        /* \"#utility.yul\":23643:23644   */\n      dup3\n        /* \"#utility.yul\":23625:23645   */\n      tag_258\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":23620:23645   */\n      swap2\n      pop\n        /* \"#utility.yul\":23659:23679   */\n      tag_517\n        /* \"#utility.yul\":23677:23678   */\n      dup4\n        /* \"#utility.yul\":23659:23679   */\n      tag_258\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":23654:23679   */\n      swap3\n      pop\n        /* \"#utility.yul\":23702:23703   */\n      dup3\n        /* \"#utility.yul\":23699:23700   */\n      dup3\n        /* \"#utility.yul\":23695:23704   */\n      add\n        /* \"#utility.yul\":23688:23704   */\n      swap1\n      pop\n        /* \"#utility.yul\":23723:23726   */\n      dup1\n        /* \"#utility.yul\":23720:23721   */\n      dup3\n        /* \"#utility.yul\":23717:23727   */\n      gt\n        /* \"#utility.yul\":23714:23750   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":23730:23748   */\n      tag_519\n      tag_302\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":23714:23750   */\n    tag_518:\n        /* \"#utility.yul\":23566:23757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23763:24000   */\n    tag_303:\n        /* \"#utility.yul\":23903:23937   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":23899:23900   */\n      0x00\n        /* \"#utility.yul\":23891:23897   */\n      dup3\n        /* \"#utility.yul\":23887:23901   */\n      add\n        /* \"#utility.yul\":23880:23938   */\n      mstore\n        /* \"#utility.yul\":23972:23992   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":23967:23969   */\n      0x20\n        /* \"#utility.yul\":23959:23965   */\n      dup3\n        /* \"#utility.yul\":23955:23970   */\n      add\n        /* \"#utility.yul\":23948:23993   */\n      mstore\n        /* \"#utility.yul\":23763:24000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24006:24372   */\n    tag_304:\n        /* \"#utility.yul\":24148:24151   */\n      0x00\n        /* \"#utility.yul\":24169:24236   */\n      tag_522\n        /* \"#utility.yul\":24233:24235   */\n      0x32\n        /* \"#utility.yul\":24228:24231   */\n      dup4\n        /* \"#utility.yul\":24169:24236   */\n      tag_254\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":24162:24236   */\n      swap2\n      pop\n        /* \"#utility.yul\":24245:24338   */\n      tag_523\n        /* \"#utility.yul\":24334:24337   */\n      dup3\n        /* \"#utility.yul\":24245:24338   */\n      tag_303\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":24363:24365   */\n      0x40\n        /* \"#utility.yul\":24358:24361   */\n      dup3\n        /* \"#utility.yul\":24354:24366   */\n      add\n        /* \"#utility.yul\":24347:24366   */\n      swap1\n      pop\n        /* \"#utility.yul\":24006:24372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24378:24797   */\n    tag_198:\n        /* \"#utility.yul\":24544:24548   */\n      0x00\n        /* \"#utility.yul\":24582:24584   */\n      0x20\n        /* \"#utility.yul\":24571:24580   */\n      dup3\n        /* \"#utility.yul\":24567:24585   */\n      add\n        /* \"#utility.yul\":24559:24585   */\n      swap1\n      pop\n        /* \"#utility.yul\":24631:24640   */\n      dup2\n        /* \"#utility.yul\":24625:24629   */\n      dup2\n        /* \"#utility.yul\":24621:24641   */\n      sub\n        /* \"#utility.yul\":24617:24618   */\n      0x00\n        /* \"#utility.yul\":24606:24615   */\n      dup4\n        /* \"#utility.yul\":24602:24619   */\n      add\n        /* \"#utility.yul\":24595:24642   */\n      mstore\n        /* \"#utility.yul\":24659:24790   */\n      tag_525\n        /* \"#utility.yul\":24785:24789   */\n      dup2\n        /* \"#utility.yul\":24659:24790   */\n      tag_304\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24651:24790   */\n      swap1\n      pop\n        /* \"#utility.yul\":24378:24797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24803:25036   */\n    tag_205:\n        /* \"#utility.yul\":24842:24845   */\n      0x00\n        /* \"#utility.yul\":24865:24889   */\n      tag_527\n        /* \"#utility.yul\":24883:24888   */\n      dup3\n        /* \"#utility.yul\":24865:24889   */\n      tag_258\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":24856:24889   */\n      swap2\n      pop\n        /* \"#utility.yul\":24911:24977   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24904:24909   */\n      dup3\n        /* \"#utility.yul\":24901:24978   */\n      sub\n        /* \"#utility.yul\":24898:25001   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":24981:24999   */\n      tag_529\n      tag_302\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":24898:25001   */\n    tag_528:\n        /* \"#utility.yul\":25028:25029   */\n      0x01\n        /* \"#utility.yul\":25021:25026   */\n      dup3\n        /* \"#utility.yul\":25017:25030   */\n      add\n        /* \"#utility.yul\":25010:25030   */\n      swap1\n      pop\n        /* \"#utility.yul\":24803:25036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25042:25222   */\n    tag_305:\n        /* \"#utility.yul\":25090:25167   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25087:25088   */\n      0x00\n        /* \"#utility.yul\":25080:25168   */\n      mstore\n        /* \"#utility.yul\":25187:25191   */\n      0x12\n        /* \"#utility.yul\":25184:25185   */\n      0x04\n        /* \"#utility.yul\":25177:25192   */\n      mstore\n        /* \"#utility.yul\":25211:25215   */\n      0x24\n        /* \"#utility.yul\":25208:25209   */\n      0x00\n        /* \"#utility.yul\":25201:25216   */\n      revert\n        /* \"#utility.yul\":25228:25413   */\n    tag_207:\n        /* \"#utility.yul\":25268:25269   */\n      0x00\n        /* \"#utility.yul\":25285:25305   */\n      tag_532\n        /* \"#utility.yul\":25303:25304   */\n      dup3\n        /* \"#utility.yul\":25285:25305   */\n      tag_258\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":25280:25305   */\n      swap2\n      pop\n        /* \"#utility.yul\":25319:25339   */\n      tag_533\n        /* \"#utility.yul\":25337:25338   */\n      dup4\n        /* \"#utility.yul\":25319:25339   */\n      tag_258\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":25314:25339   */\n      swap3\n      pop\n        /* \"#utility.yul\":25358:25359   */\n      dup3\n        /* \"#utility.yul\":25348:25383   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":25363:25381   */\n      tag_535\n      tag_305\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25348:25383   */\n    tag_534:\n        /* \"#utility.yul\":25405:25406   */\n      dup3\n        /* \"#utility.yul\":25402:25403   */\n      dup3\n        /* \"#utility.yul\":25398:25407   */\n      div\n        /* \"#utility.yul\":25393:25407   */\n      swap1\n      pop\n        /* \"#utility.yul\":25228:25413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25419:25595   */\n    tag_216:\n        /* \"#utility.yul\":25451:25452   */\n      0x00\n        /* \"#utility.yul\":25468:25488   */\n      tag_537\n        /* \"#utility.yul\":25486:25487   */\n      dup3\n        /* \"#utility.yul\":25468:25488   */\n      tag_258\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25463:25488   */\n      swap2\n      pop\n        /* \"#utility.yul\":25502:25522   */\n      tag_538\n        /* \"#utility.yul\":25520:25521   */\n      dup4\n        /* \"#utility.yul\":25502:25522   */\n      tag_258\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":25497:25522   */\n      swap3\n      pop\n        /* \"#utility.yul\":25541:25542   */\n      dup3\n        /* \"#utility.yul\":25531:25566   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":25546:25564   */\n      tag_540\n      tag_305\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":25531:25566   */\n    tag_539:\n        /* \"#utility.yul\":25587:25588   */\n      dup3\n        /* \"#utility.yul\":25584:25585   */\n      dup3\n        /* \"#utility.yul\":25580:25589   */\n      mod\n        /* \"#utility.yul\":25575:25589   */\n      swap1\n      pop\n        /* \"#utility.yul\":25419:25595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25601:25781   */\n    tag_220:\n        /* \"#utility.yul\":25649:25726   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25646:25647   */\n      0x00\n        /* \"#utility.yul\":25639:25727   */\n      mstore\n        /* \"#utility.yul\":25746:25750   */\n      0x32\n        /* \"#utility.yul\":25743:25744   */\n      0x04\n        /* \"#utility.yul\":25736:25751   */\n      mstore\n        /* \"#utility.yul\":25770:25774   */\n      0x24\n        /* \"#utility.yul\":25767:25768   */\n      0x00\n        /* \"#utility.yul\":25760:25775   */\n      revert\n        /* \"#utility.yul\":25787:25885   */\n    tag_306:\n        /* \"#utility.yul\":25838:25844   */\n      0x00\n        /* \"#utility.yul\":25872:25877   */\n      dup2\n        /* \"#utility.yul\":25866:25878   */\n      mload\n        /* \"#utility.yul\":25856:25878   */\n      swap1\n      pop\n        /* \"#utility.yul\":25787:25885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25891:26059   */\n    tag_307:\n        /* \"#utility.yul\":25974:25985   */\n      0x00\n        /* \"#utility.yul\":26008:26014   */\n      dup3\n        /* \"#utility.yul\":26003:26006   */\n      dup3\n        /* \"#utility.yul\":25996:26015   */\n      mstore\n        /* \"#utility.yul\":26048:26052   */\n      0x20\n        /* \"#utility.yul\":26043:26046   */\n      dup3\n        /* \"#utility.yul\":26039:26053   */\n      add\n        /* \"#utility.yul\":26024:26053   */\n      swap1\n      pop\n        /* \"#utility.yul\":25891:26059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26065:26438   */\n    tag_308:\n        /* \"#utility.yul\":26151:26154   */\n      0x00\n        /* \"#utility.yul\":26179:26217   */\n      tag_545\n        /* \"#utility.yul\":26211:26216   */\n      dup3\n        /* \"#utility.yul\":26179:26217   */\n      tag_306\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":26233:26303   */\n      tag_546\n        /* \"#utility.yul\":26296:26302   */\n      dup2\n        /* \"#utility.yul\":26291:26294   */\n      dup6\n        /* \"#utility.yul\":26233:26303   */\n      tag_307\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":26226:26303   */\n      swap4\n      pop\n        /* \"#utility.yul\":26312:26377   */\n      tag_547\n        /* \"#utility.yul\":26370:26376   */\n      dup2\n        /* \"#utility.yul\":26365:26368   */\n      dup6\n        /* \"#utility.yul\":26358:26362   */\n      0x20\n        /* \"#utility.yul\":26351:26356   */\n      dup7\n        /* \"#utility.yul\":26347:26363   */\n      add\n        /* \"#utility.yul\":26312:26377   */\n      tag_255\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":26402:26431   */\n      tag_548\n        /* \"#utility.yul\":26424:26430   */\n      dup2\n        /* \"#utility.yul\":26402:26431   */\n      tag_256\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26397:26400   */\n      dup5\n        /* \"#utility.yul\":26393:26432   */\n      add\n        /* \"#utility.yul\":26386:26432   */\n      swap2\n      pop\n        /* \"#utility.yul\":26155:26438   */\n      pop\n        /* \"#utility.yul\":26065:26438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26444:27084   */\n    tag_229:\n        /* \"#utility.yul\":26639:26643   */\n      0x00\n        /* \"#utility.yul\":26677:26680   */\n      0x80\n        /* \"#utility.yul\":26666:26675   */\n      dup3\n        /* \"#utility.yul\":26662:26681   */\n      add\n        /* \"#utility.yul\":26654:26681   */\n      swap1\n      pop\n        /* \"#utility.yul\":26691:26762   */\n      tag_550\n        /* \"#utility.yul\":26759:26760   */\n      0x00\n        /* \"#utility.yul\":26748:26757   */\n      dup4\n        /* \"#utility.yul\":26744:26761   */\n      add\n        /* \"#utility.yul\":26735:26741   */\n      dup8\n        /* \"#utility.yul\":26691:26762   */\n      tag_263\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":26772:26844   */\n      tag_551\n        /* \"#utility.yul\":26840:26842   */\n      0x20\n        /* \"#utility.yul\":26829:26838   */\n      dup4\n        /* \"#utility.yul\":26825:26843   */\n      add\n        /* \"#utility.yul\":26816:26822   */\n      dup7\n        /* \"#utility.yul\":26772:26844   */\n      tag_263\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":26854:26926   */\n      tag_552\n        /* \"#utility.yul\":26922:26924   */\n      0x40\n        /* \"#utility.yul\":26911:26920   */\n      dup4\n        /* \"#utility.yul\":26907:26925   */\n      add\n        /* \"#utility.yul\":26898:26904   */\n      dup6\n        /* \"#utility.yul\":26854:26926   */\n      tag_266\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":26973:26982   */\n      dup2\n        /* \"#utility.yul\":26967:26971   */\n      dup2\n        /* \"#utility.yul\":26963:26983   */\n      sub\n        /* \"#utility.yul\":26958:26960   */\n      0x60\n        /* \"#utility.yul\":26947:26956   */\n      dup4\n        /* \"#utility.yul\":26943:26961   */\n      add\n        /* \"#utility.yul\":26936:26984   */\n      mstore\n        /* \"#utility.yul\":27001:27077   */\n      tag_553\n        /* \"#utility.yul\":27072:27076   */\n      dup2\n        /* \"#utility.yul\":27063:27069   */\n      dup5\n        /* \"#utility.yul\":27001:27077   */\n      tag_308\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":26993:27077   */\n      swap1\n      pop\n        /* \"#utility.yul\":26444:27084   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27090:27231   */\n    tag_309:\n        /* \"#utility.yul\":27146:27151   */\n      0x00\n        /* \"#utility.yul\":27177:27183   */\n      dup2\n        /* \"#utility.yul\":27171:27184   */\n      mload\n        /* \"#utility.yul\":27162:27184   */\n      swap1\n      pop\n        /* \"#utility.yul\":27193:27225   */\n      tag_555\n        /* \"#utility.yul\":27219:27224   */\n      dup2\n        /* \"#utility.yul\":27193:27225   */\n      tag_249\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":27090:27231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27237:27586   */\n    tag_232:\n        /* \"#utility.yul\":27306:27312   */\n      0x00\n        /* \"#utility.yul\":27355:27357   */\n      0x20\n        /* \"#utility.yul\":27343:27352   */\n      dup3\n        /* \"#utility.yul\":27334:27341   */\n      dup5\n        /* \"#utility.yul\":27330:27353   */\n      sub\n        /* \"#utility.yul\":27326:27358   */\n      slt\n        /* \"#utility.yul\":27323:27442   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":27361:27440   */\n      tag_558\n      tag_246\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":27323:27442   */\n    tag_557:\n        /* \"#utility.yul\":27481:27482   */\n      0x00\n        /* \"#utility.yul\":27506:27569   */\n      tag_559\n        /* \"#utility.yul\":27561:27568   */\n      dup5\n        /* \"#utility.yul\":27552:27558   */\n      dup3\n        /* \"#utility.yul\":27541:27550   */\n      dup6\n        /* \"#utility.yul\":27537:27559   */\n      add\n        /* \"#utility.yul\":27506:27569   */\n      tag_309\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":27496:27569   */\n      swap2\n      pop\n        /* \"#utility.yul\":27452:27579   */\n      pop\n        /* \"#utility.yul\":27237:27586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3f410550ea76ff02c6b78158cb1fe59f6172a859de94e02165c0326e77fce6764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:12",
										"nodeType": "YulBlock",
										"src": "0:8467:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2684:739:12",
													"nodeType": "YulBlock",
													"src": "2684:739:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:12",
																"nodeType": "YulBlock",
																"src": "2730:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:12"
																			},
																			"nativeSrc": "2732:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:12"
																		},
																		"nativeSrc": "2732:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:12"
																		},
																		"nativeSrc": "2701:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:12"
																},
																"nativeSrc": "2697:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:12"
															},
															"nativeSrc": "2694:119:12",
															"nodeType": "YulIf",
															"src": "2694:119:12"
														},
														{
															"nativeSrc": "2823:291:12",
															"nodeType": "YulBlock",
															"src": "2823:291:12",
															"statements": [
																{
																	"nativeSrc": "2838:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:12"
																				},
																				"nativeSrc": "2858:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:12"
																		},
																		"nativeSrc": "2852:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:12",
																		"nodeType": "YulBlock",
																		"src": "2923:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:12"
																					},
																					"nativeSrc": "2925:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:12"
																				},
																				"nativeSrc": "2925:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:12"
																		},
																		"nativeSrc": "2892:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:12"
																	},
																	"nativeSrc": "2889:117:12",
																	"nodeType": "YulIf",
																	"src": "2889:117:12"
																},
																{
																	"nativeSrc": "3020:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:12"
																				},
																				"nativeSrc": "3072:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:12"
																		},
																		"nativeSrc": "3030:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:12",
															"nodeType": "YulBlock",
															"src": "3124:292:12",
															"statements": [
																{
																	"nativeSrc": "3139:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:12"
																				},
																				"nativeSrc": "3159:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:12"
																		},
																		"nativeSrc": "3153:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:12",
																		"nodeType": "YulBlock",
																		"src": "3225:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:12"
																					},
																					"nativeSrc": "3227:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:12"
																				},
																				"nativeSrc": "3227:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:12"
																		},
																		"nativeSrc": "3194:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:12"
																	},
																	"nativeSrc": "3191:117:12",
																	"nodeType": "YulIf",
																	"src": "3191:117:12"
																},
																{
																	"nativeSrc": "3322:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:12"
																				},
																				"nativeSrc": "3374:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:12"
																		},
																		"nativeSrc": "3332:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:12",
														"nodeType": "YulTypedName",
														"src": "2646:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:12",
														"nodeType": "YulTypedName",
														"src": "2657:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:12",
														"nodeType": "YulTypedName",
														"src": "2669:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:12",
														"nodeType": "YulTypedName",
														"src": "2677:6:12",
														"type": ""
													}
												],
												"src": "2570:853:12"
											},
											{
												"body": {
													"nativeSrc": "3488:40:12",
													"nodeType": "YulBlock",
													"src": "3488:40:12",
													"statements": [
														{
															"nativeSrc": "3499:22:12",
															"nodeType": "YulAssignment",
															"src": "3499:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:12"
																},
																"nativeSrc": "3509:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:12",
														"nodeType": "YulTypedName",
														"src": "3481:6:12",
														"type": ""
													}
												],
												"src": "3429:99:12"
											},
											{
												"body": {
													"nativeSrc": "3562:152:12",
													"nodeType": "YulBlock",
													"src": "3562:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:12",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																},
																"nativeSrc": "3572:88:12",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:12"
															},
															"nativeSrc": "3572:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:12"
																},
																"nativeSrc": "3669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:12"
															},
															"nativeSrc": "3669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:12"
																},
																"nativeSrc": "3693:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:12"
															},
															"nativeSrc": "3693:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:12"
											},
											{
												"body": {
													"nativeSrc": "3771:269:12",
													"nodeType": "YulBlock",
													"src": "3771:269:12",
													"statements": [
														{
															"nativeSrc": "3781:22:12",
															"nodeType": "YulAssignment",
															"src": "3781:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:12"
																},
																"nativeSrc": "3791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:12"
																}
															]
														},
														{
															"nativeSrc": "3812:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:12"
																},
																"nativeSrc": "3838:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:12",
																"nodeType": "YulBlock",
																"src": "3889:51:12",
																"statements": [
																	{
																		"nativeSrc": "3903:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:12"
																			},
																			"nativeSrc": "3913:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:12"
																},
																"nativeSrc": "3862:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:12"
															},
															"nativeSrc": "3859:81:12",
															"nodeType": "YulIf",
															"src": "3859:81:12"
														},
														{
															"body": {
																"nativeSrc": "3992:42:12",
																"nodeType": "YulBlock",
																"src": "3992:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:12"
																			},
																			"nativeSrc": "4006:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:12"
																		},
																		"nativeSrc": "4006:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:12"
																		},
																		"nativeSrc": "3976:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:12"
																},
																"nativeSrc": "3953:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:12"
															},
															"nativeSrc": "3950:84:12",
															"nodeType": "YulIf",
															"src": "3950:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:12",
														"nodeType": "YulTypedName",
														"src": "3755:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:12",
														"nodeType": "YulTypedName",
														"src": "3764:6:12",
														"type": ""
													}
												],
												"src": "3720:320:12"
											},
											{
												"body": {
													"nativeSrc": "4100:87:12",
													"nodeType": "YulBlock",
													"src": "4100:87:12",
													"statements": [
														{
															"nativeSrc": "4110:11:12",
															"nodeType": "YulAssignment",
															"src": "4110:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:12",
																"nodeType": "YulIdentifier",
																"src": "4118:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:12"
																},
																"nativeSrc": "4131:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:12"
															},
															"nativeSrc": "4131:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:12"
														},
														{
															"nativeSrc": "4154:26:12",
															"nodeType": "YulAssignment",
															"src": "4154:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:12"
																},
																"nativeSrc": "4162:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:12",
														"nodeType": "YulTypedName",
														"src": "4087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:12",
														"nodeType": "YulTypedName",
														"src": "4095:4:12",
														"type": ""
													}
												],
												"src": "4046:141:12"
											},
											{
												"body": {
													"nativeSrc": "4237:49:12",
													"nodeType": "YulBlock",
													"src": "4237:49:12",
													"statements": [
														{
															"nativeSrc": "4247:33:12",
															"nodeType": "YulAssignment",
															"src": "4247:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:12"
																		},
																		"nativeSrc": "4261:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:12"
																},
																"nativeSrc": "4257:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:12",
														"nodeType": "YulTypedName",
														"src": "4220:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:12",
														"nodeType": "YulTypedName",
														"src": "4230:6:12",
														"type": ""
													}
												],
												"src": "4193:93:12"
											},
											{
												"body": {
													"nativeSrc": "4345:54:12",
													"nodeType": "YulBlock",
													"src": "4345:54:12",
													"statements": [
														{
															"nativeSrc": "4355:37:12",
															"nodeType": "YulAssignment",
															"src": "4355:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:12"
																},
																"nativeSrc": "4376:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:12",
														"nodeType": "YulTypedName",
														"src": "4320:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:12",
														"nodeType": "YulTypedName",
														"src": "4326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:12",
														"nodeType": "YulTypedName",
														"src": "4336:8:12",
														"type": ""
													}
												],
												"src": "4292:107:12"
											},
											{
												"body": {
													"nativeSrc": "4481:317:12",
													"nodeType": "YulBlock",
													"src": "4481:317:12",
													"statements": [
														{
															"nativeSrc": "4491:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:12"
																},
																"nativeSrc": "4508:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:12",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:12"
																},
																"nativeSrc": "4547:97:12",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:12",
															"nodeType": "YulAssignment",
															"src": "4653:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:12"
																},
																"nativeSrc": "4665:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:12"
																}
															]
														},
														{
															"nativeSrc": "4713:30:12",
															"nodeType": "YulAssignment",
															"src": "4713:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:12"
																		},
																		"nativeSrc": "4733:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:12"
																},
																"nativeSrc": "4722:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:12"
																}
															]
														},
														{
															"nativeSrc": "4752:40:12",
															"nodeType": "YulAssignment",
															"src": "4752:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:12"
																		},
																		"nativeSrc": "4772:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:12"
																},
																"nativeSrc": "4762:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:12",
														"nodeType": "YulTypedName",
														"src": "4442:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:12",
														"nodeType": "YulTypedName",
														"src": "4449:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:12",
														"nodeType": "YulTypedName",
														"src": "4461:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:12",
														"nodeType": "YulTypedName",
														"src": "4474:6:12",
														"type": ""
													}
												],
												"src": "4405:393:12"
											},
											{
												"body": {
													"nativeSrc": "4849:32:12",
													"nodeType": "YulBlock",
													"src": "4849:32:12",
													"statements": [
														{
															"nativeSrc": "4859:16:12",
															"nodeType": "YulAssignment",
															"src": "4859:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:12",
																"nodeType": "YulIdentifier",
																"src": "4870:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:12",
														"nodeType": "YulTypedName",
														"src": "4831:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:12",
														"nodeType": "YulTypedName",
														"src": "4841:7:12",
														"type": ""
													}
												],
												"src": "4804:77:12"
											},
											{
												"body": {
													"nativeSrc": "4919:28:12",
													"nodeType": "YulBlock",
													"src": "4919:28:12",
													"statements": [
														{
															"nativeSrc": "4929:12:12",
															"nodeType": "YulAssignment",
															"src": "4929:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:12",
																"nodeType": "YulIdentifier",
																"src": "4936:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:12",
														"nodeType": "YulTypedName",
														"src": "4905:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:12",
														"nodeType": "YulTypedName",
														"src": "4915:3:12",
														"type": ""
													}
												],
												"src": "4887:60:12"
											},
											{
												"body": {
													"nativeSrc": "5013:82:12",
													"nodeType": "YulBlock",
													"src": "5013:82:12",
													"statements": [
														{
															"nativeSrc": "5023:66:12",
															"nodeType": "YulAssignment",
															"src": "5023:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:12"
																				},
																				"nativeSrc": "5063:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:12"
																		},
																		"nativeSrc": "5054:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:12"
																},
																"nativeSrc": "5036:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:12",
														"nodeType": "YulTypedName",
														"src": "4993:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:12",
														"nodeType": "YulTypedName",
														"src": "5003:9:12",
														"type": ""
													}
												],
												"src": "4953:142:12"
											},
											{
												"body": {
													"nativeSrc": "5148:28:12",
													"nodeType": "YulBlock",
													"src": "5148:28:12",
													"statements": [
														{
															"nativeSrc": "5158:12:12",
															"nodeType": "YulAssignment",
															"src": "5158:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:12",
																"nodeType": "YulIdentifier",
																"src": "5165:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:12",
														"nodeType": "YulTypedName",
														"src": "5134:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:12",
														"nodeType": "YulTypedName",
														"src": "5144:3:12",
														"type": ""
													}
												],
												"src": "5101:75:12"
											},
											{
												"body": {
													"nativeSrc": "5258:193:12",
													"nodeType": "YulBlock",
													"src": "5258:193:12",
													"statements": [
														{
															"nativeSrc": "5268:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:12"
																},
																"nativeSrc": "5292:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:12",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:12"
																				},
																				"nativeSrc": "5381:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:12"
																				},
																				"nativeSrc": "5402:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:12"
																		},
																		"nativeSrc": "5353:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:12"
																},
																"nativeSrc": "5340:105:12",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:12"
															},
															"nativeSrc": "5340:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:12",
														"nodeType": "YulTypedName",
														"src": "5235:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:12",
														"nodeType": "YulTypedName",
														"src": "5241:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:12",
														"nodeType": "YulTypedName",
														"src": "5249:7:12",
														"type": ""
													}
												],
												"src": "5182:269:12"
											},
											{
												"body": {
													"nativeSrc": "5506:24:12",
													"nodeType": "YulBlock",
													"src": "5506:24:12",
													"statements": [
														{
															"nativeSrc": "5516:8:12",
															"nodeType": "YulAssignment",
															"src": "5516:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:12",
																"nodeType": "YulLiteral",
																"src": "5523:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:12",
														"nodeType": "YulTypedName",
														"src": "5502:3:12",
														"type": ""
													}
												],
												"src": "5457:73:12"
											},
											{
												"body": {
													"nativeSrc": "5589:136:12",
													"nodeType": "YulBlock",
													"src": "5589:136:12",
													"statements": [
														{
															"nativeSrc": "5599:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:12"
																},
																"nativeSrc": "5613:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:12"
																},
																"nativeSrc": "5654:65:12",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:12"
															},
															"nativeSrc": "5654:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:12",
														"nodeType": "YulTypedName",
														"src": "5575:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:12",
														"nodeType": "YulTypedName",
														"src": "5581:6:12",
														"type": ""
													}
												],
												"src": "5536:189:12"
											},
											{
												"body": {
													"nativeSrc": "5781:136:12",
													"nodeType": "YulBlock",
													"src": "5781:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:12",
																"nodeType": "YulBlock",
																"src": "5848:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:12"
																			},
																			"nativeSrc": "5862:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:12"
																		},
																		"nativeSrc": "5862:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:12"
																},
																"nativeSrc": "5798:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:12"
															},
															"nativeSrc": "5791:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:12",
																"nodeType": "YulBlock",
																"src": "5813:26:12",
																"statements": [
																	{
																		"nativeSrc": "5815:22:12",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:12"
																			},
																			"nativeSrc": "5824:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:12",
																"nodeType": "YulBlock",
																"src": "5795:2:12",
																"statements": []
															},
															"src": "5791:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:12",
														"nodeType": "YulTypedName",
														"src": "5769:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:12",
														"nodeType": "YulTypedName",
														"src": "5776:3:12",
														"type": ""
													}
												],
												"src": "5731:186:12"
											},
											{
												"body": {
													"nativeSrc": "6002:464:12",
													"nodeType": "YulBlock",
													"src": "6002:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:12",
																"nodeType": "YulBlock",
																"src": "6028:431:12",
																"statements": [
																	{
																		"nativeSrc": "6042:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:12"
																			},
																			"nativeSrc": "6058:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:12"
																					},
																					"nativeSrc": "6142:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:12"
																			},
																			"nativeSrc": "6128:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:12",
																			"nodeType": "YulBlock",
																			"src": "6329:27:12",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:12",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:12"
																			},
																			"nativeSrc": "6310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:12"
																		},
																		"nativeSrc": "6307:49:12",
																		"nodeType": "YulIf",
																		"src": "6307:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:12"
																							},
																							"nativeSrc": "6425:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:12"
																					},
																					"nativeSrc": "6411:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:12"
																			},
																			"nativeSrc": "6369:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:12"
																		},
																		"nativeSrc": "6369:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:12"
																},
																"nativeSrc": "6016:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:12"
															},
															"nativeSrc": "6013:446:12",
															"nodeType": "YulIf",
															"src": "6013:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:12",
														"nodeType": "YulTypedName",
														"src": "5978:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:12",
														"nodeType": "YulTypedName",
														"src": "5985:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:12",
														"nodeType": "YulTypedName",
														"src": "5990:10:12",
														"type": ""
													}
												],
												"src": "5923:543:12"
											},
											{
												"body": {
													"nativeSrc": "6535:54:12",
													"nodeType": "YulBlock",
													"src": "6535:54:12",
													"statements": [
														{
															"nativeSrc": "6545:37:12",
															"nodeType": "YulAssignment",
															"src": "6545:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:12"
																},
																"nativeSrc": "6566:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:12",
														"nodeType": "YulTypedName",
														"src": "6510:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:12",
														"nodeType": "YulTypedName",
														"src": "6516:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:12",
														"nodeType": "YulTypedName",
														"src": "6526:8:12",
														"type": ""
													}
												],
												"src": "6472:117:12"
											},
											{
												"body": {
													"nativeSrc": "6646:118:12",
													"nodeType": "YulBlock",
													"src": "6646:118:12",
													"statements": [
														{
															"nativeSrc": "6656:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:12"
																				},
																				"nativeSrc": "6701:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:12"
																				},
																				"nativeSrc": "6716:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:12"
																		},
																		"nativeSrc": "6672:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:12"
																},
																"nativeSrc": "6668:56:12",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:12",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:12",
															"nodeType": "YulAssignment",
															"src": "6733:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:12"
																},
																"nativeSrc": "6743:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:12",
														"nodeType": "YulTypedName",
														"src": "6623:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:12",
														"nodeType": "YulTypedName",
														"src": "6629:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:12",
														"nodeType": "YulTypedName",
														"src": "6639:6:12",
														"type": ""
													}
												],
												"src": "6595:169:12"
											},
											{
												"body": {
													"nativeSrc": "6850:214:12",
													"nodeType": "YulBlock",
													"src": "6850:214:12",
													"statements": [
														{
															"nativeSrc": "6983:37:12",
															"nodeType": "YulAssignment",
															"src": "6983:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:12"
																},
																"nativeSrc": "6991:29:12",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:12"
																}
															]
														},
														{
															"nativeSrc": "7029:29:12",
															"nodeType": "YulAssignment",
															"src": "7029:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:12"
																		},
																		"nativeSrc": "7046:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:12"
																},
																"nativeSrc": "7037:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:12",
														"nodeType": "YulTypedName",
														"src": "6831:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:12",
														"nodeType": "YulTypedName",
														"src": "6837:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:12",
														"nodeType": "YulTypedName",
														"src": "6845:4:12",
														"type": ""
													}
												],
												"src": "6769:295:12"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:12",
													"nodeType": "YulBlock",
													"src": "7161:1303:12",
													"statements": [
														{
															"nativeSrc": "7172:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:12"
																},
																"nativeSrc": "7186:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:12",
																"nodeType": "YulBlock",
																"src": "7308:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:12"
																			},
																			"nativeSrc": "7310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:12"
																		},
																		"nativeSrc": "7310:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:12"
																},
																"nativeSrc": "7277:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:12"
															},
															"nativeSrc": "7274:56:12",
															"nodeType": "YulIf",
															"src": "7274:56:12"
														},
														{
															"nativeSrc": "7340:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:12"
																		},
																		"nativeSrc": "7380:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:12"
																},
																"nativeSrc": "7354:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:12"
																},
																"nativeSrc": "7439:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:12"
															},
															"nativeSrc": "7439:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:12"
														},
														{
															"nativeSrc": "7516:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:12",
																"nodeType": "YulLiteral",
																"src": "7533:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:12",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:12",
															"nodeType": "YulAssignment",
															"src": "7544:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:12",
																"nodeType": "YulLiteral",
																"src": "7557:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:12",
																		"nodeType": "YulBlock",
																		"src": "7608:611:12",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:12",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:12"
																							},
																							"nativeSrc": "7649:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:12"
																					},
																					"nativeSrc": "7637:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:12",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:12"
																					},
																					"nativeSrc": "7687:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:12",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:12",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:12",
																					"nodeType": "YulBlock",
																					"src": "7805:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:12"
																												},
																												"nativeSrc": "7844:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:12"
																										},
																										"nativeSrc": "7838:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:12"
																								},
																								"nativeSrc": "7823:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:12"
																							},
																							"nativeSrc": "7823:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:12"
																						},
																						{
																							"nativeSrc": "7882:24:12",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:12",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:12"
																								},
																								"nativeSrc": "7892:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:12",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:12",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:12"
																								},
																								"nativeSrc": "7936:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:12"
																					},
																					"nativeSrc": "7768:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:12"
																				},
																				"nativeSrc": "7760:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:12",
																					"nodeType": "YulBlock",
																					"src": "7783:21:12",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:12",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:12",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:12"
																								},
																								"nativeSrc": "7790:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:12",
																					"nodeType": "YulBlock",
																					"src": "7764:3:12",
																					"statements": []
																				},
																				"src": "7760:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:12",
																					"nodeType": "YulBlock",
																					"src": "8004:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:12"
																										},
																										"nativeSrc": "8045:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:12"
																								},
																								"nativeSrc": "8039:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:12"
																												},
																												"nativeSrc": "8127:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:12"
																										},
																										"nativeSrc": "8097:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:12"
																								},
																								"nativeSrc": "8082:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:12"
																							},
																							"nativeSrc": "8082:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:12"
																					},
																					"nativeSrc": "7984:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:12"
																				},
																				"nativeSrc": "7981:179:12",
																				"nodeType": "YulIf",
																				"src": "7981:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:12",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:12"
																									},
																									"nativeSrc": "8190:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:12",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:12"
																							},
																							"nativeSrc": "8186:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:12"
																					},
																					"nativeSrc": "8173:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:12"
																				},
																				"nativeSrc": "8173:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:12"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:12",
																	"nodeType": "YulCase",
																	"src": "7601:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:12",
																		"nodeType": "YulBlock",
																		"src": "8236:222:12",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:12",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:12",
																					"nodeType": "YulBlock",
																					"src": "8287:67:12",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:12",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:12"
																										},
																										"nativeSrc": "8320:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:12"
																								},
																								"nativeSrc": "8314:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:12"
																				},
																				"nativeSrc": "8277:77:12",
																				"nodeType": "YulIf",
																				"src": "8277:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:12"
																							},
																							"nativeSrc": "8380:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:12"
																					},
																					"nativeSrc": "8367:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:12"
																				},
																				"nativeSrc": "8367:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:12"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:12",
																	"nodeType": "YulCase",
																	"src": "8228:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:12"
																},
																"nativeSrc": "7578:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:12"
															},
															"nativeSrc": "7571:887:12",
															"nodeType": "YulSwitch",
															"src": "7571:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:12",
														"nodeType": "YulTypedName",
														"src": "7150:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:12",
														"nodeType": "YulTypedName",
														"src": "7156:3:12",
														"type": ""
													}
												],
												"src": "7069:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516127a93803806127a9833981810160405281019061003191906101a4565b815f908161003f919061042a565b50806001908161004f919061042a565b5050506104f9565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100b682610070565b810181811067ffffffffffffffff821117156100d5576100d4610080565b5b80604052505050565b5f6100e7610057565b90506100f382826100ad565b919050565b5f67ffffffffffffffff82111561011257610111610080565b5b61011b82610070565b9050602081019050919050565b8281835e5f83830152505050565b5f610148610143846100f8565b6100de565b9050828152602081018484840111156101645761016361006c565b5b61016f848285610128565b509392505050565b5f82601f83011261018b5761018a610068565b5b815161019b848260208601610136565b91505092915050565b5f5f604083850312156101ba576101b9610060565b5b5f83015167ffffffffffffffff8111156101d7576101d6610064565b5b6101e385828601610177565b925050602083015167ffffffffffffffff81111561020457610203610064565b5b61021085828601610177565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026857607f821691505b60208210810361027b5761027a610224565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a2565b6102e786836102a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032b610326610321846102ff565b610308565b6102ff565b9050919050565b5f819050919050565b61034483610311565b61035861035082610332565b8484546102ae565b825550505050565b5f5f905090565b61036f610360565b61037a81848461033b565b505050565b5b8181101561039d576103925f82610367565b600181019050610380565b5050565b601f8211156103e2576103b381610281565b6103bc84610293565b810160208510156103cb578190505b6103df6103d785610293565b83018261037f565b50505b505050565b5f82821c905092915050565b5f6104025f19846008026103e7565b1980831691505092915050565b5f61041a83836103f3565b9150826002028217905092915050565b6104338261021a565b67ffffffffffffffff81111561044c5761044b610080565b5b6104568254610251565b6104618282856103a1565b5f60209050601f831160018114610492575f8415610480578287015190505b61048a858261040f565b8655506104f1565b601f1984166104a086610281565b5f5b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103f3565b8355505b6001600288020188555050505b505050505050565b6122a3806105065f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906113c1565b6102b9565b6040516100f89190611406565b60405180910390f35b61010961039a565b604051610116919061148f565b60405180910390f35b610139600480360381019061013491906114e2565b610429565b604051610146919061154c565b60405180910390f35b6101696004803603810190610164919061158f565b6104aa565b005b610185600480360381019061018091906115cd565b6105c0565b005b6101a1600480360381019061019c91906115cd565b610620565b005b6101bd60048036038101906101b891906114e2565b61063f565b6040516101ca919061154c565b60405180910390f35b6101ed60048036038101906101e8919061161d565b6106eb565b6040516101fa9190611657565b60405180910390f35b61020b61079f565b604051610218919061148f565b60405180910390f35b61023b6004803603810190610236919061169a565b61082f565b005b61025760048036038101906102529190611804565b6109aa565b005b610273600480360381019061026e91906114e2565b610a0c565b604051610280919061148f565b60405180910390f35b6102a3600480360381019061029e9190611884565b610ab0565b6040516102b09190611406565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610b3e565b5b9050919050565b60605f80546103a8906118ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906118ef565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f61043382610ba7565b610472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104699061198f565b60405180910390fd5b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f6104b48261063f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611a1d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610543610c0f565b73ffffffffffffffffffffffffffffffffffffffff16148061057257506105718161056c610c0f565b610ab0565b5b6105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890611aab565b60405180910390fd5b6105bb8383610c16565b505050565b6105d16105cb610c0f565b82610ccc565b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611b39565b60405180910390fd5b61061b838383610da8565b505050565b61063a83838360405180602001604052805f8152506109aa565b505050565b5f5f60025f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611bc7565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190611c55565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546107ae906118ef565b80601f01602080910402602001604051908101604052809291908181526020018280546107da906118ef565b80156108255780601f106107fc57610100808354040283529160200191610825565b820191905f5260205f20905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b610837610c0f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90611cbd565b60405180910390fd5b8060055f6108b0610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610959610c0f565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161099e9190611406565b60405180910390a35050565b6109bb6109b5610c0f565b83610ccc565b6109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611b39565b60405180910390fd5b610a0684848484610ff8565b50505050565b6060610a1782610ba7565b610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d90611d4b565b60405180910390fd5b5f610a5f611054565b90505f815111610a7d5760405180602001604052805f815250610aa8565b80610a878461106a565b604051602001610a98929190611da3565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1660025f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c868361063f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f610cd682610ba7565b610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611e36565b60405180910390fd5b5f610d1f8361063f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d8e57508373ffffffffffffffffffffffffffffffffffffffff16610d7684610429565b73ffffffffffffffffffffffffffffffffffffffff16145b80610d9f5750610d9e8185610ab0565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610dc88261063f565b73ffffffffffffffffffffffffffffffffffffffff1614610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590611ec4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8390611f52565b60405180910390fd5b610e978383836111c3565b610ea15f82610c16565b600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610eee9190611f9d565b92505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f429190611fd0565b925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611003848484610da8565b61100f848484846111c8565b61104e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104590612073565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f82036110b0576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506111be565b5f8290505f5b5f82146110df5780806110c890612091565b915050600a826110d89190612105565b91506110b6565b5f8167ffffffffffffffff8111156110fa576110f96116e0565b5b6040519080825280601f01601f19166020018201604052801561112c5781602001600182028036833780820191505090505b5090505b5f85146111b7576001826111449190611f9d565b9150600a856111539190612135565b603061115f9190611fd0565b60f81b81838151811061117557611174612165565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a856111b09190612105565b9450611130565b8093505050505b919050565b505050565b5f6111e88473ffffffffffffffffffffffffffffffffffffffff1661134a565b1561133d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611211610c0f565b8786866040518563ffffffff1660e01b815260040161123394939291906121e4565b6020604051808303815f875af192505050801561126e57506040513d601f19601f8201168201806040525081019061126b9190612242565b60015b6112ed573d805f811461129c576040519150601f19603f3d011682016040523d82523d5f602084013e6112a1565b606091505b505f8151036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90612073565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611342565b600190505b949350505050565b5f5f823b90505f8111915050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113a08161136c565b81146113aa575f5ffd5b50565b5f813590506113bb81611397565b92915050565b5f602082840312156113d6576113d5611364565b5b5f6113e3848285016113ad565b91505092915050565b5f8115159050919050565b611400816113ec565b82525050565b5f6020820190506114195f8301846113f7565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114618261141f565b61146b8185611429565b935061147b818560208601611439565b61148481611447565b840191505092915050565b5f6020820190508181035f8301526114a78184611457565b905092915050565b5f819050919050565b6114c1816114af565b81146114cb575f5ffd5b50565b5f813590506114dc816114b8565b92915050565b5f602082840312156114f7576114f6611364565b5b5f611504848285016114ce565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115368261150d565b9050919050565b6115468161152c565b82525050565b5f60208201905061155f5f83018461153d565b92915050565b61156e8161152c565b8114611578575f5ffd5b50565b5f8135905061158981611565565b92915050565b5f5f604083850312156115a5576115a4611364565b5b5f6115b28582860161157b565b92505060206115c3858286016114ce565b9150509250929050565b5f5f5f606084860312156115e4576115e3611364565b5b5f6115f18682870161157b565b93505060206116028682870161157b565b9250506040611613868287016114ce565b9150509250925092565b5f6020828403121561163257611631611364565b5b5f61163f8482850161157b565b91505092915050565b611651816114af565b82525050565b5f60208201905061166a5f830184611648565b92915050565b611679816113ec565b8114611683575f5ffd5b50565b5f8135905061169481611670565b92915050565b5f5f604083850312156116b0576116af611364565b5b5f6116bd8582860161157b565b92505060206116ce85828601611686565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61171682611447565b810181811067ffffffffffffffff82111715611735576117346116e0565b5b80604052505050565b5f61174761135b565b9050611753828261170d565b919050565b5f67ffffffffffffffff821115611772576117716116e0565b5b61177b82611447565b9050602081019050919050565b828183375f83830152505050565b5f6117a86117a384611758565b61173e565b9050828152602081018484840111156117c4576117c36116dc565b5b6117cf848285611788565b509392505050565b5f82601f8301126117eb576117ea6116d8565b5b81356117fb848260208601611796565b91505092915050565b5f5f5f5f6080858703121561181c5761181b611364565b5b5f6118298782880161157b565b945050602061183a8782880161157b565b935050604061184b878288016114ce565b925050606085013567ffffffffffffffff81111561186c5761186b611368565b5b611878878288016117d7565b91505092959194509250565b5f5f6040838503121561189a57611899611364565b5b5f6118a78582860161157b565b92505060206118b88582860161157b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061190657607f821691505b602082108103611919576119186118c2565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611979602c83611429565b91506119848261191f565b604082019050919050565b5f6020820190508181035f8301526119a68161196d565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a07602183611429565b9150611a12826119ad565b604082019050919050565b5f6020820190508181035f830152611a34816119fb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f775f8201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b5f611a95603883611429565b9150611aa082611a3b565b604082019050919050565b5f6020820190508181035f830152611ac281611a89565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f5f8201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b5f611b23603183611429565b9150611b2e82611ac9565b604082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e65786973745f8201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b5f611bb1602983611429565b9150611bbc82611b57565b604082019050919050565b5f6020820190508181035f830152611bde81611ba5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f611c3f602a83611429565b9150611c4a82611be5565b604082019050919050565b5f6020820190508181035f830152611c6c81611c33565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611ca7601983611429565b9150611cb282611c73565b602082019050919050565b5f6020820190508181035f830152611cd481611c9b565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f5f8201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b5f611d35602f83611429565b9150611d4082611cdb565b604082019050919050565b5f6020820190508181035f830152611d6281611d29565b9050919050565b5f81905092915050565b5f611d7d8261141f565b611d878185611d69565b9350611d97818560208601611439565b80840191505092915050565b5f611dae8285611d73565b9150611dba8284611d73565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611e20602c83611429565b9150611e2b82611dc6565b604082019050919050565b5f6020820190508181035f830152611e4d81611e14565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e207468617420695f8201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b5f611eae602983611429565b9150611eb982611e54565b604082019050919050565b5f6020820190508181035f830152611edb81611ea2565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611f3c602483611429565b9150611f4782611ee2565b604082019050919050565b5f6020820190508181035f830152611f6981611f30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fa7826114af565b9150611fb2836114af565b9250828203905081811115611fca57611fc9611f70565b5b92915050565b5f611fda826114af565b9150611fe5836114af565b9250828201905080821115611ffd57611ffc611f70565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f61205d603283611429565b915061206882612003565b604082019050919050565b5f6020820190508181035f83015261208a81612051565b9050919050565b5f61209b826114af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120cd576120cc611f70565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61210f826114af565b915061211a836114af565b92508261212a576121296120d8565b5b828204905092915050565b5f61213f826114af565b915061214a836114af565b92508261215a576121596120d8565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f6121b682612192565b6121c0818561219c565b93506121d0818560208601611439565b6121d981611447565b840191505092915050565b5f6080820190506121f75f83018761153d565b612204602083018661153d565b6122116040830185611648565b818103606083015261222381846121ac565b905095945050505050565b5f8151905061223c81611397565b92915050565b5f6020828403121561225757612256611364565b5b5f6122648482850161222e565b9150509291505056fea2646970667358221220d3f410550ea76ff02c6b78158cb1fe59f6172a859de94e02165c0326e77fce6764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27A9 CODESIZE SUB DUP1 PUSH2 0x27A9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP POP POP PUSH2 0x4F9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB6 DUP3 PUSH2 0x70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x80 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE7 PUSH2 0x57 JUMP JUMPDEST SWAP1 POP PUSH2 0xF3 DUP3 DUP3 PUSH2 0xAD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x112 JUMPI PUSH2 0x111 PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x11B DUP3 PUSH2 0x70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148 PUSH2 0x143 DUP5 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH2 0x16F DUP5 DUP3 DUP6 PUSH2 0x128 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x68 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0x60 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1D6 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204 JUMPI PUSH2 0x203 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x210 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x224 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x2E7 DUP7 DUP4 PUSH2 0x2A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32B PUSH2 0x326 PUSH2 0x321 DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x350 DUP3 PUSH2 0x332 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36F PUSH2 0x360 JUMP JUMPDEST PUSH2 0x37A DUP2 DUP5 DUP5 PUSH2 0x33B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH2 0x392 PUSH0 DUP3 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3B3 DUP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3BC DUP5 PUSH2 0x293 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3DF PUSH2 0x3D7 DUP6 PUSH2 0x293 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x402 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41A DUP4 DUP4 PUSH2 0x3F3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x433 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x456 DUP3 SLOAD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x461 DUP3 DUP3 DUP6 PUSH2 0x3A1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x492 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x480 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48A DUP6 DUP3 PUSH2 0x40F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A0 DUP7 PUSH2 0x281 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22A3 DUP1 PUSH2 0x506 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B4 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x543 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x572 JUMPI POP PUSH2 0x571 DUP2 PUSH2 0x56C PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST JUMPDEST PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BB DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x5CB PUSH2 0xC0F JUMP JUMPDEST DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61B DUP4 DUP4 DUP4 PUSH2 0xDA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DA SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x825 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x808 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x8B0 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x959 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x9B5 PUSH2 0xC0F JUMP JUMPDEST DUP4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA06 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA17 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA5F PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAA8 JUMP JUMPDEST DUP1 PUSH2 0xA87 DUP5 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA98 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC86 DUP4 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD6 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD1F DUP4 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD8E JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD76 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xD9F JUMPI POP PUSH2 0xD9E DUP2 DUP6 PUSH2 0xAB0 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC8 DUP3 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE15 SWAP1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 DUP4 DUP4 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0xEA1 PUSH0 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x1003 DUP5 DUP5 DUP5 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x100F DUP5 DUP5 DUP5 DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0x10DF JUMPI DUP1 DUP1 PUSH2 0x10C8 SWAP1 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B6 JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FA JUMPI PUSH2 0x10F9 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x112C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0x11B7 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x2165 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP5 POP PUSH2 0x1130 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11E8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x134A JUMP JUMPDEST ISZERO PUSH2 0x133D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1211 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x126E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12ED JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A0 DUP2 PUSH2 0x136C JUMP JUMPDEST DUP2 EQ PUSH2 0x13AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13BB DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E3 DUP5 DUP3 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1419 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1461 DUP3 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x146B DUP2 DUP6 PUSH2 0x1429 JUMP JUMPDEST SWAP4 POP PUSH2 0x147B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14A7 DUP2 DUP5 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x14AF JUMP JUMPDEST DUP2 EQ PUSH2 0x14CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DC DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1536 DUP3 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x152C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155F PUSH0 DUP4 ADD DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x152C JUMP JUMPDEST DUP2 EQ PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1589 DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B2 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C3 DUP6 DUP3 DUP7 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F1 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1602 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1613 DUP7 DUP3 DUP8 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP5 DUP3 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1651 DUP2 PUSH2 0x14AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166A PUSH0 DUP4 ADD DUP5 PUSH2 0x1648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1679 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1694 DUP2 PUSH2 0x1670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BD DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CE DUP6 DUP3 DUP7 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1716 DUP3 PUSH2 0x1447 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1747 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP PUSH2 0x1753 DUP3 DUP3 PUSH2 0x170D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1771 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP3 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A8 PUSH2 0x17A3 DUP5 PUSH2 0x1758 JUMP JUMPDEST PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x16DC JUMP JUMPDEST JUMPDEST PUSH2 0x17CF DUP5 DUP3 DUP6 PUSH2 0x1788 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17EB JUMPI PUSH2 0x17EA PUSH2 0x16D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1829 DUP8 DUP3 DUP9 ADD PUSH2 0x157B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x183A DUP8 DUP3 DUP9 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x184B DUP8 DUP3 DUP9 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x1368 JUMP JUMPDEST JUMPDEST PUSH2 0x1878 DUP8 DUP3 DUP9 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A7 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B8 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1906 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1919 JUMPI PUSH2 0x1918 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1979 PUSH1 0x2C DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1984 DUP3 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A6 DUP2 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A07 PUSH1 0x21 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A12 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A34 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A95 PUSH1 0x38 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA0 DUP3 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC2 DUP2 PUSH2 0x1A89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x31 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB1 PUSH1 0x29 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBC DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BDE DUP2 PUSH2 0x1BA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3F PUSH1 0x2A DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4A DUP3 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6C DUP2 PUSH2 0x1C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA7 PUSH1 0x19 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB2 DUP3 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD4 DUP2 PUSH2 0x1C9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D35 PUSH1 0x2F DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D62 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7D DUP3 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 DUP6 PUSH2 0x1D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 PUSH1 0x2C DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2B DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4D DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAE PUSH1 0x29 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C PUSH1 0x24 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FA7 DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB2 DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDA DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFC PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x205D PUSH1 0x32 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x2068 DUP3 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x208A DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x209B DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x210F DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x211A DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x213F DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x214A DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x215A JUMPI PUSH2 0x2159 PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21B6 DUP3 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x21C0 DUP2 DUP6 PUSH2 0x219C JUMP JUMPDEST SWAP4 POP PUSH2 0x21D0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x21D9 DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21F7 PUSH0 DUP4 ADD DUP8 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x2204 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x2211 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2223 DUP2 DUP5 PUSH2 0x21AC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x223C DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP5 DUP3 DUP6 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DELEGATECALL LT SSTORE 0xE 0xA7 PUSH16 0xF02C6B78158CB1FE59F6172A859DE94E MUL AND TLOAD SUB 0x26 0xE7 PUSH32 0xCE6764736F6C634300081C003300000000000000000000000000000000000000 ",
							"sourceMap": "489:12705:4:-:0;;;1251:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1325:5;1317;:13;;;;;;:::i;:::-;;1350:7;1340;:17;;;;;;:::i;:::-;;1251:113;;489:12705;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;489:12705:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1349": {
									"entryPoint": 3094,
									"id": 1349,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_824": {
									"entryPoint": 4180,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1424": {
									"entryPoint": 4547,
									"id": 1424,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1413": {
									"entryPoint": 4552,
									"id": 1413,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1063": {
									"entryPoint": 2983,
									"id": 1063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1104": {
									"entryPoint": 3276,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_306": {
									"entryPoint": 3087,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_1045": {
									"entryPoint": 4088,
									"id": 1045,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transfer_1325": {
									"entryPoint": 3496,
									"id": 1325,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_867": {
									"entryPoint": 1194,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_725": {
									"entryPoint": 1771,
									"id": 725,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_888": {
									"entryPoint": 1065,
									"id": 888,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_940": {
									"entryPoint": 2736,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 4938,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_763": {
									"entryPoint": 922,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_753": {
									"entryPoint": 1599,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1016": {
									"entryPoint": 2474,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_986": {
									"entryPoint": 1568,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_922": {
									"entryPoint": 2095,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_339": {
									"entryPoint": 2878,
									"id": 339,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_701": {
									"entryPoint": 697,
									"id": 701,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_773": {
									"entryPoint": 1951,
									"id": 773,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1732": {
									"entryPoint": 4202,
									"id": 1732,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_815": {
									"entryPoint": 2572,
									"id": 815,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_967": {
									"entryPoint": 1472,
									"id": 967,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:27589:12",
										"nodeType": "YulBlock",
										"src": "0:27589:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:32:12",
													"nodeType": "YulBlock",
													"src": "2798:32:12",
													"statements": [
														{
															"nativeSrc": "2808:16:12",
															"nodeType": "YulAssignment",
															"src": "2808:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:12",
																"nodeType": "YulIdentifier",
																"src": "2819:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:77:12"
											},
											{
												"body": {
													"nativeSrc": "2879:79:12",
													"nodeType": "YulBlock",
													"src": "2879:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:12",
																"nodeType": "YulBlock",
																"src": "2936:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:12"
																			},
																			"nativeSrc": "2938:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:12"
																		},
																		"nativeSrc": "2938:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:12"
																				},
																				"nativeSrc": "2909:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:12"
																		},
																		"nativeSrc": "2899:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:12"
																},
																"nativeSrc": "2892:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:12"
															},
															"nativeSrc": "2889:63:12",
															"nodeType": "YulIf",
															"src": "2889:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:12",
														"nodeType": "YulTypedName",
														"src": "2872:5:12",
														"type": ""
													}
												],
												"src": "2836:122:12"
											},
											{
												"body": {
													"nativeSrc": "3016:87:12",
													"nodeType": "YulBlock",
													"src": "3016:87:12",
													"statements": [
														{
															"nativeSrc": "3026:29:12",
															"nodeType": "YulAssignment",
															"src": "3026:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:12"
																},
																"nativeSrc": "3035:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:12"
																},
																"nativeSrc": "3064:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:12"
															},
															"nativeSrc": "3064:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:12",
														"nodeType": "YulTypedName",
														"src": "2994:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:12",
														"nodeType": "YulTypedName",
														"src": "3002:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:12",
														"nodeType": "YulTypedName",
														"src": "3010:5:12",
														"type": ""
													}
												],
												"src": "2964:139:12"
											},
											{
												"body": {
													"nativeSrc": "3175:263:12",
													"nodeType": "YulBlock",
													"src": "3175:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:12",
																"nodeType": "YulBlock",
																"src": "3221:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:12"
																			},
																			"nativeSrc": "3223:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:12"
																		},
																		"nativeSrc": "3223:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:12"
																		},
																		"nativeSrc": "3192:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:12"
																},
																"nativeSrc": "3188:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:12"
															},
															"nativeSrc": "3185:119:12",
															"nodeType": "YulIf",
															"src": "3185:119:12"
														},
														{
															"nativeSrc": "3314:117:12",
															"nodeType": "YulBlock",
															"src": "3314:117:12",
															"statements": [
																{
																	"nativeSrc": "3329:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:12"
																				},
																				"nativeSrc": "3389:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:12"
																		},
																		"nativeSrc": "3368:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:12",
														"nodeType": "YulTypedName",
														"src": "3145:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:12",
														"nodeType": "YulTypedName",
														"src": "3156:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:12",
														"nodeType": "YulTypedName",
														"src": "3168:6:12",
														"type": ""
													}
												],
												"src": "3109:329:12"
											},
											{
												"body": {
													"nativeSrc": "3489:81:12",
													"nodeType": "YulBlock",
													"src": "3489:81:12",
													"statements": [
														{
															"nativeSrc": "3499:65:12",
															"nodeType": "YulAssignment",
															"src": "3499:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:12"
																},
																"nativeSrc": "3510:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:12",
														"nodeType": "YulTypedName",
														"src": "3481:7:12",
														"type": ""
													}
												],
												"src": "3444:126:12"
											},
											{
												"body": {
													"nativeSrc": "3621:51:12",
													"nodeType": "YulBlock",
													"src": "3621:51:12",
													"statements": [
														{
															"nativeSrc": "3631:35:12",
															"nodeType": "YulAssignment",
															"src": "3631:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:12"
																},
																"nativeSrc": "3642:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:12",
														"nodeType": "YulTypedName",
														"src": "3603:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:12",
														"nodeType": "YulTypedName",
														"src": "3613:7:12",
														"type": ""
													}
												],
												"src": "3576:96:12"
											},
											{
												"body": {
													"nativeSrc": "3743:53:12",
													"nodeType": "YulBlock",
													"src": "3743:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:12"
																		},
																		"nativeSrc": "3765:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:12"
																},
																"nativeSrc": "3753:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:12"
															},
															"nativeSrc": "3753:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:12",
														"nodeType": "YulTypedName",
														"src": "3731:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:12",
														"nodeType": "YulTypedName",
														"src": "3738:3:12",
														"type": ""
													}
												],
												"src": "3678:118:12"
											},
											{
												"body": {
													"nativeSrc": "3900:124:12",
													"nodeType": "YulBlock",
													"src": "3900:124:12",
													"statements": [
														{
															"nativeSrc": "3910:26:12",
															"nodeType": "YulAssignment",
															"src": "3910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:12"
																},
																"nativeSrc": "3918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:12"
																		},
																		"nativeSrc": "3999:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:12"
																},
																"nativeSrc": "3946:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:12"
															},
															"nativeSrc": "3946:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:12",
														"nodeType": "YulTypedName",
														"src": "3872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:12",
														"nodeType": "YulTypedName",
														"src": "3884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:12",
														"nodeType": "YulTypedName",
														"src": "3895:4:12",
														"type": ""
													}
												],
												"src": "3802:222:12"
											},
											{
												"body": {
													"nativeSrc": "4073:79:12",
													"nodeType": "YulBlock",
													"src": "4073:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:12",
																"nodeType": "YulBlock",
																"src": "4130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:12"
																			},
																			"nativeSrc": "4132:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:12"
																		},
																		"nativeSrc": "4132:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:12"
																				},
																				"nativeSrc": "4103:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:12"
																		},
																		"nativeSrc": "4093:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:12"
																},
																"nativeSrc": "4086:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:12"
															},
															"nativeSrc": "4083:63:12",
															"nodeType": "YulIf",
															"src": "4083:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:12",
														"nodeType": "YulTypedName",
														"src": "4066:5:12",
														"type": ""
													}
												],
												"src": "4030:122:12"
											},
											{
												"body": {
													"nativeSrc": "4210:87:12",
													"nodeType": "YulBlock",
													"src": "4210:87:12",
													"statements": [
														{
															"nativeSrc": "4220:29:12",
															"nodeType": "YulAssignment",
															"src": "4220:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:12"
																},
																"nativeSrc": "4229:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:12"
																},
																"nativeSrc": "4258:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:12"
															},
															"nativeSrc": "4258:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:12",
														"nodeType": "YulTypedName",
														"src": "4188:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:12",
														"nodeType": "YulTypedName",
														"src": "4196:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:12",
														"nodeType": "YulTypedName",
														"src": "4204:5:12",
														"type": ""
													}
												],
												"src": "4158:139:12"
											},
											{
												"body": {
													"nativeSrc": "4386:391:12",
													"nodeType": "YulBlock",
													"src": "4386:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:12",
																"nodeType": "YulBlock",
																"src": "4432:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:12"
																			},
																			"nativeSrc": "4434:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:12"
																		},
																		"nativeSrc": "4434:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:12"
																		},
																		"nativeSrc": "4403:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:12"
																},
																"nativeSrc": "4399:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:12"
															},
															"nativeSrc": "4396:119:12",
															"nodeType": "YulIf",
															"src": "4396:119:12"
														},
														{
															"nativeSrc": "4525:117:12",
															"nodeType": "YulBlock",
															"src": "4525:117:12",
															"statements": [
																{
																	"nativeSrc": "4540:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:12"
																				},
																				"nativeSrc": "4600:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:12"
																		},
																		"nativeSrc": "4579:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:12",
															"nodeType": "YulBlock",
															"src": "4652:118:12",
															"statements": [
																{
																	"nativeSrc": "4667:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:12"
																				},
																				"nativeSrc": "4728:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:12"
																		},
																		"nativeSrc": "4707:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:12",
														"nodeType": "YulTypedName",
														"src": "4348:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:12",
														"nodeType": "YulTypedName",
														"src": "4359:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:12",
														"nodeType": "YulTypedName",
														"src": "4371:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:12",
														"nodeType": "YulTypedName",
														"src": "4379:6:12",
														"type": ""
													}
												],
												"src": "4303:474:12"
											},
											{
												"body": {
													"nativeSrc": "4883:519:12",
													"nodeType": "YulBlock",
													"src": "4883:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:12",
																"nodeType": "YulBlock",
																"src": "4929:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:12"
																			},
																			"nativeSrc": "4931:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:12"
																		},
																		"nativeSrc": "4931:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:12"
																		},
																		"nativeSrc": "4900:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:12"
																},
																"nativeSrc": "4896:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:12"
															},
															"nativeSrc": "4893:119:12",
															"nodeType": "YulIf",
															"src": "4893:119:12"
														},
														{
															"nativeSrc": "5022:117:12",
															"nodeType": "YulBlock",
															"src": "5022:117:12",
															"statements": [
																{
																	"nativeSrc": "5037:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:12"
																				},
																				"nativeSrc": "5097:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:12"
																		},
																		"nativeSrc": "5076:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:12",
															"nodeType": "YulBlock",
															"src": "5149:118:12",
															"statements": [
																{
																	"nativeSrc": "5164:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:12"
																				},
																				"nativeSrc": "5225:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:12"
																		},
																		"nativeSrc": "5204:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:12",
															"nodeType": "YulBlock",
															"src": "5277:118:12",
															"statements": [
																{
																	"nativeSrc": "5292:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:12"
																				},
																				"nativeSrc": "5353:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:12"
																		},
																		"nativeSrc": "5332:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:12",
														"nodeType": "YulTypedName",
														"src": "4837:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:12",
														"nodeType": "YulTypedName",
														"src": "4848:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:12",
														"nodeType": "YulTypedName",
														"src": "4860:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:12",
														"nodeType": "YulTypedName",
														"src": "4868:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:12",
														"nodeType": "YulTypedName",
														"src": "4876:6:12",
														"type": ""
													}
												],
												"src": "4783:619:12"
											},
											{
												"body": {
													"nativeSrc": "5474:263:12",
													"nodeType": "YulBlock",
													"src": "5474:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:12",
																"nodeType": "YulBlock",
																"src": "5520:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:12"
																			},
																			"nativeSrc": "5522:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:12"
																		},
																		"nativeSrc": "5522:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:12"
																		},
																		"nativeSrc": "5491:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:12"
																},
																"nativeSrc": "5487:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:12"
															},
															"nativeSrc": "5484:119:12",
															"nodeType": "YulIf",
															"src": "5484:119:12"
														},
														{
															"nativeSrc": "5613:117:12",
															"nodeType": "YulBlock",
															"src": "5613:117:12",
															"statements": [
																{
																	"nativeSrc": "5628:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:12"
																				},
																				"nativeSrc": "5688:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:12"
																		},
																		"nativeSrc": "5667:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:12",
														"nodeType": "YulTypedName",
														"src": "5444:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:12",
														"nodeType": "YulTypedName",
														"src": "5455:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:12",
														"nodeType": "YulTypedName",
														"src": "5467:6:12",
														"type": ""
													}
												],
												"src": "5408:329:12"
											},
											{
												"body": {
													"nativeSrc": "5808:53:12",
													"nodeType": "YulBlock",
													"src": "5808:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:12"
																		},
																		"nativeSrc": "5830:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:12"
																},
																"nativeSrc": "5818:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:12"
															},
															"nativeSrc": "5818:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:12",
														"nodeType": "YulTypedName",
														"src": "5796:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:12",
														"nodeType": "YulTypedName",
														"src": "5803:3:12",
														"type": ""
													}
												],
												"src": "5743:118:12"
											},
											{
												"body": {
													"nativeSrc": "5965:124:12",
													"nodeType": "YulBlock",
													"src": "5965:124:12",
													"statements": [
														{
															"nativeSrc": "5975:26:12",
															"nodeType": "YulAssignment",
															"src": "5975:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:12"
																},
																"nativeSrc": "5983:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:12"
																		},
																		"nativeSrc": "6064:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:12"
																},
																"nativeSrc": "6011:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:12"
															},
															"nativeSrc": "6011:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:12",
														"nodeType": "YulTypedName",
														"src": "5937:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:12",
														"nodeType": "YulTypedName",
														"src": "5949:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:12",
														"nodeType": "YulTypedName",
														"src": "5960:4:12",
														"type": ""
													}
												],
												"src": "5867:222:12"
											},
											{
												"body": {
													"nativeSrc": "6135:76:12",
													"nodeType": "YulBlock",
													"src": "6135:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:12",
																"nodeType": "YulBlock",
																"src": "6189:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:12"
																			},
																			"nativeSrc": "6191:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:12"
																		},
																		"nativeSrc": "6191:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:12"
																				},
																				"nativeSrc": "6165:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:12"
																		},
																		"nativeSrc": "6155:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:12"
																},
																"nativeSrc": "6148:40:12",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:12"
															},
															"nativeSrc": "6145:60:12",
															"nodeType": "YulIf",
															"src": "6145:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:12",
														"nodeType": "YulTypedName",
														"src": "6128:5:12",
														"type": ""
													}
												],
												"src": "6095:116:12"
											},
											{
												"body": {
													"nativeSrc": "6266:84:12",
													"nodeType": "YulBlock",
													"src": "6266:84:12",
													"statements": [
														{
															"nativeSrc": "6276:29:12",
															"nodeType": "YulAssignment",
															"src": "6276:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:12"
																},
																"nativeSrc": "6285:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:12"
																},
																"nativeSrc": "6314:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:12"
															},
															"nativeSrc": "6314:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:12",
														"nodeType": "YulTypedName",
														"src": "6244:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:12",
														"nodeType": "YulTypedName",
														"src": "6252:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:12",
														"nodeType": "YulTypedName",
														"src": "6260:5:12",
														"type": ""
													}
												],
												"src": "6217:133:12"
											},
											{
												"body": {
													"nativeSrc": "6436:388:12",
													"nodeType": "YulBlock",
													"src": "6436:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:12",
																"nodeType": "YulBlock",
																"src": "6482:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:12"
																			},
																			"nativeSrc": "6484:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:12"
																		},
																		"nativeSrc": "6484:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:12"
																		},
																		"nativeSrc": "6453:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:12"
																},
																"nativeSrc": "6449:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:12"
															},
															"nativeSrc": "6446:119:12",
															"nodeType": "YulIf",
															"src": "6446:119:12"
														},
														{
															"nativeSrc": "6575:117:12",
															"nodeType": "YulBlock",
															"src": "6575:117:12",
															"statements": [
																{
																	"nativeSrc": "6590:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:12"
																				},
																				"nativeSrc": "6650:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:12"
																		},
																		"nativeSrc": "6629:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:12",
															"nodeType": "YulBlock",
															"src": "6702:115:12",
															"statements": [
																{
																	"nativeSrc": "6717:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:12",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:12"
																				},
																				"nativeSrc": "6775:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:12"
																		},
																		"nativeSrc": "6757:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:12",
														"nodeType": "YulTypedName",
														"src": "6398:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:12",
														"nodeType": "YulTypedName",
														"src": "6409:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:12",
														"nodeType": "YulTypedName",
														"src": "6421:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:12",
														"nodeType": "YulTypedName",
														"src": "6429:6:12",
														"type": ""
													}
												],
												"src": "6356:468:12"
											},
											{
												"body": {
													"nativeSrc": "6919:28:12",
													"nodeType": "YulBlock",
													"src": "6919:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:12"
																},
																"nativeSrc": "6929:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:12"
															},
															"nativeSrc": "6929:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:12"
											},
											{
												"body": {
													"nativeSrc": "7042:28:12",
													"nodeType": "YulBlock",
													"src": "7042:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:12"
																},
																"nativeSrc": "7052:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:12"
															},
															"nativeSrc": "7052:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:12"
											},
											{
												"body": {
													"nativeSrc": "7104:152:12",
													"nodeType": "YulBlock",
													"src": "7104:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:12"
																},
																"nativeSrc": "7114:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:12"
															},
															"nativeSrc": "7114:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:12"
																},
																"nativeSrc": "7211:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:12"
															},
															"nativeSrc": "7211:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:12"
																},
																"nativeSrc": "7235:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:12"
															},
															"nativeSrc": "7235:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:12"
											},
											{
												"body": {
													"nativeSrc": "7305:238:12",
													"nodeType": "YulBlock",
													"src": "7305:238:12",
													"statements": [
														{
															"nativeSrc": "7315:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:12"
																		},
																		"nativeSrc": "7345:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:12"
																},
																"nativeSrc": "7333:40:12",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:12",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:12",
																"nodeType": "YulBlock",
																"src": "7484:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:12"
																			},
																			"nativeSrc": "7486:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:12"
																		},
																		"nativeSrc": "7486:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:12"
																		},
																		"nativeSrc": "7424:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:12"
																		},
																		"nativeSrc": "7460:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:12"
																},
																"nativeSrc": "7421:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:12"
															},
															"nativeSrc": "7418:88:12",
															"nodeType": "YulIf",
															"src": "7418:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:12"
																},
																"nativeSrc": "7515:22:12",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:12"
															},
															"nativeSrc": "7515:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:12",
														"nodeType": "YulTypedName",
														"src": "7291:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:12",
														"nodeType": "YulTypedName",
														"src": "7299:4:12",
														"type": ""
													}
												],
												"src": "7262:281:12"
											},
											{
												"body": {
													"nativeSrc": "7590:88:12",
													"nodeType": "YulBlock",
													"src": "7590:88:12",
													"statements": [
														{
															"nativeSrc": "7600:30:12",
															"nodeType": "YulAssignment",
															"src": "7600:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:12"
																},
																"nativeSrc": "7610:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:12"
																},
																"nativeSrc": "7639:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:12"
															},
															"nativeSrc": "7639:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:12",
														"nodeType": "YulTypedName",
														"src": "7574:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:12",
														"nodeType": "YulTypedName",
														"src": "7583:6:12",
														"type": ""
													}
												],
												"src": "7549:129:12"
											},
											{
												"body": {
													"nativeSrc": "7750:241:12",
													"nodeType": "YulBlock",
													"src": "7750:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:12",
																"nodeType": "YulBlock",
																"src": "7855:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:12"
																			},
																			"nativeSrc": "7857:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:12"
																		},
																		"nativeSrc": "7857:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:12"
																},
																"nativeSrc": "7824:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:12"
															},
															"nativeSrc": "7821:56:12",
															"nodeType": "YulIf",
															"src": "7821:56:12"
														},
														{
															"nativeSrc": "7887:37:12",
															"nodeType": "YulAssignment",
															"src": "7887:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:12"
																},
																"nativeSrc": "7895:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:12"
																}
															]
														},
														{
															"nativeSrc": "7961:23:12",
															"nodeType": "YulAssignment",
															"src": "7961:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:12"
																},
																"nativeSrc": "7969:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:12",
														"nodeType": "YulTypedName",
														"src": "7734:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:12",
														"nodeType": "YulTypedName",
														"src": "7745:4:12",
														"type": ""
													}
												],
												"src": "7684:307:12"
											},
											{
												"body": {
													"nativeSrc": "8061:84:12",
													"nodeType": "YulBlock",
													"src": "8061:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:12"
																},
																"nativeSrc": "8072:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:12"
															},
															"nativeSrc": "8072:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:12"
																		},
																		"nativeSrc": "8118:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:12"
																},
																"nativeSrc": "8111:27:12",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:12"
															},
															"nativeSrc": "8111:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:12",
														"nodeType": "YulTypedName",
														"src": "8043:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:12",
														"nodeType": "YulTypedName",
														"src": "8048:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:12",
														"nodeType": "YulTypedName",
														"src": "8053:6:12",
														"type": ""
													}
												],
												"src": "7997:148:12"
											},
											{
												"body": {
													"nativeSrc": "8234:340:12",
													"nodeType": "YulBlock",
													"src": "8234:340:12",
													"statements": [
														{
															"nativeSrc": "8244:74:12",
															"nodeType": "YulAssignment",
															"src": "8244:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:12"
																		},
																		"nativeSrc": "8269:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:12"
																},
																"nativeSrc": "8253:65:12",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:12"
																},
																"nativeSrc": "8327:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:12"
															},
															"nativeSrc": "8327:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:12"
														},
														{
															"nativeSrc": "8357:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:12"
																},
																"nativeSrc": "8368:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:12",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:12",
																"nodeType": "YulBlock",
																"src": "8422:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:12"
																			},
																			"nativeSrc": "8424:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:12"
																		},
																		"nativeSrc": "8424:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:12"
																		},
																		"nativeSrc": "8399:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:12"
																},
																"nativeSrc": "8396:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:12"
															},
															"nativeSrc": "8393:112:12",
															"nodeType": "YulIf",
															"src": "8393:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:12"
																},
																"nativeSrc": "8514:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:12"
															},
															"nativeSrc": "8514:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:12",
														"nodeType": "YulTypedName",
														"src": "8207:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:12",
														"nodeType": "YulTypedName",
														"src": "8212:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:12",
														"nodeType": "YulTypedName",
														"src": "8220:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:12",
														"nodeType": "YulTypedName",
														"src": "8228:5:12",
														"type": ""
													}
												],
												"src": "8151:423:12"
											},
											{
												"body": {
													"nativeSrc": "8654:277:12",
													"nodeType": "YulBlock",
													"src": "8654:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:12",
																"nodeType": "YulBlock",
																"src": "8703:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:12"
																			},
																			"nativeSrc": "8705:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:12"
																		},
																		"nativeSrc": "8705:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:12"
																				},
																				"nativeSrc": "8678:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:12"
																		},
																		"nativeSrc": "8674:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:12"
																},
																"nativeSrc": "8667:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:12"
															},
															"nativeSrc": "8664:122:12",
															"nodeType": "YulIf",
															"src": "8664:122:12"
														},
														{
															"nativeSrc": "8795:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:12"
																},
																"nativeSrc": "8809:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:12",
															"nodeType": "YulAssignment",
															"src": "8838:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:12"
																		},
																		"nativeSrc": "8894:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:12"
																},
																"nativeSrc": "8847:78:12",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:12",
														"nodeType": "YulTypedName",
														"src": "8632:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:12",
														"nodeType": "YulTypedName",
														"src": "8640:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:12",
														"nodeType": "YulTypedName",
														"src": "8648:5:12",
														"type": ""
													}
												],
												"src": "8593:338:12"
											},
											{
												"body": {
													"nativeSrc": "9063:817:12",
													"nodeType": "YulBlock",
													"src": "9063:817:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:12",
																"nodeType": "YulBlock",
																"src": "9110:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:12"
																			},
																			"nativeSrc": "9112:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:12"
																		},
																		"nativeSrc": "9112:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:12"
																		},
																		"nativeSrc": "9080:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:12"
																},
																"nativeSrc": "9076:33:12",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:12"
															},
															"nativeSrc": "9073:120:12",
															"nodeType": "YulIf",
															"src": "9073:120:12"
														},
														{
															"nativeSrc": "9203:117:12",
															"nodeType": "YulBlock",
															"src": "9203:117:12",
															"statements": [
																{
																	"nativeSrc": "9218:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:12"
																				},
																				"nativeSrc": "9278:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:12"
																		},
																		"nativeSrc": "9257:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:12",
															"nodeType": "YulBlock",
															"src": "9330:118:12",
															"statements": [
																{
																	"nativeSrc": "9345:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:12"
																				},
																				"nativeSrc": "9406:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:12"
																		},
																		"nativeSrc": "9385:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:12",
															"nodeType": "YulBlock",
															"src": "9458:118:12",
															"statements": [
																{
																	"nativeSrc": "9473:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:12"
																				},
																				"nativeSrc": "9534:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:12"
																		},
																		"nativeSrc": "9513:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:12",
															"nodeType": "YulBlock",
															"src": "9586:287:12",
															"statements": [
																{
																	"nativeSrc": "9601:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:12"
																				},
																				"nativeSrc": "9628:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:12"
																		},
																		"nativeSrc": "9615:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:12",
																		"nodeType": "YulBlock",
																		"src": "9694:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:12"
																					},
																					"nativeSrc": "9696:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:12"
																				},
																				"nativeSrc": "9696:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:12"
																		},
																		"nativeSrc": "9663:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:12"
																	},
																	"nativeSrc": "9660:117:12",
																	"nodeType": "YulIf",
																	"src": "9660:117:12"
																},
																{
																	"nativeSrc": "9791:72:12",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:12"
																				},
																				"nativeSrc": "9831:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:12"
																		},
																		"nativeSrc": "9801:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:12",
														"nodeType": "YulTypedName",
														"src": "9009:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:12",
														"nodeType": "YulTypedName",
														"src": "9020:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:12",
														"nodeType": "YulTypedName",
														"src": "9032:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:12",
														"nodeType": "YulTypedName",
														"src": "9040:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:12",
														"nodeType": "YulTypedName",
														"src": "9048:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:12",
														"nodeType": "YulTypedName",
														"src": "9056:6:12",
														"type": ""
													}
												],
												"src": "8937:943:12"
											},
											{
												"body": {
													"nativeSrc": "9969:391:12",
													"nodeType": "YulBlock",
													"src": "9969:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:12",
																"nodeType": "YulBlock",
																"src": "10015:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:12"
																			},
																			"nativeSrc": "10017:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:12"
																		},
																		"nativeSrc": "10017:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:12"
																		},
																		"nativeSrc": "9986:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:12"
																},
																"nativeSrc": "9982:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:12"
															},
															"nativeSrc": "9979:119:12",
															"nodeType": "YulIf",
															"src": "9979:119:12"
														},
														{
															"nativeSrc": "10108:117:12",
															"nodeType": "YulBlock",
															"src": "10108:117:12",
															"statements": [
																{
																	"nativeSrc": "10123:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:12"
																				},
																				"nativeSrc": "10183:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:12"
																		},
																		"nativeSrc": "10162:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:12",
															"nodeType": "YulBlock",
															"src": "10235:118:12",
															"statements": [
																{
																	"nativeSrc": "10250:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:12"
																				},
																				"nativeSrc": "10311:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:12"
																		},
																		"nativeSrc": "10290:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:12",
														"nodeType": "YulTypedName",
														"src": "9931:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:12",
														"nodeType": "YulTypedName",
														"src": "9942:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:12",
														"nodeType": "YulTypedName",
														"src": "9954:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:12",
														"nodeType": "YulTypedName",
														"src": "9962:6:12",
														"type": ""
													}
												],
												"src": "9886:474:12"
											},
											{
												"body": {
													"nativeSrc": "10394:152:12",
													"nodeType": "YulBlock",
													"src": "10394:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:12"
																},
																"nativeSrc": "10404:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:12"
															},
															"nativeSrc": "10404:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:12"
																},
																"nativeSrc": "10501:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:12"
															},
															"nativeSrc": "10501:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:12"
																},
																"nativeSrc": "10525:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:12"
															},
															"nativeSrc": "10525:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:12"
											},
											{
												"body": {
													"nativeSrc": "10603:269:12",
													"nodeType": "YulBlock",
													"src": "10603:269:12",
													"statements": [
														{
															"nativeSrc": "10613:22:12",
															"nodeType": "YulAssignment",
															"src": "10613:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:12"
																},
																"nativeSrc": "10623:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:12"
																}
															]
														},
														{
															"nativeSrc": "10644:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:12"
																},
																"nativeSrc": "10670:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:12",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:12",
																"nodeType": "YulBlock",
																"src": "10721:51:12",
																"statements": [
																	{
																		"nativeSrc": "10735:27:12",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:12",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:12"
																			},
																			"nativeSrc": "10745:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:12"
																},
																"nativeSrc": "10694:26:12",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:12"
															},
															"nativeSrc": "10691:81:12",
															"nodeType": "YulIf",
															"src": "10691:81:12"
														},
														{
															"body": {
																"nativeSrc": "10824:42:12",
																"nodeType": "YulBlock",
																"src": "10824:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:12"
																			},
																			"nativeSrc": "10838:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:12"
																		},
																		"nativeSrc": "10838:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:12"
																		},
																		"nativeSrc": "10808:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:12"
																},
																"nativeSrc": "10785:38:12",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:12"
															},
															"nativeSrc": "10782:84:12",
															"nodeType": "YulIf",
															"src": "10782:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:12",
														"nodeType": "YulTypedName",
														"src": "10587:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:12",
														"nodeType": "YulTypedName",
														"src": "10596:6:12",
														"type": ""
													}
												],
												"src": "10552:320:12"
											},
											{
												"body": {
													"nativeSrc": "10984:125:12",
													"nodeType": "YulBlock",
													"src": "10984:125:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11006:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11006:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11014:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11014:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:12"
																		},
																		"nativeSrc": "11002:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11002:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nativeSrc": "11018:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11018:34:12",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10995:6:12"
																},
																"nativeSrc": "10995:58:12",
																"nodeType": "YulFunctionCall",
																"src": "10995:58:12"
															},
															"nativeSrc": "10995:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "10995:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11074:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11074:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11082:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:12"
																		},
																		"nativeSrc": "11070:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11070:15:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "11087:14:12",
																		"nodeType": "YulLiteral",
																		"src": "11087:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11063:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:12"
																},
																"nativeSrc": "11063:39:12",
																"nodeType": "YulFunctionCall",
																"src": "11063:39:12"
															},
															"nativeSrc": "11063:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "11063:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
												"nativeSrc": "10878:231:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10976:6:12",
														"nodeType": "YulTypedName",
														"src": "10976:6:12",
														"type": ""
													}
												],
												"src": "10878:231:12"
											},
											{
												"body": {
													"nativeSrc": "11261:220:12",
													"nodeType": "YulBlock",
													"src": "11261:220:12",
													"statements": [
														{
															"nativeSrc": "11271:74:12",
															"nodeType": "YulAssignment",
															"src": "11271:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11337:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11337:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11278:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11278:58:12"
																},
																"nativeSrc": "11278:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11278:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11271:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11271:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11443:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																	"nativeSrc": "11354:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11354:88:12"
																},
																"nativeSrc": "11354:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11354:93:12"
															},
															"nativeSrc": "11354:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11354:93:12"
														},
														{
															"nativeSrc": "11456:19:12",
															"nodeType": "YulAssignment",
															"src": "11456:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11467:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11467:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11472:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11472:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11463:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11463:3:12"
																},
																"nativeSrc": "11463:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11463:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11456:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11456:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11115:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11249:3:12",
														"nodeType": "YulTypedName",
														"src": "11249:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11257:3:12",
														"nodeType": "YulTypedName",
														"src": "11257:3:12",
														"type": ""
													}
												],
												"src": "11115:366:12"
											},
											{
												"body": {
													"nativeSrc": "11658:248:12",
													"nodeType": "YulBlock",
													"src": "11658:248:12",
													"statements": [
														{
															"nativeSrc": "11668:26:12",
															"nodeType": "YulAssignment",
															"src": "11668:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11680:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11680:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11691:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11691:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11676:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:12"
																},
																"nativeSrc": "11676:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11676:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11668:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11668:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11715:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11715:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11726:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11726:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11711:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:12"
																		},
																		"nativeSrc": "11711:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11734:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11734:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11740:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11740:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11730:3:12"
																		},
																		"nativeSrc": "11730:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11704:6:12"
																},
																"nativeSrc": "11704:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11704:47:12"
															},
															"nativeSrc": "11704:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11704:47:12"
														},
														{
															"nativeSrc": "11760:139:12",
															"nodeType": "YulAssignment",
															"src": "11760:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11894:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11894:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11768:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11768:124:12"
																},
																"nativeSrc": "11768:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11768:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11760:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11760:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11487:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11638:9:12",
														"nodeType": "YulTypedName",
														"src": "11638:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11653:4:12",
														"nodeType": "YulTypedName",
														"src": "11653:4:12",
														"type": ""
													}
												],
												"src": "11487:419:12"
											},
											{
												"body": {
													"nativeSrc": "12018:114:12",
													"nodeType": "YulBlock",
													"src": "12018:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12040:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12040:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12048:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12048:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12036:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12036:3:12"
																		},
																		"nativeSrc": "12036:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12036:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "12052:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12052:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:12"
																},
																"nativeSrc": "12029:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12029:58:12"
															},
															"nativeSrc": "12029:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12029:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12108:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12108:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12116:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12116:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12104:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12104:3:12"
																		},
																		"nativeSrc": "12104:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12104:15:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "12121:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12121:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12097:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12097:6:12"
																},
																"nativeSrc": "12097:28:12",
																"nodeType": "YulFunctionCall",
																"src": "12097:28:12"
															},
															"nativeSrc": "12097:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "12097:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "11912:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12010:6:12",
														"nodeType": "YulTypedName",
														"src": "12010:6:12",
														"type": ""
													}
												],
												"src": "11912:220:12"
											},
											{
												"body": {
													"nativeSrc": "12284:220:12",
													"nodeType": "YulBlock",
													"src": "12284:220:12",
													"statements": [
														{
															"nativeSrc": "12294:74:12",
															"nodeType": "YulAssignment",
															"src": "12294:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12360:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12360:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12365:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12365:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12301:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12301:58:12"
																},
																"nativeSrc": "12301:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12301:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12294:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12294:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12466:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12466:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "12377:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12377:88:12"
																},
																"nativeSrc": "12377:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12377:93:12"
															},
															"nativeSrc": "12377:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12377:93:12"
														},
														{
															"nativeSrc": "12479:19:12",
															"nodeType": "YulAssignment",
															"src": "12479:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12490:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12490:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12495:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12495:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12486:3:12"
																},
																"nativeSrc": "12486:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12486:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12479:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12479:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12138:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12272:3:12",
														"nodeType": "YulTypedName",
														"src": "12272:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12280:3:12",
														"nodeType": "YulTypedName",
														"src": "12280:3:12",
														"type": ""
													}
												],
												"src": "12138:366:12"
											},
											{
												"body": {
													"nativeSrc": "12681:248:12",
													"nodeType": "YulBlock",
													"src": "12681:248:12",
													"statements": [
														{
															"nativeSrc": "12691:26:12",
															"nodeType": "YulAssignment",
															"src": "12691:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12703:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12703:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12714:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12714:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12699:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12699:3:12"
																},
																"nativeSrc": "12699:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12699:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12691:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12691:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12738:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12738:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12749:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12749:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12734:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12734:3:12"
																		},
																		"nativeSrc": "12734:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12734:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12757:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12757:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12763:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12763:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12753:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12753:3:12"
																		},
																		"nativeSrc": "12753:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12727:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:12"
																},
																"nativeSrc": "12727:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12727:47:12"
															},
															"nativeSrc": "12727:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12727:47:12"
														},
														{
															"nativeSrc": "12783:139:12",
															"nodeType": "YulAssignment",
															"src": "12783:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12917:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12917:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12791:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12791:124:12"
																},
																"nativeSrc": "12791:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12791:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12783:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12783:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12510:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12661:9:12",
														"nodeType": "YulTypedName",
														"src": "12661:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12676:4:12",
														"nodeType": "YulTypedName",
														"src": "12676:4:12",
														"type": ""
													}
												],
												"src": "12510:419:12"
											},
											{
												"body": {
													"nativeSrc": "13041:137:12",
													"nodeType": "YulBlock",
													"src": "13041:137:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13063:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13063:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13071:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13071:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13059:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:12"
																		},
																		"nativeSrc": "13059:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nativeSrc": "13075:34:12",
																		"nodeType": "YulLiteral",
																		"src": "13075:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13052:6:12"
																},
																"nativeSrc": "13052:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13052:58:12"
															},
															"nativeSrc": "13052:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13052:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13131:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13131:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13139:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13139:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13127:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13127:3:12"
																		},
																		"nativeSrc": "13127:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13127:15:12"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "13144:26:12",
																		"nodeType": "YulLiteral",
																		"src": "13144:26:12",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13120:6:12"
																},
																"nativeSrc": "13120:51:12",
																"nodeType": "YulFunctionCall",
																"src": "13120:51:12"
															},
															"nativeSrc": "13120:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "13120:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
												"nativeSrc": "12935:243:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13033:6:12",
														"nodeType": "YulTypedName",
														"src": "13033:6:12",
														"type": ""
													}
												],
												"src": "12935:243:12"
											},
											{
												"body": {
													"nativeSrc": "13330:220:12",
													"nodeType": "YulBlock",
													"src": "13330:220:12",
													"statements": [
														{
															"nativeSrc": "13340:74:12",
															"nodeType": "YulAssignment",
															"src": "13340:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13406:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13406:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:12",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13347:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13347:58:12"
																},
																"nativeSrc": "13347:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13347:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13340:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13340:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13512:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13512:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																	"nativeSrc": "13423:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13423:88:12"
																},
																"nativeSrc": "13423:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13423:93:12"
															},
															"nativeSrc": "13423:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13423:93:12"
														},
														{
															"nativeSrc": "13525:19:12",
															"nodeType": "YulAssignment",
															"src": "13525:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13536:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13536:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13541:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13541:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13532:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13532:3:12"
																},
																"nativeSrc": "13532:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13532:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13525:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13525:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13184:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13318:3:12",
														"nodeType": "YulTypedName",
														"src": "13318:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13326:3:12",
														"nodeType": "YulTypedName",
														"src": "13326:3:12",
														"type": ""
													}
												],
												"src": "13184:366:12"
											},
											{
												"body": {
													"nativeSrc": "13727:248:12",
													"nodeType": "YulBlock",
													"src": "13727:248:12",
													"statements": [
														{
															"nativeSrc": "13737:26:12",
															"nodeType": "YulAssignment",
															"src": "13737:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13749:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13749:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13760:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13760:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13745:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:12"
																},
																"nativeSrc": "13745:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13745:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13737:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13737:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13784:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13795:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13795:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13780:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:12"
																		},
																		"nativeSrc": "13780:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13780:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13803:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13803:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13809:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13809:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13799:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13799:3:12"
																		},
																		"nativeSrc": "13799:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13799:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13773:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13773:6:12"
																},
																"nativeSrc": "13773:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13773:47:12"
															},
															"nativeSrc": "13773:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13773:47:12"
														},
														{
															"nativeSrc": "13829:139:12",
															"nodeType": "YulAssignment",
															"src": "13829:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13963:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13963:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13837:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13837:124:12"
																},
																"nativeSrc": "13837:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13837:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13829:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13829:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13556:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13707:9:12",
														"nodeType": "YulTypedName",
														"src": "13707:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13722:4:12",
														"nodeType": "YulTypedName",
														"src": "13722:4:12",
														"type": ""
													}
												],
												"src": "13556:419:12"
											},
											{
												"body": {
													"nativeSrc": "14087:130:12",
													"nodeType": "YulBlock",
													"src": "14087:130:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14109:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14109:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14117:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14117:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14105:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14105:3:12"
																		},
																		"nativeSrc": "14105:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14105:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nativeSrc": "14121:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14121:34:12",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14098:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14098:6:12"
																},
																"nativeSrc": "14098:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14098:58:12"
															},
															"nativeSrc": "14098:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14098:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14177:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14177:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14185:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14185:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14173:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14173:3:12"
																		},
																		"nativeSrc": "14173:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14173:15:12"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "14190:19:12",
																		"nodeType": "YulLiteral",
																		"src": "14190:19:12",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14166:6:12"
																},
																"nativeSrc": "14166:44:12",
																"nodeType": "YulFunctionCall",
																"src": "14166:44:12"
															},
															"nativeSrc": "14166:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "14166:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
												"nativeSrc": "13981:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14079:6:12",
														"nodeType": "YulTypedName",
														"src": "14079:6:12",
														"type": ""
													}
												],
												"src": "13981:236:12"
											},
											{
												"body": {
													"nativeSrc": "14369:220:12",
													"nodeType": "YulBlock",
													"src": "14369:220:12",
													"statements": [
														{
															"nativeSrc": "14379:74:12",
															"nodeType": "YulAssignment",
															"src": "14379:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14445:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14445:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14450:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14450:2:12",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14386:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14386:58:12"
																},
																"nativeSrc": "14386:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14386:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14379:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14379:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14551:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14551:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																	"nativeSrc": "14462:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14462:88:12"
																},
																"nativeSrc": "14462:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14462:93:12"
															},
															"nativeSrc": "14462:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14462:93:12"
														},
														{
															"nativeSrc": "14564:19:12",
															"nodeType": "YulAssignment",
															"src": "14564:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14575:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14575:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14580:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14571:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:12"
																},
																"nativeSrc": "14571:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14571:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14564:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14223:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14357:3:12",
														"nodeType": "YulTypedName",
														"src": "14357:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14365:3:12",
														"nodeType": "YulTypedName",
														"src": "14365:3:12",
														"type": ""
													}
												],
												"src": "14223:366:12"
											},
											{
												"body": {
													"nativeSrc": "14766:248:12",
													"nodeType": "YulBlock",
													"src": "14766:248:12",
													"statements": [
														{
															"nativeSrc": "14776:26:12",
															"nodeType": "YulAssignment",
															"src": "14776:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14788:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14788:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14799:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14799:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14784:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14784:3:12"
																},
																"nativeSrc": "14784:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14784:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14776:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14776:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14823:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14823:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14834:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14834:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14819:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14819:3:12"
																		},
																		"nativeSrc": "14819:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14819:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14842:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14842:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14848:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14848:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14838:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14838:3:12"
																		},
																		"nativeSrc": "14838:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14838:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14812:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14812:6:12"
																},
																"nativeSrc": "14812:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14812:47:12"
															},
															"nativeSrc": "14812:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14812:47:12"
														},
														{
															"nativeSrc": "14868:139:12",
															"nodeType": "YulAssignment",
															"src": "14868:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15002:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15002:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14876:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14876:124:12"
																},
																"nativeSrc": "14876:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14876:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14868:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14868:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14595:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14746:9:12",
														"nodeType": "YulTypedName",
														"src": "14746:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14761:4:12",
														"nodeType": "YulTypedName",
														"src": "14761:4:12",
														"type": ""
													}
												],
												"src": "14595:419:12"
											},
											{
												"body": {
													"nativeSrc": "15126:122:12",
													"nodeType": "YulBlock",
													"src": "15126:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15148:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15148:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15156:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15156:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15144:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15144:3:12"
																		},
																		"nativeSrc": "15144:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15144:14:12"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nativeSrc": "15160:34:12",
																		"nodeType": "YulLiteral",
																		"src": "15160:34:12",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15137:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15137:6:12"
																},
																"nativeSrc": "15137:58:12",
																"nodeType": "YulFunctionCall",
																"src": "15137:58:12"
															},
															"nativeSrc": "15137:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "15137:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15216:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15216:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15224:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15224:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15212:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15212:3:12"
																		},
																		"nativeSrc": "15212:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15212:15:12"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "15229:11:12",
																		"nodeType": "YulLiteral",
																		"src": "15229:11:12",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15205:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15205:6:12"
																},
																"nativeSrc": "15205:36:12",
																"nodeType": "YulFunctionCall",
																"src": "15205:36:12"
															},
															"nativeSrc": "15205:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "15205:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
												"nativeSrc": "15020:228:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15118:6:12",
														"nodeType": "YulTypedName",
														"src": "15118:6:12",
														"type": ""
													}
												],
												"src": "15020:228:12"
											},
											{
												"body": {
													"nativeSrc": "15400:220:12",
													"nodeType": "YulBlock",
													"src": "15400:220:12",
													"statements": [
														{
															"nativeSrc": "15410:74:12",
															"nodeType": "YulAssignment",
															"src": "15410:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15476:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15476:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15481:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15481:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15417:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15417:58:12"
																},
																"nativeSrc": "15417:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15417:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15410:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15410:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15582:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15582:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																	"nativeSrc": "15493:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15493:88:12"
																},
																"nativeSrc": "15493:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15493:93:12"
															},
															"nativeSrc": "15493:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15493:93:12"
														},
														{
															"nativeSrc": "15595:19:12",
															"nodeType": "YulAssignment",
															"src": "15595:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15606:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15606:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15611:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15611:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15602:3:12"
																},
																"nativeSrc": "15602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15602:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15595:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15595:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15254:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15388:3:12",
														"nodeType": "YulTypedName",
														"src": "15388:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15396:3:12",
														"nodeType": "YulTypedName",
														"src": "15396:3:12",
														"type": ""
													}
												],
												"src": "15254:366:12"
											},
											{
												"body": {
													"nativeSrc": "15797:248:12",
													"nodeType": "YulBlock",
													"src": "15797:248:12",
													"statements": [
														{
															"nativeSrc": "15807:26:12",
															"nodeType": "YulAssignment",
															"src": "15807:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15819:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15819:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15830:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15830:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15815:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15815:3:12"
																},
																"nativeSrc": "15815:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15815:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15807:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15807:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15854:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15854:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15865:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15865:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15850:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:12"
																		},
																		"nativeSrc": "15850:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15850:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15873:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15873:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15879:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15879:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15869:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15869:3:12"
																		},
																		"nativeSrc": "15869:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15869:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15843:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15843:6:12"
																},
																"nativeSrc": "15843:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15843:47:12"
															},
															"nativeSrc": "15843:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15843:47:12"
														},
														{
															"nativeSrc": "15899:139:12",
															"nodeType": "YulAssignment",
															"src": "15899:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16033:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16033:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15907:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15907:124:12"
																},
																"nativeSrc": "15907:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15907:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15899:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15899:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15626:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15777:9:12",
														"nodeType": "YulTypedName",
														"src": "15777:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15792:4:12",
														"nodeType": "YulTypedName",
														"src": "15792:4:12",
														"type": ""
													}
												],
												"src": "15626:419:12"
											},
											{
												"body": {
													"nativeSrc": "16157:123:12",
													"nodeType": "YulBlock",
													"src": "16157:123:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16179:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16179:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16187:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16187:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16175:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16175:3:12"
																		},
																		"nativeSrc": "16175:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16175:14:12"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nativeSrc": "16191:34:12",
																		"nodeType": "YulLiteral",
																		"src": "16191:34:12",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16168:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16168:6:12"
																},
																"nativeSrc": "16168:58:12",
																"nodeType": "YulFunctionCall",
																"src": "16168:58:12"
															},
															"nativeSrc": "16168:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "16168:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16247:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16247:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16255:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16255:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16243:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16243:3:12"
																		},
																		"nativeSrc": "16243:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16243:15:12"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "16260:12:12",
																		"nodeType": "YulLiteral",
																		"src": "16260:12:12",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16236:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16236:6:12"
																},
																"nativeSrc": "16236:37:12",
																"nodeType": "YulFunctionCall",
																"src": "16236:37:12"
															},
															"nativeSrc": "16236:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "16236:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
												"nativeSrc": "16051:229:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16149:6:12",
														"nodeType": "YulTypedName",
														"src": "16149:6:12",
														"type": ""
													}
												],
												"src": "16051:229:12"
											},
											{
												"body": {
													"nativeSrc": "16432:220:12",
													"nodeType": "YulBlock",
													"src": "16432:220:12",
													"statements": [
														{
															"nativeSrc": "16442:74:12",
															"nodeType": "YulAssignment",
															"src": "16442:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16508:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16508:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16513:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16449:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16449:58:12"
																},
																"nativeSrc": "16449:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16449:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16442:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16614:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16614:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																	"nativeSrc": "16525:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16525:88:12"
																},
																"nativeSrc": "16525:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16525:93:12"
															},
															"nativeSrc": "16525:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16525:93:12"
														},
														{
															"nativeSrc": "16627:19:12",
															"nodeType": "YulAssignment",
															"src": "16627:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16638:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16638:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16643:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16643:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16634:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16634:3:12"
																},
																"nativeSrc": "16634:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16634:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16627:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16627:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16286:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16420:3:12",
														"nodeType": "YulTypedName",
														"src": "16420:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16428:3:12",
														"nodeType": "YulTypedName",
														"src": "16428:3:12",
														"type": ""
													}
												],
												"src": "16286:366:12"
											},
											{
												"body": {
													"nativeSrc": "16829:248:12",
													"nodeType": "YulBlock",
													"src": "16829:248:12",
													"statements": [
														{
															"nativeSrc": "16839:26:12",
															"nodeType": "YulAssignment",
															"src": "16839:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16851:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16851:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16862:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16862:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16847:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16847:3:12"
																},
																"nativeSrc": "16847:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16847:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16839:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16839:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16886:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16886:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16897:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16897:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16882:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16882:3:12"
																		},
																		"nativeSrc": "16882:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16882:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16905:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16905:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16911:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16911:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16901:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16901:3:12"
																		},
																		"nativeSrc": "16901:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16901:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16875:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16875:6:12"
																},
																"nativeSrc": "16875:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16875:47:12"
															},
															"nativeSrc": "16875:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16875:47:12"
														},
														{
															"nativeSrc": "16931:139:12",
															"nodeType": "YulAssignment",
															"src": "16931:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17065:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17065:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16939:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16939:124:12"
																},
																"nativeSrc": "16939:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16939:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16931:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16931:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16658:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16809:9:12",
														"nodeType": "YulTypedName",
														"src": "16809:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16824:4:12",
														"nodeType": "YulTypedName",
														"src": "16824:4:12",
														"type": ""
													}
												],
												"src": "16658:419:12"
											},
											{
												"body": {
													"nativeSrc": "17189:69:12",
													"nodeType": "YulBlock",
													"src": "17189:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17211:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17211:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17219:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17219:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17207:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17207:3:12"
																		},
																		"nativeSrc": "17207:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17207:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "17223:27:12",
																		"nodeType": "YulLiteral",
																		"src": "17223:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17200:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17200:6:12"
																},
																"nativeSrc": "17200:51:12",
																"nodeType": "YulFunctionCall",
																"src": "17200:51:12"
															},
															"nativeSrc": "17200:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "17200:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "17083:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17181:6:12",
														"nodeType": "YulTypedName",
														"src": "17181:6:12",
														"type": ""
													}
												],
												"src": "17083:175:12"
											},
											{
												"body": {
													"nativeSrc": "17410:220:12",
													"nodeType": "YulBlock",
													"src": "17410:220:12",
													"statements": [
														{
															"nativeSrc": "17420:74:12",
															"nodeType": "YulAssignment",
															"src": "17420:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17486:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17491:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17491:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17427:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17427:58:12"
																},
																"nativeSrc": "17427:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17427:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17420:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17420:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17592:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17592:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "17503:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17503:88:12"
																},
																"nativeSrc": "17503:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17503:93:12"
															},
															"nativeSrc": "17503:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17503:93:12"
														},
														{
															"nativeSrc": "17605:19:12",
															"nodeType": "YulAssignment",
															"src": "17605:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17616:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17616:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17621:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17621:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17612:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17612:3:12"
																},
																"nativeSrc": "17612:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17612:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17605:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17605:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17264:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17398:3:12",
														"nodeType": "YulTypedName",
														"src": "17398:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17406:3:12",
														"nodeType": "YulTypedName",
														"src": "17406:3:12",
														"type": ""
													}
												],
												"src": "17264:366:12"
											},
											{
												"body": {
													"nativeSrc": "17807:248:12",
													"nodeType": "YulBlock",
													"src": "17807:248:12",
													"statements": [
														{
															"nativeSrc": "17817:26:12",
															"nodeType": "YulAssignment",
															"src": "17817:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17829:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17829:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17840:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17840:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17825:3:12"
																},
																"nativeSrc": "17825:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17825:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17817:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17817:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17864:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17864:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17875:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17875:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17860:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17860:3:12"
																		},
																		"nativeSrc": "17860:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17860:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17883:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17883:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17889:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17889:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17879:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17879:3:12"
																		},
																		"nativeSrc": "17879:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17879:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17853:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17853:6:12"
																},
																"nativeSrc": "17853:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17853:47:12"
															},
															"nativeSrc": "17853:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17853:47:12"
														},
														{
															"nativeSrc": "17909:139:12",
															"nodeType": "YulAssignment",
															"src": "17909:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18043:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18043:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17917:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17917:124:12"
																},
																"nativeSrc": "17917:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17917:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17909:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17636:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17787:9:12",
														"nodeType": "YulTypedName",
														"src": "17787:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17802:4:12",
														"nodeType": "YulTypedName",
														"src": "17802:4:12",
														"type": ""
													}
												],
												"src": "17636:419:12"
											},
											{
												"body": {
													"nativeSrc": "18167:128:12",
													"nodeType": "YulBlock",
													"src": "18167:128:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18189:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18189:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18185:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18185:3:12"
																		},
																		"nativeSrc": "18185:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18185:14:12"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nativeSrc": "18201:34:12",
																		"nodeType": "YulLiteral",
																		"src": "18201:34:12",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18178:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18178:6:12"
																},
																"nativeSrc": "18178:58:12",
																"nodeType": "YulFunctionCall",
																"src": "18178:58:12"
															},
															"nativeSrc": "18178:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "18178:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18257:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18257:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18265:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18265:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18253:3:12"
																		},
																		"nativeSrc": "18253:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18253:15:12"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "18270:17:12",
																		"nodeType": "YulLiteral",
																		"src": "18270:17:12",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18246:6:12"
																},
																"nativeSrc": "18246:42:12",
																"nodeType": "YulFunctionCall",
																"src": "18246:42:12"
															},
															"nativeSrc": "18246:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "18246:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nativeSrc": "18061:234:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18159:6:12",
														"nodeType": "YulTypedName",
														"src": "18159:6:12",
														"type": ""
													}
												],
												"src": "18061:234:12"
											},
											{
												"body": {
													"nativeSrc": "18447:220:12",
													"nodeType": "YulBlock",
													"src": "18447:220:12",
													"statements": [
														{
															"nativeSrc": "18457:74:12",
															"nodeType": "YulAssignment",
															"src": "18457:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18523:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18523:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18528:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18528:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18464:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18464:58:12"
																},
																"nativeSrc": "18464:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18464:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18457:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18629:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18629:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nativeSrc": "18540:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18540:88:12"
																},
																"nativeSrc": "18540:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18540:93:12"
															},
															"nativeSrc": "18540:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18540:93:12"
														},
														{
															"nativeSrc": "18642:19:12",
															"nodeType": "YulAssignment",
															"src": "18642:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18653:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18653:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18658:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18649:3:12"
																},
																"nativeSrc": "18649:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18649:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18642:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18642:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18301:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18435:3:12",
														"nodeType": "YulTypedName",
														"src": "18435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18443:3:12",
														"nodeType": "YulTypedName",
														"src": "18443:3:12",
														"type": ""
													}
												],
												"src": "18301:366:12"
											},
											{
												"body": {
													"nativeSrc": "18844:248:12",
													"nodeType": "YulBlock",
													"src": "18844:248:12",
													"statements": [
														{
															"nativeSrc": "18854:26:12",
															"nodeType": "YulAssignment",
															"src": "18854:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18866:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18866:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18877:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18877:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18862:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18862:3:12"
																},
																"nativeSrc": "18862:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18862:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18854:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18854:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18901:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18912:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18912:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18897:3:12"
																		},
																		"nativeSrc": "18897:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18897:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18920:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18920:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18926:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18916:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18916:3:12"
																		},
																		"nativeSrc": "18916:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18916:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18890:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18890:6:12"
																},
																"nativeSrc": "18890:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18890:47:12"
															},
															"nativeSrc": "18890:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18890:47:12"
														},
														{
															"nativeSrc": "18946:139:12",
															"nodeType": "YulAssignment",
															"src": "18946:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19080:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19080:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18954:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18954:124:12"
																},
																"nativeSrc": "18954:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18954:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18946:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18946:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18673:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18824:9:12",
														"nodeType": "YulTypedName",
														"src": "18824:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18839:4:12",
														"nodeType": "YulTypedName",
														"src": "18839:4:12",
														"type": ""
													}
												],
												"src": "18673:419:12"
											},
											{
												"body": {
													"nativeSrc": "19212:34:12",
													"nodeType": "YulBlock",
													"src": "19212:34:12",
													"statements": [
														{
															"nativeSrc": "19222:18:12",
															"nodeType": "YulAssignment",
															"src": "19222:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "19237:3:12",
																"nodeType": "YulIdentifier",
																"src": "19237:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19222:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "19222:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19098:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19184:3:12",
														"nodeType": "YulTypedName",
														"src": "19184:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19189:6:12",
														"nodeType": "YulTypedName",
														"src": "19189:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19200:11:12",
														"nodeType": "YulTypedName",
														"src": "19200:11:12",
														"type": ""
													}
												],
												"src": "19098:148:12"
											},
											{
												"body": {
													"nativeSrc": "19362:280:12",
													"nodeType": "YulBlock",
													"src": "19362:280:12",
													"statements": [
														{
															"nativeSrc": "19372:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19372:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19419:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19419:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19386:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "19386:32:12"
																},
																"nativeSrc": "19386:39:12",
																"nodeType": "YulFunctionCall",
																"src": "19386:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19376:6:12",
																	"nodeType": "YulTypedName",
																	"src": "19376:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19434:96:12",
															"nodeType": "YulAssignment",
															"src": "19434:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19518:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19518:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19523:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19523:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19441:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "19441:76:12"
																},
																"nativeSrc": "19441:89:12",
																"nodeType": "YulFunctionCall",
																"src": "19441:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19434:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19434:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19578:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "19578:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19585:4:12",
																				"nodeType": "YulLiteral",
																				"src": "19585:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19574:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19574:3:12"
																		},
																		"nativeSrc": "19574:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19574:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19592:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19592:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19597:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19597:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19539:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "19539:34:12"
																},
																"nativeSrc": "19539:65:12",
																"nodeType": "YulFunctionCall",
																"src": "19539:65:12"
															},
															"nativeSrc": "19539:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "19539:65:12"
														},
														{
															"nativeSrc": "19613:23:12",
															"nodeType": "YulAssignment",
															"src": "19613:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19624:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19624:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19629:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19629:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19620:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19620:3:12"
																},
																"nativeSrc": "19620:16:12",
																"nodeType": "YulFunctionCall",
																"src": "19620:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19613:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19613:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19252:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19343:5:12",
														"nodeType": "YulTypedName",
														"src": "19343:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19350:3:12",
														"nodeType": "YulTypedName",
														"src": "19350:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19358:3:12",
														"nodeType": "YulTypedName",
														"src": "19358:3:12",
														"type": ""
													}
												],
												"src": "19252:390:12"
											},
											{
												"body": {
													"nativeSrc": "19832:251:12",
													"nodeType": "YulBlock",
													"src": "19832:251:12",
													"statements": [
														{
															"nativeSrc": "19843:102:12",
															"nodeType": "YulAssignment",
															"src": "19843:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19932:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19932:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19941:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19941:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19850:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "19850:81:12"
																},
																"nativeSrc": "19850:95:12",
																"nodeType": "YulFunctionCall",
																"src": "19850:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19843:3:12"
																}
															]
														},
														{
															"nativeSrc": "19955:102:12",
															"nodeType": "YulAssignment",
															"src": "19955:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20044:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20053:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20053:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19962:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "19962:81:12"
																},
																"nativeSrc": "19962:95:12",
																"nodeType": "YulFunctionCall",
																"src": "19962:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19955:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19955:3:12"
																}
															]
														},
														{
															"nativeSrc": "20067:10:12",
															"nodeType": "YulAssignment",
															"src": "20067:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "20074:3:12",
																"nodeType": "YulIdentifier",
																"src": "20074:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20067:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20067:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19648:435:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19803:3:12",
														"nodeType": "YulTypedName",
														"src": "19803:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19809:6:12",
														"nodeType": "YulTypedName",
														"src": "19809:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19817:6:12",
														"nodeType": "YulTypedName",
														"src": "19817:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19828:3:12",
														"nodeType": "YulTypedName",
														"src": "19828:3:12",
														"type": ""
													}
												],
												"src": "19648:435:12"
											},
											{
												"body": {
													"nativeSrc": "20195:125:12",
													"nodeType": "YulBlock",
													"src": "20195:125:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20217:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20217:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20225:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20225:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20213:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20213:3:12"
																		},
																		"nativeSrc": "20213:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20213:14:12"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nativeSrc": "20229:34:12",
																		"nodeType": "YulLiteral",
																		"src": "20229:34:12",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20206:6:12"
																},
																"nativeSrc": "20206:58:12",
																"nodeType": "YulFunctionCall",
																"src": "20206:58:12"
															},
															"nativeSrc": "20206:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "20206:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20285:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20285:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20293:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20293:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20281:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20281:3:12"
																		},
																		"nativeSrc": "20281:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20281:15:12"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "20298:14:12",
																		"nodeType": "YulLiteral",
																		"src": "20298:14:12",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20274:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20274:6:12"
																},
																"nativeSrc": "20274:39:12",
																"nodeType": "YulFunctionCall",
																"src": "20274:39:12"
															},
															"nativeSrc": "20274:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "20274:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
												"nativeSrc": "20089:231:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20187:6:12",
														"nodeType": "YulTypedName",
														"src": "20187:6:12",
														"type": ""
													}
												],
												"src": "20089:231:12"
											},
											{
												"body": {
													"nativeSrc": "20472:220:12",
													"nodeType": "YulBlock",
													"src": "20472:220:12",
													"statements": [
														{
															"nativeSrc": "20482:74:12",
															"nodeType": "YulAssignment",
															"src": "20482:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20548:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20548:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20553:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20553:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20489:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20489:58:12"
																},
																"nativeSrc": "20489:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20489:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20482:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20654:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20654:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																	"nativeSrc": "20565:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20565:88:12"
																},
																"nativeSrc": "20565:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20565:93:12"
															},
															"nativeSrc": "20565:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20565:93:12"
														},
														{
															"nativeSrc": "20667:19:12",
															"nodeType": "YulAssignment",
															"src": "20667:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20678:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20678:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20683:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20683:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20674:3:12"
																},
																"nativeSrc": "20674:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20674:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20667:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20667:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20326:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20460:3:12",
														"nodeType": "YulTypedName",
														"src": "20460:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20468:3:12",
														"nodeType": "YulTypedName",
														"src": "20468:3:12",
														"type": ""
													}
												],
												"src": "20326:366:12"
											},
											{
												"body": {
													"nativeSrc": "20869:248:12",
													"nodeType": "YulBlock",
													"src": "20869:248:12",
													"statements": [
														{
															"nativeSrc": "20879:26:12",
															"nodeType": "YulAssignment",
															"src": "20879:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20891:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20891:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20902:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20902:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20887:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20887:3:12"
																},
																"nativeSrc": "20887:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20887:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20879:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20879:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20937:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20937:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20922:3:12"
																		},
																		"nativeSrc": "20922:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20922:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20945:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20945:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20951:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20951:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20941:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20941:3:12"
																		},
																		"nativeSrc": "20941:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20941:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20915:6:12"
																},
																"nativeSrc": "20915:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20915:47:12"
															},
															"nativeSrc": "20915:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20915:47:12"
														},
														{
															"nativeSrc": "20971:139:12",
															"nodeType": "YulAssignment",
															"src": "20971:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21105:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21105:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20979:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20979:124:12"
																},
																"nativeSrc": "20979:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20979:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20971:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20971:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20698:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20849:9:12",
														"nodeType": "YulTypedName",
														"src": "20849:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20864:4:12",
														"nodeType": "YulTypedName",
														"src": "20864:4:12",
														"type": ""
													}
												],
												"src": "20698:419:12"
											},
											{
												"body": {
													"nativeSrc": "21229:122:12",
													"nodeType": "YulBlock",
													"src": "21229:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21251:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21251:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21259:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21259:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21247:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21247:3:12"
																		},
																		"nativeSrc": "21247:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21247:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nativeSrc": "21263:34:12",
																		"nodeType": "YulLiteral",
																		"src": "21263:34:12",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21240:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21240:6:12"
																},
																"nativeSrc": "21240:58:12",
																"nodeType": "YulFunctionCall",
																"src": "21240:58:12"
															},
															"nativeSrc": "21240:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "21240:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21319:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21319:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21327:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21327:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21315:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21315:3:12"
																		},
																		"nativeSrc": "21315:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21315:15:12"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nativeSrc": "21332:11:12",
																		"nodeType": "YulLiteral",
																		"src": "21332:11:12",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21308:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21308:6:12"
																},
																"nativeSrc": "21308:36:12",
																"nodeType": "YulFunctionCall",
																"src": "21308:36:12"
															},
															"nativeSrc": "21308:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "21308:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
												"nativeSrc": "21123:228:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21221:6:12",
														"nodeType": "YulTypedName",
														"src": "21221:6:12",
														"type": ""
													}
												],
												"src": "21123:228:12"
											},
											{
												"body": {
													"nativeSrc": "21503:220:12",
													"nodeType": "YulBlock",
													"src": "21503:220:12",
													"statements": [
														{
															"nativeSrc": "21513:74:12",
															"nodeType": "YulAssignment",
															"src": "21513:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21579:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21579:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21584:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21584:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21520:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21520:58:12"
																},
																"nativeSrc": "21520:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21520:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21513:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21685:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21685:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																	"nativeSrc": "21596:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21596:88:12"
																},
																"nativeSrc": "21596:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21596:93:12"
															},
															"nativeSrc": "21596:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21596:93:12"
														},
														{
															"nativeSrc": "21698:19:12",
															"nodeType": "YulAssignment",
															"src": "21698:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21709:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21709:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21714:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21714:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21705:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21705:3:12"
																},
																"nativeSrc": "21705:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21705:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21698:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21698:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21357:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21491:3:12",
														"nodeType": "YulTypedName",
														"src": "21491:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21499:3:12",
														"nodeType": "YulTypedName",
														"src": "21499:3:12",
														"type": ""
													}
												],
												"src": "21357:366:12"
											},
											{
												"body": {
													"nativeSrc": "21900:248:12",
													"nodeType": "YulBlock",
													"src": "21900:248:12",
													"statements": [
														{
															"nativeSrc": "21910:26:12",
															"nodeType": "YulAssignment",
															"src": "21910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21918:3:12"
																},
																"nativeSrc": "21918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21957:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21957:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21968:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21968:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21953:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21953:3:12"
																		},
																		"nativeSrc": "21953:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21953:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21976:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21976:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21982:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21982:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21972:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21972:3:12"
																		},
																		"nativeSrc": "21972:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21972:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21946:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21946:6:12"
																},
																"nativeSrc": "21946:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21946:47:12"
															},
															"nativeSrc": "21946:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21946:47:12"
														},
														{
															"nativeSrc": "22002:139:12",
															"nodeType": "YulAssignment",
															"src": "22002:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22136:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22136:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22010:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22010:124:12"
																},
																"nativeSrc": "22010:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22010:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22002:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22002:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21729:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21880:9:12",
														"nodeType": "YulTypedName",
														"src": "21880:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21895:4:12",
														"nodeType": "YulTypedName",
														"src": "21895:4:12",
														"type": ""
													}
												],
												"src": "21729:419:12"
											},
											{
												"body": {
													"nativeSrc": "22260:117:12",
													"nodeType": "YulBlock",
													"src": "22260:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22282:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22282:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22290:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22290:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22278:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22278:3:12"
																		},
																		"nativeSrc": "22278:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22278:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "22294:34:12",
																		"nodeType": "YulLiteral",
																		"src": "22294:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22271:6:12"
																},
																"nativeSrc": "22271:58:12",
																"nodeType": "YulFunctionCall",
																"src": "22271:58:12"
															},
															"nativeSrc": "22271:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "22271:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22350:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22350:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22358:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22358:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22346:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22346:3:12"
																		},
																		"nativeSrc": "22346:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22346:15:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "22363:6:12",
																		"nodeType": "YulLiteral",
																		"src": "22363:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22339:6:12"
																},
																"nativeSrc": "22339:31:12",
																"nodeType": "YulFunctionCall",
																"src": "22339:31:12"
															},
															"nativeSrc": "22339:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "22339:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nativeSrc": "22154:223:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22252:6:12",
														"nodeType": "YulTypedName",
														"src": "22252:6:12",
														"type": ""
													}
												],
												"src": "22154:223:12"
											},
											{
												"body": {
													"nativeSrc": "22529:220:12",
													"nodeType": "YulBlock",
													"src": "22529:220:12",
													"statements": [
														{
															"nativeSrc": "22539:74:12",
															"nodeType": "YulAssignment",
															"src": "22539:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22605:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22605:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22610:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22610:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22546:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22546:58:12"
																},
																"nativeSrc": "22546:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22546:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22539:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22539:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22711:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22711:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nativeSrc": "22622:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22622:88:12"
																},
																"nativeSrc": "22622:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22622:93:12"
															},
															"nativeSrc": "22622:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22622:93:12"
														},
														{
															"nativeSrc": "22724:19:12",
															"nodeType": "YulAssignment",
															"src": "22724:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22735:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22735:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22740:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22740:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22731:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22731:3:12"
																},
																"nativeSrc": "22731:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22731:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22724:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22724:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22383:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22517:3:12",
														"nodeType": "YulTypedName",
														"src": "22517:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22525:3:12",
														"nodeType": "YulTypedName",
														"src": "22525:3:12",
														"type": ""
													}
												],
												"src": "22383:366:12"
											},
											{
												"body": {
													"nativeSrc": "22926:248:12",
													"nodeType": "YulBlock",
													"src": "22926:248:12",
													"statements": [
														{
															"nativeSrc": "22936:26:12",
															"nodeType": "YulAssignment",
															"src": "22936:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22948:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22948:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22959:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22959:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22944:3:12"
																},
																"nativeSrc": "22944:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22944:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22936:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22936:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22983:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22983:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22994:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22994:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22979:3:12"
																		},
																		"nativeSrc": "22979:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22979:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23002:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23002:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23008:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23008:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22998:3:12"
																		},
																		"nativeSrc": "22998:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22998:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22972:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22972:6:12"
																},
																"nativeSrc": "22972:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22972:47:12"
															},
															"nativeSrc": "22972:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22972:47:12"
														},
														{
															"nativeSrc": "23028:139:12",
															"nodeType": "YulAssignment",
															"src": "23028:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23162:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23162:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23036:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "23036:124:12"
																},
																"nativeSrc": "23036:131:12",
																"nodeType": "YulFunctionCall",
																"src": "23036:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23028:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23028:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22755:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22906:9:12",
														"nodeType": "YulTypedName",
														"src": "22906:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22921:4:12",
														"nodeType": "YulTypedName",
														"src": "22921:4:12",
														"type": ""
													}
												],
												"src": "22755:419:12"
											},
											{
												"body": {
													"nativeSrc": "23208:152:12",
													"nodeType": "YulBlock",
													"src": "23208:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23225:1:12",
																		"nodeType": "YulLiteral",
																		"src": "23225:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23228:77:12",
																		"nodeType": "YulLiteral",
																		"src": "23228:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23218:6:12"
																},
																"nativeSrc": "23218:88:12",
																"nodeType": "YulFunctionCall",
																"src": "23218:88:12"
															},
															"nativeSrc": "23218:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "23218:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23322:1:12",
																		"nodeType": "YulLiteral",
																		"src": "23322:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23325:4:12",
																		"nodeType": "YulLiteral",
																		"src": "23325:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23315:6:12"
																},
																"nativeSrc": "23315:15:12",
																"nodeType": "YulFunctionCall",
																"src": "23315:15:12"
															},
															"nativeSrc": "23315:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "23315:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23346:1:12",
																		"nodeType": "YulLiteral",
																		"src": "23346:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23349:4:12",
																		"nodeType": "YulLiteral",
																		"src": "23349:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23339:6:12"
																},
																"nativeSrc": "23339:15:12",
																"nodeType": "YulFunctionCall",
																"src": "23339:15:12"
															},
															"nativeSrc": "23339:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "23339:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "23180:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "23180:180:12"
											},
											{
												"body": {
													"nativeSrc": "23411:149:12",
													"nodeType": "YulBlock",
													"src": "23411:149:12",
													"statements": [
														{
															"nativeSrc": "23421:25:12",
															"nodeType": "YulAssignment",
															"src": "23421:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23444:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23444:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23426:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23426:17:12"
																},
																"nativeSrc": "23426:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23426:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23421:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23421:1:12"
																}
															]
														},
														{
															"nativeSrc": "23455:25:12",
															"nodeType": "YulAssignment",
															"src": "23455:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23478:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23478:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23460:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23460:17:12"
																},
																"nativeSrc": "23460:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23460:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23455:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23455:1:12"
																}
															]
														},
														{
															"nativeSrc": "23489:17:12",
															"nodeType": "YulAssignment",
															"src": "23489:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23501:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23501:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23504:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23504:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "23497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23497:3:12"
																},
																"nativeSrc": "23497:9:12",
																"nodeType": "YulFunctionCall",
																"src": "23497:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "23489:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23489:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23531:22:12",
																"nodeType": "YulBlock",
																"src": "23531:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23533:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "23533:16:12"
																			},
																			"nativeSrc": "23533:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23533:18:12"
																		},
																		"nativeSrc": "23533:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23533:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "23522:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23522:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "23528:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23528:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23519:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23519:2:12"
																},
																"nativeSrc": "23519:11:12",
																"nodeType": "YulFunctionCall",
																"src": "23519:11:12"
															},
															"nativeSrc": "23516:37:12",
															"nodeType": "YulIf",
															"src": "23516:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "23366:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23397:1:12",
														"nodeType": "YulTypedName",
														"src": "23397:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23400:1:12",
														"nodeType": "YulTypedName",
														"src": "23400:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "23406:4:12",
														"nodeType": "YulTypedName",
														"src": "23406:4:12",
														"type": ""
													}
												],
												"src": "23366:194:12"
											},
											{
												"body": {
													"nativeSrc": "23610:147:12",
													"nodeType": "YulBlock",
													"src": "23610:147:12",
													"statements": [
														{
															"nativeSrc": "23620:25:12",
															"nodeType": "YulAssignment",
															"src": "23620:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23643:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23643:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23625:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23625:17:12"
																},
																"nativeSrc": "23625:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23625:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23620:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23620:1:12"
																}
															]
														},
														{
															"nativeSrc": "23654:25:12",
															"nodeType": "YulAssignment",
															"src": "23654:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23677:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23677:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23659:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23659:17:12"
																},
																"nativeSrc": "23659:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23659:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23654:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23654:1:12"
																}
															]
														},
														{
															"nativeSrc": "23688:16:12",
															"nodeType": "YulAssignment",
															"src": "23688:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23699:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23699:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23702:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23702:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23695:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23695:3:12"
																},
																"nativeSrc": "23695:9:12",
																"nodeType": "YulFunctionCall",
																"src": "23695:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23688:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23688:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23728:22:12",
																"nodeType": "YulBlock",
																"src": "23728:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23730:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "23730:16:12"
																			},
																			"nativeSrc": "23730:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23730:18:12"
																		},
																		"nativeSrc": "23730:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23730:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23720:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23720:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23723:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23723:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23717:2:12"
																},
																"nativeSrc": "23717:10:12",
																"nodeType": "YulFunctionCall",
																"src": "23717:10:12"
															},
															"nativeSrc": "23714:36:12",
															"nodeType": "YulIf",
															"src": "23714:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23566:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23597:1:12",
														"nodeType": "YulTypedName",
														"src": "23597:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23600:1:12",
														"nodeType": "YulTypedName",
														"src": "23600:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23606:3:12",
														"nodeType": "YulTypedName",
														"src": "23606:3:12",
														"type": ""
													}
												],
												"src": "23566:191:12"
											},
											{
												"body": {
													"nativeSrc": "23869:131:12",
													"nodeType": "YulBlock",
													"src": "23869:131:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23891:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23891:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23899:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23899:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23887:3:12"
																		},
																		"nativeSrc": "23887:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23887:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "23903:34:12",
																		"nodeType": "YulLiteral",
																		"src": "23903:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23880:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23880:6:12"
																},
																"nativeSrc": "23880:58:12",
																"nodeType": "YulFunctionCall",
																"src": "23880:58:12"
															},
															"nativeSrc": "23880:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "23880:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23959:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23967:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23967:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23955:3:12"
																		},
																		"nativeSrc": "23955:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23955:15:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "23972:20:12",
																		"nodeType": "YulLiteral",
																		"src": "23972:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23948:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23948:6:12"
																},
																"nativeSrc": "23948:45:12",
																"nodeType": "YulFunctionCall",
																"src": "23948:45:12"
															},
															"nativeSrc": "23948:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "23948:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "23763:237:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23861:6:12",
														"nodeType": "YulTypedName",
														"src": "23861:6:12",
														"type": ""
													}
												],
												"src": "23763:237:12"
											},
											{
												"body": {
													"nativeSrc": "24152:220:12",
													"nodeType": "YulBlock",
													"src": "24152:220:12",
													"statements": [
														{
															"nativeSrc": "24162:74:12",
															"nodeType": "YulAssignment",
															"src": "24162:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24228:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24228:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24233:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24233:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24169:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24169:58:12"
																},
																"nativeSrc": "24169:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24169:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24162:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24162:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24334:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24334:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "24245:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24245:88:12"
																},
																"nativeSrc": "24245:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24245:93:12"
															},
															"nativeSrc": "24245:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24245:93:12"
														},
														{
															"nativeSrc": "24347:19:12",
															"nodeType": "YulAssignment",
															"src": "24347:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24358:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24358:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24363:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24363:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24354:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24354:3:12"
																},
																"nativeSrc": "24354:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24354:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24347:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24347:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24006:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24140:3:12",
														"nodeType": "YulTypedName",
														"src": "24140:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24148:3:12",
														"nodeType": "YulTypedName",
														"src": "24148:3:12",
														"type": ""
													}
												],
												"src": "24006:366:12"
											},
											{
												"body": {
													"nativeSrc": "24549:248:12",
													"nodeType": "YulBlock",
													"src": "24549:248:12",
													"statements": [
														{
															"nativeSrc": "24559:26:12",
															"nodeType": "YulAssignment",
															"src": "24559:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24571:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24571:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24582:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24582:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24567:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24567:3:12"
																},
																"nativeSrc": "24567:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24567:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24559:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24559:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24606:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24606:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24617:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24617:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24602:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24602:3:12"
																		},
																		"nativeSrc": "24602:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24602:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24625:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24625:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24631:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24631:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24621:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24621:3:12"
																		},
																		"nativeSrc": "24621:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24621:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24595:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24595:6:12"
																},
																"nativeSrc": "24595:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24595:47:12"
															},
															"nativeSrc": "24595:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24595:47:12"
														},
														{
															"nativeSrc": "24651:139:12",
															"nodeType": "YulAssignment",
															"src": "24651:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24785:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24785:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24659:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24659:124:12"
																},
																"nativeSrc": "24659:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24659:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24651:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24651:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24378:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24529:9:12",
														"nodeType": "YulTypedName",
														"src": "24529:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24544:4:12",
														"nodeType": "YulTypedName",
														"src": "24544:4:12",
														"type": ""
													}
												],
												"src": "24378:419:12"
											},
											{
												"body": {
													"nativeSrc": "24846:190:12",
													"nodeType": "YulBlock",
													"src": "24846:190:12",
													"statements": [
														{
															"nativeSrc": "24856:33:12",
															"nodeType": "YulAssignment",
															"src": "24856:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24883:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24883:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24865:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "24865:17:12"
																},
																"nativeSrc": "24865:24:12",
																"nodeType": "YulFunctionCall",
																"src": "24865:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24856:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "24856:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24979:22:12",
																"nodeType": "YulBlock",
																"src": "24979:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24981:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "24981:16:12"
																			},
																			"nativeSrc": "24981:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "24981:18:12"
																		},
																		"nativeSrc": "24981:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "24981:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24904:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24904:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24911:66:12",
																		"nodeType": "YulLiteral",
																		"src": "24911:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "24901:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "24901:2:12"
																},
																"nativeSrc": "24901:77:12",
																"nodeType": "YulFunctionCall",
																"src": "24901:77:12"
															},
															"nativeSrc": "24898:103:12",
															"nodeType": "YulIf",
															"src": "24898:103:12"
														},
														{
															"nativeSrc": "25010:20:12",
															"nodeType": "YulAssignment",
															"src": "25010:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25021:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25021:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25028:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25028:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25017:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25017:3:12"
																},
																"nativeSrc": "25017:13:12",
																"nodeType": "YulFunctionCall",
																"src": "25017:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25010:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25010:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "24803:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24832:5:12",
														"nodeType": "YulTypedName",
														"src": "24832:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24842:3:12",
														"nodeType": "YulTypedName",
														"src": "24842:3:12",
														"type": ""
													}
												],
												"src": "24803:233:12"
											},
											{
												"body": {
													"nativeSrc": "25070:152:12",
													"nodeType": "YulBlock",
													"src": "25070:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25087:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25087:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25090:77:12",
																		"nodeType": "YulLiteral",
																		"src": "25090:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25080:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25080:6:12"
																},
																"nativeSrc": "25080:88:12",
																"nodeType": "YulFunctionCall",
																"src": "25080:88:12"
															},
															"nativeSrc": "25080:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "25080:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25184:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25184:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25187:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25187:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25177:6:12"
																},
																"nativeSrc": "25177:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25177:15:12"
															},
															"nativeSrc": "25177:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25177:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25208:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25208:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25211:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25211:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25201:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25201:6:12"
																},
																"nativeSrc": "25201:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25201:15:12"
															},
															"nativeSrc": "25201:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25201:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "25042:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "25042:180:12"
											},
											{
												"body": {
													"nativeSrc": "25270:143:12",
													"nodeType": "YulBlock",
													"src": "25270:143:12",
													"statements": [
														{
															"nativeSrc": "25280:25:12",
															"nodeType": "YulAssignment",
															"src": "25280:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25303:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25303:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25285:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25285:17:12"
																},
																"nativeSrc": "25285:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25285:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25280:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25280:1:12"
																}
															]
														},
														{
															"nativeSrc": "25314:25:12",
															"nodeType": "YulAssignment",
															"src": "25314:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25337:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25337:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25319:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25319:17:12"
																},
																"nativeSrc": "25319:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25319:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25314:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25314:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25361:22:12",
																"nodeType": "YulBlock",
																"src": "25361:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "25363:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "25363:16:12"
																			},
																			"nativeSrc": "25363:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25363:18:12"
																		},
																		"nativeSrc": "25363:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25363:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25358:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25358:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25351:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25351:6:12"
																},
																"nativeSrc": "25351:9:12",
																"nodeType": "YulFunctionCall",
																"src": "25351:9:12"
															},
															"nativeSrc": "25348:35:12",
															"nodeType": "YulIf",
															"src": "25348:35:12"
														},
														{
															"nativeSrc": "25393:14:12",
															"nodeType": "YulAssignment",
															"src": "25393:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25402:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25402:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25405:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25405:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "25398:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25398:3:12"
																},
																"nativeSrc": "25398:9:12",
																"nodeType": "YulFunctionCall",
																"src": "25398:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "25393:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25393:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "25228:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25259:1:12",
														"nodeType": "YulTypedName",
														"src": "25259:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25262:1:12",
														"nodeType": "YulTypedName",
														"src": "25262:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "25268:1:12",
														"nodeType": "YulTypedName",
														"src": "25268:1:12",
														"type": ""
													}
												],
												"src": "25228:185:12"
											},
											{
												"body": {
													"nativeSrc": "25453:142:12",
													"nodeType": "YulBlock",
													"src": "25453:142:12",
													"statements": [
														{
															"nativeSrc": "25463:25:12",
															"nodeType": "YulAssignment",
															"src": "25463:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25486:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25486:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25468:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25468:17:12"
																},
																"nativeSrc": "25468:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25468:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25463:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25463:1:12"
																}
															]
														},
														{
															"nativeSrc": "25497:25:12",
															"nodeType": "YulAssignment",
															"src": "25497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25520:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25520:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25502:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25502:17:12"
																},
																"nativeSrc": "25502:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25502:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25497:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25497:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25544:22:12",
																"nodeType": "YulBlock",
																"src": "25544:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "25546:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "25546:16:12"
																			},
																			"nativeSrc": "25546:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25546:18:12"
																		},
																		"nativeSrc": "25546:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25546:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25541:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25541:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25534:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25534:6:12"
																},
																"nativeSrc": "25534:9:12",
																"nodeType": "YulFunctionCall",
																"src": "25534:9:12"
															},
															"nativeSrc": "25531:35:12",
															"nodeType": "YulIf",
															"src": "25531:35:12"
														},
														{
															"nativeSrc": "25575:14:12",
															"nodeType": "YulAssignment",
															"src": "25575:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25584:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25584:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25587:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25587:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "25580:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25580:3:12"
																},
																"nativeSrc": "25580:9:12",
																"nodeType": "YulFunctionCall",
																"src": "25580:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "25575:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25575:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "25419:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25442:1:12",
														"nodeType": "YulTypedName",
														"src": "25442:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25445:1:12",
														"nodeType": "YulTypedName",
														"src": "25445:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "25451:1:12",
														"nodeType": "YulTypedName",
														"src": "25451:1:12",
														"type": ""
													}
												],
												"src": "25419:176:12"
											},
											{
												"body": {
													"nativeSrc": "25629:152:12",
													"nodeType": "YulBlock",
													"src": "25629:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25646:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25646:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25649:77:12",
																		"nodeType": "YulLiteral",
																		"src": "25649:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25639:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25639:6:12"
																},
																"nativeSrc": "25639:88:12",
																"nodeType": "YulFunctionCall",
																"src": "25639:88:12"
															},
															"nativeSrc": "25639:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "25639:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25743:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25743:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25746:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25746:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25736:6:12"
																},
																"nativeSrc": "25736:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25736:15:12"
															},
															"nativeSrc": "25736:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25736:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25767:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25767:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25770:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25770:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25760:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25760:6:12"
																},
																"nativeSrc": "25760:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25760:15:12"
															},
															"nativeSrc": "25760:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25760:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "25601:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "25601:180:12"
											},
											{
												"body": {
													"nativeSrc": "25845:40:12",
													"nodeType": "YulBlock",
													"src": "25845:40:12",
													"statements": [
														{
															"nativeSrc": "25856:22:12",
															"nodeType": "YulAssignment",
															"src": "25856:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25872:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25872:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25866:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "25866:5:12"
																},
																"nativeSrc": "25866:12:12",
																"nodeType": "YulFunctionCall",
																"src": "25866:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25856:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25856:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "25787:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25828:5:12",
														"nodeType": "YulTypedName",
														"src": "25828:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "25838:6:12",
														"nodeType": "YulTypedName",
														"src": "25838:6:12",
														"type": ""
													}
												],
												"src": "25787:98:12"
											},
											{
												"body": {
													"nativeSrc": "25986:73:12",
													"nodeType": "YulBlock",
													"src": "25986:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26003:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26003:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26008:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26008:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25996:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25996:6:12"
																},
																"nativeSrc": "25996:19:12",
																"nodeType": "YulFunctionCall",
																"src": "25996:19:12"
															},
															"nativeSrc": "25996:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "25996:19:12"
														},
														{
															"nativeSrc": "26024:29:12",
															"nodeType": "YulAssignment",
															"src": "26024:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26043:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26043:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26048:4:12",
																		"nodeType": "YulLiteral",
																		"src": "26048:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26039:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26039:3:12"
																},
																"nativeSrc": "26039:14:12",
																"nodeType": "YulFunctionCall",
																"src": "26039:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26024:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "26024:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "25891:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25958:3:12",
														"nodeType": "YulTypedName",
														"src": "25958:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "25963:6:12",
														"nodeType": "YulTypedName",
														"src": "25963:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "25974:11:12",
														"nodeType": "YulTypedName",
														"src": "25974:11:12",
														"type": ""
													}
												],
												"src": "25891:168:12"
											},
											{
												"body": {
													"nativeSrc": "26155:283:12",
													"nodeType": "YulBlock",
													"src": "26155:283:12",
													"statements": [
														{
															"nativeSrc": "26165:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "26165:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26211:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "26211:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "26179:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "26179:31:12"
																},
																"nativeSrc": "26179:38:12",
																"nodeType": "YulFunctionCall",
																"src": "26179:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26169:6:12",
																	"nodeType": "YulTypedName",
																	"src": "26169:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26226:77:12",
															"nodeType": "YulAssignment",
															"src": "26226:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26291:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26291:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26296:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26296:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26233:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "26233:57:12"
																},
																"nativeSrc": "26233:70:12",
																"nodeType": "YulFunctionCall",
																"src": "26233:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26226:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26226:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26351:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "26351:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26358:4:12",
																				"nodeType": "YulLiteral",
																				"src": "26358:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26347:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26347:3:12"
																		},
																		"nativeSrc": "26347:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26347:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26365:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26365:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26370:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26370:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26312:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "26312:34:12"
																},
																"nativeSrc": "26312:65:12",
																"nodeType": "YulFunctionCall",
																"src": "26312:65:12"
															},
															"nativeSrc": "26312:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "26312:65:12"
														},
														{
															"nativeSrc": "26386:46:12",
															"nodeType": "YulAssignment",
															"src": "26386:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26397:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26397:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "26424:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26424:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "26402:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "26402:21:12"
																		},
																		"nativeSrc": "26402:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26402:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26393:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26393:3:12"
																},
																"nativeSrc": "26393:39:12",
																"nodeType": "YulFunctionCall",
																"src": "26393:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26386:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26386:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26065:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26136:5:12",
														"nodeType": "YulTypedName",
														"src": "26136:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26143:3:12",
														"nodeType": "YulTypedName",
														"src": "26143:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26151:3:12",
														"nodeType": "YulTypedName",
														"src": "26151:3:12",
														"type": ""
													}
												],
												"src": "26065:373:12"
											},
											{
												"body": {
													"nativeSrc": "26644:440:12",
													"nodeType": "YulBlock",
													"src": "26644:440:12",
													"statements": [
														{
															"nativeSrc": "26654:27:12",
															"nodeType": "YulAssignment",
															"src": "26654:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26666:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26666:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26677:3:12",
																		"nodeType": "YulLiteral",
																		"src": "26677:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26662:3:12"
																},
																"nativeSrc": "26662:19:12",
																"nodeType": "YulFunctionCall",
																"src": "26662:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26654:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26735:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26735:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26748:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26748:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26759:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26759:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26744:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26744:3:12"
																		},
																		"nativeSrc": "26744:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26744:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26691:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26691:43:12"
																},
																"nativeSrc": "26691:71:12",
																"nodeType": "YulFunctionCall",
																"src": "26691:71:12"
															},
															"nativeSrc": "26691:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "26691:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26816:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26816:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26829:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26829:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26840:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26840:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26825:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26825:3:12"
																		},
																		"nativeSrc": "26825:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26825:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26772:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26772:43:12"
																},
																"nativeSrc": "26772:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26772:72:12"
															},
															"nativeSrc": "26772:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26772:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26898:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26898:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26911:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26911:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26922:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26922:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26907:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26907:3:12"
																		},
																		"nativeSrc": "26907:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26907:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26854:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26854:43:12"
																},
																"nativeSrc": "26854:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26854:72:12"
															},
															"nativeSrc": "26854:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26854:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26947:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26947:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26958:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26958:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26943:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26943:3:12"
																		},
																		"nativeSrc": "26943:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26943:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26967:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26967:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26973:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26973:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26963:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26963:3:12"
																		},
																		"nativeSrc": "26963:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26963:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26936:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26936:6:12"
																},
																"nativeSrc": "26936:48:12",
																"nodeType": "YulFunctionCall",
																"src": "26936:48:12"
															},
															"nativeSrc": "26936:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "26936:48:12"
														},
														{
															"nativeSrc": "26993:84:12",
															"nodeType": "YulAssignment",
															"src": "26993:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27063:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27063:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27072:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27072:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27001:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "27001:61:12"
																},
																"nativeSrc": "27001:76:12",
																"nodeType": "YulFunctionCall",
																"src": "27001:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26993:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26993:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "26444:640:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26592:9:12",
														"nodeType": "YulTypedName",
														"src": "26592:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "26604:6:12",
														"nodeType": "YulTypedName",
														"src": "26604:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26612:6:12",
														"nodeType": "YulTypedName",
														"src": "26612:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26620:6:12",
														"nodeType": "YulTypedName",
														"src": "26620:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26628:6:12",
														"nodeType": "YulTypedName",
														"src": "26628:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26639:4:12",
														"nodeType": "YulTypedName",
														"src": "26639:4:12",
														"type": ""
													}
												],
												"src": "26444:640:12"
											},
											{
												"body": {
													"nativeSrc": "27152:79:12",
													"nodeType": "YulBlock",
													"src": "27152:79:12",
													"statements": [
														{
															"nativeSrc": "27162:22:12",
															"nodeType": "YulAssignment",
															"src": "27162:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27177:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27177:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27171:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "27171:5:12"
																},
																"nativeSrc": "27171:13:12",
																"nodeType": "YulFunctionCall",
																"src": "27171:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27162:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "27162:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27219:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "27219:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "27193:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "27193:25:12"
																},
																"nativeSrc": "27193:32:12",
																"nodeType": "YulFunctionCall",
																"src": "27193:32:12"
															},
															"nativeSrc": "27193:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "27193:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27090:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27130:6:12",
														"nodeType": "YulTypedName",
														"src": "27130:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27138:3:12",
														"nodeType": "YulTypedName",
														"src": "27138:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27146:5:12",
														"nodeType": "YulTypedName",
														"src": "27146:5:12",
														"type": ""
													}
												],
												"src": "27090:141:12"
											},
											{
												"body": {
													"nativeSrc": "27313:273:12",
													"nodeType": "YulBlock",
													"src": "27313:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "27359:83:12",
																"nodeType": "YulBlock",
																"src": "27359:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27361:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "27361:77:12"
																			},
																			"nativeSrc": "27361:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "27361:79:12"
																		},
																		"nativeSrc": "27361:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "27361:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27334:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "27334:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27343:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27343:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27330:3:12"
																		},
																		"nativeSrc": "27330:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27330:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27355:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27355:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "27326:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27326:3:12"
																},
																"nativeSrc": "27326:32:12",
																"nodeType": "YulFunctionCall",
																"src": "27326:32:12"
															},
															"nativeSrc": "27323:119:12",
															"nodeType": "YulIf",
															"src": "27323:119:12"
														},
														{
															"nativeSrc": "27452:127:12",
															"nodeType": "YulBlock",
															"src": "27452:127:12",
															"statements": [
																{
																	"nativeSrc": "27467:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27467:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27481:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27481:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27471:6:12",
																			"nodeType": "YulTypedName",
																			"src": "27471:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27496:73:12",
																	"nodeType": "YulAssignment",
																	"src": "27496:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27541:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "27541:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27552:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "27552:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27537:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "27537:3:12"
																				},
																				"nativeSrc": "27537:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "27537:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27561:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "27561:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "27506:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "27506:30:12"
																		},
																		"nativeSrc": "27506:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27506:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "27496:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "27496:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "27237:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27283:9:12",
														"nodeType": "YulTypedName",
														"src": "27283:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "27294:7:12",
														"nodeType": "YulTypedName",
														"src": "27294:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "27306:6:12",
														"nodeType": "YulTypedName",
														"src": "27306:6:12",
														"type": ""
													}
												],
												"src": "27237:349:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer of token that i\")\n\n        mstore(add(memPtr, 32), \"s not own\")\n\n    }\n\n    function abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906113c1565b6102b9565b6040516100f89190611406565b60405180910390f35b61010961039a565b604051610116919061148f565b60405180910390f35b610139600480360381019061013491906114e2565b610429565b604051610146919061154c565b60405180910390f35b6101696004803603810190610164919061158f565b6104aa565b005b610185600480360381019061018091906115cd565b6105c0565b005b6101a1600480360381019061019c91906115cd565b610620565b005b6101bd60048036038101906101b891906114e2565b61063f565b6040516101ca919061154c565b60405180910390f35b6101ed60048036038101906101e8919061161d565b6106eb565b6040516101fa9190611657565b60405180910390f35b61020b61079f565b604051610218919061148f565b60405180910390f35b61023b6004803603810190610236919061169a565b61082f565b005b61025760048036038101906102529190611804565b6109aa565b005b610273600480360381019061026e91906114e2565b610a0c565b604051610280919061148f565b60405180910390f35b6102a3600480360381019061029e9190611884565b610ab0565b6040516102b09190611406565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610b3e565b5b9050919050565b60605f80546103a8906118ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906118ef565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f61043382610ba7565b610472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104699061198f565b60405180910390fd5b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f6104b48261063f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611a1d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610543610c0f565b73ffffffffffffffffffffffffffffffffffffffff16148061057257506105718161056c610c0f565b610ab0565b5b6105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890611aab565b60405180910390fd5b6105bb8383610c16565b505050565b6105d16105cb610c0f565b82610ccc565b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611b39565b60405180910390fd5b61061b838383610da8565b505050565b61063a83838360405180602001604052805f8152506109aa565b505050565b5f5f60025f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611bc7565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190611c55565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546107ae906118ef565b80601f01602080910402602001604051908101604052809291908181526020018280546107da906118ef565b80156108255780601f106107fc57610100808354040283529160200191610825565b820191905f5260205f20905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b610837610c0f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90611cbd565b60405180910390fd5b8060055f6108b0610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610959610c0f565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161099e9190611406565b60405180910390a35050565b6109bb6109b5610c0f565b83610ccc565b6109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611b39565b60405180910390fd5b610a0684848484610ff8565b50505050565b6060610a1782610ba7565b610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d90611d4b565b60405180910390fd5b5f610a5f611054565b90505f815111610a7d5760405180602001604052805f815250610aa8565b80610a878461106a565b604051602001610a98929190611da3565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1660025f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c868361063f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f610cd682610ba7565b610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611e36565b60405180910390fd5b5f610d1f8361063f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d8e57508373ffffffffffffffffffffffffffffffffffffffff16610d7684610429565b73ffffffffffffffffffffffffffffffffffffffff16145b80610d9f5750610d9e8185610ab0565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610dc88261063f565b73ffffffffffffffffffffffffffffffffffffffff1614610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590611ec4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8390611f52565b60405180910390fd5b610e978383836111c3565b610ea15f82610c16565b600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610eee9190611f9d565b92505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f429190611fd0565b925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611003848484610da8565b61100f848484846111c8565b61104e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104590612073565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f82036110b0576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506111be565b5f8290505f5b5f82146110df5780806110c890612091565b915050600a826110d89190612105565b91506110b6565b5f8167ffffffffffffffff8111156110fa576110f96116e0565b5b6040519080825280601f01601f19166020018201604052801561112c5781602001600182028036833780820191505090505b5090505b5f85146111b7576001826111449190611f9d565b9150600a856111539190612135565b603061115f9190611fd0565b60f81b81838151811061117557611174612165565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a856111b09190612105565b9450611130565b8093505050505b919050565b505050565b5f6111e88473ffffffffffffffffffffffffffffffffffffffff1661134a565b1561133d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611211610c0f565b8786866040518563ffffffff1660e01b815260040161123394939291906121e4565b6020604051808303815f875af192505050801561126e57506040513d601f19601f8201168201806040525081019061126b9190612242565b60015b6112ed573d805f811461129c576040519150601f19603f3d011682016040523d82523d5f602084013e6112a1565b606091505b505f8151036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90612073565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611342565b600190505b949350505050565b5f5f823b90505f8111915050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113a08161136c565b81146113aa575f5ffd5b50565b5f813590506113bb81611397565b92915050565b5f602082840312156113d6576113d5611364565b5b5f6113e3848285016113ad565b91505092915050565b5f8115159050919050565b611400816113ec565b82525050565b5f6020820190506114195f8301846113f7565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114618261141f565b61146b8185611429565b935061147b818560208601611439565b61148481611447565b840191505092915050565b5f6020820190508181035f8301526114a78184611457565b905092915050565b5f819050919050565b6114c1816114af565b81146114cb575f5ffd5b50565b5f813590506114dc816114b8565b92915050565b5f602082840312156114f7576114f6611364565b5b5f611504848285016114ce565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115368261150d565b9050919050565b6115468161152c565b82525050565b5f60208201905061155f5f83018461153d565b92915050565b61156e8161152c565b8114611578575f5ffd5b50565b5f8135905061158981611565565b92915050565b5f5f604083850312156115a5576115a4611364565b5b5f6115b28582860161157b565b92505060206115c3858286016114ce565b9150509250929050565b5f5f5f606084860312156115e4576115e3611364565b5b5f6115f18682870161157b565b93505060206116028682870161157b565b9250506040611613868287016114ce565b9150509250925092565b5f6020828403121561163257611631611364565b5b5f61163f8482850161157b565b91505092915050565b611651816114af565b82525050565b5f60208201905061166a5f830184611648565b92915050565b611679816113ec565b8114611683575f5ffd5b50565b5f8135905061169481611670565b92915050565b5f5f604083850312156116b0576116af611364565b5b5f6116bd8582860161157b565b92505060206116ce85828601611686565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61171682611447565b810181811067ffffffffffffffff82111715611735576117346116e0565b5b80604052505050565b5f61174761135b565b9050611753828261170d565b919050565b5f67ffffffffffffffff821115611772576117716116e0565b5b61177b82611447565b9050602081019050919050565b828183375f83830152505050565b5f6117a86117a384611758565b61173e565b9050828152602081018484840111156117c4576117c36116dc565b5b6117cf848285611788565b509392505050565b5f82601f8301126117eb576117ea6116d8565b5b81356117fb848260208601611796565b91505092915050565b5f5f5f5f6080858703121561181c5761181b611364565b5b5f6118298782880161157b565b945050602061183a8782880161157b565b935050604061184b878288016114ce565b925050606085013567ffffffffffffffff81111561186c5761186b611368565b5b611878878288016117d7565b91505092959194509250565b5f5f6040838503121561189a57611899611364565b5b5f6118a78582860161157b565b92505060206118b88582860161157b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061190657607f821691505b602082108103611919576119186118c2565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611979602c83611429565b91506119848261191f565b604082019050919050565b5f6020820190508181035f8301526119a68161196d565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a07602183611429565b9150611a12826119ad565b604082019050919050565b5f6020820190508181035f830152611a34816119fb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f775f8201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b5f611a95603883611429565b9150611aa082611a3b565b604082019050919050565b5f6020820190508181035f830152611ac281611a89565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f5f8201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b5f611b23603183611429565b9150611b2e82611ac9565b604082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e65786973745f8201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b5f611bb1602983611429565b9150611bbc82611b57565b604082019050919050565b5f6020820190508181035f830152611bde81611ba5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f611c3f602a83611429565b9150611c4a82611be5565b604082019050919050565b5f6020820190508181035f830152611c6c81611c33565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611ca7601983611429565b9150611cb282611c73565b602082019050919050565b5f6020820190508181035f830152611cd481611c9b565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f5f8201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b5f611d35602f83611429565b9150611d4082611cdb565b604082019050919050565b5f6020820190508181035f830152611d6281611d29565b9050919050565b5f81905092915050565b5f611d7d8261141f565b611d878185611d69565b9350611d97818560208601611439565b80840191505092915050565b5f611dae8285611d73565b9150611dba8284611d73565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611e20602c83611429565b9150611e2b82611dc6565b604082019050919050565b5f6020820190508181035f830152611e4d81611e14565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e207468617420695f8201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b5f611eae602983611429565b9150611eb982611e54565b604082019050919050565b5f6020820190508181035f830152611edb81611ea2565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611f3c602483611429565b9150611f4782611ee2565b604082019050919050565b5f6020820190508181035f830152611f6981611f30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fa7826114af565b9150611fb2836114af565b9250828203905081811115611fca57611fc9611f70565b5b92915050565b5f611fda826114af565b9150611fe5836114af565b9250828201905080821115611ffd57611ffc611f70565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f61205d603283611429565b915061206882612003565b604082019050919050565b5f6020820190508181035f83015261208a81612051565b9050919050565b5f61209b826114af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120cd576120cc611f70565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61210f826114af565b915061211a836114af565b92508261212a576121296120d8565b5b828204905092915050565b5f61213f826114af565b915061214a836114af565b92508261215a576121596120d8565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f6121b682612192565b6121c0818561219c565b93506121d0818560208601611439565b6121d981611447565b840191505092915050565b5f6080820190506121f75f83018761153d565b612204602083018661153d565b6122116040830185611648565b818103606083015261222381846121ac565b905095945050505050565b5f8151905061223c81611397565b92915050565b5f6020828403121561225757612256611364565b5b5f6122648482850161222e565b9150509291505056fea2646970667358221220d3f410550ea76ff02c6b78158cb1fe59f6172a859de94e02165c0326e77fce6764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4B4 DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x543 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x572 JUMPI POP PUSH2 0x571 DUP2 PUSH2 0x56C PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST JUMPDEST PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BB DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x5CB PUSH2 0xC0F JUMP JUMPDEST DUP3 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61B DUP4 DUP4 DUP4 PUSH2 0xDA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DA SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x825 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x808 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89B SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x8B0 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x959 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9BB PUSH2 0x9B5 PUSH2 0xC0F JUMP JUMPDEST DUP4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA06 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA17 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA5F PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAA8 JUMP JUMPDEST DUP1 PUSH2 0xA87 DUP5 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA98 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC86 DUP4 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD6 DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD1F DUP4 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD8E JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD76 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xD9F JUMPI POP PUSH2 0xD9E DUP2 DUP6 PUSH2 0xAB0 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDC8 DUP3 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE15 SWAP1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 DUP4 DUP4 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0xEA1 PUSH0 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x1003 DUP5 DUP5 DUP5 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x100F DUP5 DUP5 DUP5 DUP5 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x11BE JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0x10DF JUMPI DUP1 DUP1 PUSH2 0x10C8 SWAP1 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B6 JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FA JUMPI PUSH2 0x10F9 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x112C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0x11B7 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0x2165 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP5 POP PUSH2 0x1130 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11E8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x134A JUMP JUMPDEST ISZERO PUSH2 0x133D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1211 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x126E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x2242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12ED JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A0 DUP2 PUSH2 0x136C JUMP JUMPDEST DUP2 EQ PUSH2 0x13AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13BB DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E3 DUP5 DUP3 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1419 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1461 DUP3 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x146B DUP2 DUP6 PUSH2 0x1429 JUMP JUMPDEST SWAP4 POP PUSH2 0x147B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14A7 DUP2 DUP5 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x14AF JUMP JUMPDEST DUP2 EQ PUSH2 0x14CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DC DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1536 DUP3 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x152C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155F PUSH0 DUP4 ADD DUP5 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x152C JUMP JUMPDEST DUP2 EQ PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1589 DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B2 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C3 DUP6 DUP3 DUP7 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F1 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1602 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1613 DUP7 DUP3 DUP8 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP5 DUP3 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1651 DUP2 PUSH2 0x14AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166A PUSH0 DUP4 ADD DUP5 PUSH2 0x1648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1679 DUP2 PUSH2 0x13EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1694 DUP2 PUSH2 0x1670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BD DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CE DUP6 DUP3 DUP7 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1716 DUP3 PUSH2 0x1447 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1747 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP PUSH2 0x1753 DUP3 DUP3 PUSH2 0x170D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1771 PUSH2 0x16E0 JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP3 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A8 PUSH2 0x17A3 DUP5 PUSH2 0x1758 JUMP JUMPDEST PUSH2 0x173E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x16DC JUMP JUMPDEST JUMPDEST PUSH2 0x17CF DUP5 DUP3 DUP6 PUSH2 0x1788 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17EB JUMPI PUSH2 0x17EA PUSH2 0x16D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1829 DUP8 DUP3 DUP9 ADD PUSH2 0x157B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x183A DUP8 DUP3 DUP9 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x184B DUP8 DUP3 DUP9 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x1368 JUMP JUMPDEST JUMPDEST PUSH2 0x1878 DUP8 DUP3 DUP9 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A7 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B8 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1906 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1919 JUMPI PUSH2 0x1918 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1979 PUSH1 0x2C DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1984 DUP3 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A6 DUP2 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A07 PUSH1 0x21 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A12 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A34 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A95 PUSH1 0x38 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA0 DUP3 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC2 DUP2 PUSH2 0x1A89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x31 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB1 PUSH1 0x29 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBC DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BDE DUP2 PUSH2 0x1BA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3F PUSH1 0x2A DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4A DUP3 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6C DUP2 PUSH2 0x1C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA7 PUSH1 0x19 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB2 DUP3 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD4 DUP2 PUSH2 0x1C9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D35 PUSH1 0x2F DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D62 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7D DUP3 PUSH2 0x141F JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 DUP6 PUSH2 0x1D73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 PUSH1 0x2C DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2B DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4D DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAE PUSH1 0x29 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C PUSH1 0x24 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F69 DUP2 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FA7 DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB2 DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDA DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFC PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x205D PUSH1 0x32 DUP4 PUSH2 0x1429 JUMP JUMPDEST SWAP2 POP PUSH2 0x2068 DUP3 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x208A DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x209B DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x1F70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x210F DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x211A DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x213F DUP3 PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP PUSH2 0x214A DUP4 PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x215A JUMPI PUSH2 0x2159 PUSH2 0x20D8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21B6 DUP3 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x21C0 DUP2 DUP6 PUSH2 0x219C JUMP JUMPDEST SWAP4 POP PUSH2 0x21D0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x21D9 DUP2 PUSH2 0x1447 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21F7 PUSH0 DUP4 ADD DUP8 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x2204 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x153D JUMP JUMPDEST PUSH2 0x2211 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2223 DUP2 DUP5 PUSH2 0x21AC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x223C DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2264 DUP5 DUP3 DUP6 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DELEGATECALL LT SSTORE 0xE 0xA7 PUSH16 0xF02C6B78158CB1FE59F6172A859DE94E MUL AND TLOAD SUB 0x26 0xE7 PUSH32 0xCE6764736F6C634300081C003300000000000000000000000000000000000000 ",
							"sourceMap": "489:12705:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2349:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3860:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3398:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4724:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5120:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2052:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1790:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2511:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4144:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5365:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2679:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4500:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1431:300;1533:4;1583:25;1568:40;;;:11;:40;;;;:104;;;;1639:33;1624:48;;;:11;:48;;;;1568:104;:156;;;;1688:36;1712:11;1688:23;:36::i;:::-;1568:156;1549:175;;1431:300;;;:::o;2349:98::-;2403:13;2435:5;2428:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:98;:::o;3860:217::-;3936:7;3963:16;3971:7;3963;:16::i;:::-;3955:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4046:15;:24;4062:7;4046:24;;;;;;;;;;;;;;;;;;;;;4039:31;;3860:217;;;:::o;3398:401::-;3478:13;3494:23;3509:7;3494:14;:23::i;:::-;3478:39;;3541:5;3535:11;;:2;:11;;;3527:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3632:5;3616:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3641:37;3658:5;3665:12;:10;:12::i;:::-;3641:16;:37::i;:::-;3616:62;3595:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3771:21;3780:2;3784:7;3771:8;:21::i;:::-;3468:331;3398:401;;:::o;4724:330::-;4913:41;4932:12;:10;:12::i;:::-;4946:7;4913:18;:41::i;:::-;4905:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5019:28;5029:4;5035:2;5039:7;5019:9;:28::i;:::-;4724:330;;;:::o;5120:179::-;5253:39;5270:4;5276:2;5280:7;5253:39;;;;;;;;;;;;:16;:39::i;:::-;5120:179;;;:::o;2052:235::-;2124:7;2143:13;2159:7;:16;2167:7;2159:16;;;;;;;;;;;;;;;;;;;;;2143:32;;2210:1;2193:19;;:5;:19;;;2185:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2275:5;2268:12;;;2052:235;;;:::o;1790:205::-;1862:7;1906:1;1889:19;;:5;:19;;;1881:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1972:9;:16;1982:5;1972:16;;;;;;;;;;;;;;;;1965:23;;1790:205;;;:::o;2511:102::-;2567:13;2599:7;2592:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2511:102;:::o;4144:290::-;4258:12;:10;:12::i;:::-;4246:24;;:8;:24;;;4238:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4356:8;4311:18;:32;4330:12;:10;:12::i;:::-;4311:32;;;;;;;;;;;;;;;:42;4344:8;4311:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4408:8;4379:48;;4394:12;:10;:12::i;:::-;4379:48;;;4418:8;4379:48;;;;;;:::i;:::-;;;;;;;;4144:290;;:::o;5365:320::-;5534:41;5553:12;:10;:12::i;:::-;5567:7;5534:18;:41::i;:::-;5526:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5639:39;5653:4;5659:2;5663:7;5672:5;5639:13;:39::i;:::-;5365:320;;;;:::o;2679:329::-;2752:13;2785:16;2793:7;2785;:16::i;:::-;2777:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:21;2888:10;:8;:10::i;:::-;2864:34;;2939:1;2921:7;2915:21;:25;:86;;;;;;;;;;;;;;;;;2967:7;2976:18;:7;:16;:18::i;:::-;2950:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2915:86;2908:93;;;2679:329;;;:::o;4500:162::-;4597:4;4620:18;:25;4639:5;4620:25;;;;;;;;;;;;;;;:35;4646:8;4620:35;;;;;;;;;;;;;;;;;;;;;;;;;4613:42;;4500:162;;;;:::o;763:155:2:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;7157:125:4:-;7222:4;7273:1;7245:30;;:7;:16;7253:7;7245:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7238:37;;7157:125;;;:::o;586:96:1:-;639:7;665:10;658:17;;586:96;:::o;11008:171:4:-;11109:2;11082:15;:24;11098:7;11082:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11164:7;11160:2;11126:46;;11135:23;11150:7;11135:14;:23::i;:::-;11126:46;;;;;;;;;;;;11008:171;;:::o;7440:344::-;7533:4;7557:16;7565:7;7557;:16::i;:::-;7549:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7632:13;7648:23;7663:7;7648:14;:23::i;:::-;7632:39;;7700:5;7689:16;;:7;:16;;;:51;;;;7733:7;7709:31;;:20;7721:7;7709:11;:20::i;:::-;:31;;;7689:51;:87;;;;7744:32;7761:5;7768:7;7744:16;:32::i;:::-;7689:87;7681:96;;;7440:344;;;;:::o;10337:560::-;10491:4;10464:31;;:23;10479:7;10464:14;:23::i;:::-;:31;;;10456:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10573:1;10559:16;;:2;:16;;;10551:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10627:39;10648:4;10654:2;10658:7;10627:20;:39::i;:::-;10728:29;10745:1;10749:7;10728:8;:29::i;:::-;10787:1;10768:9;:15;10778:4;10768:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10815:1;10798:9;:13;10808:2;10798:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10845:2;10826:7;:16;10834:7;10826:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10882:7;10878:2;10863:27;;10872:4;10863:27;;;;;;;;;;;;10337:560;;;:::o;6547:307::-;6698:28;6708:4;6714:2;6718:7;6698:9;:28::i;:::-;6744:48;6767:4;6773:2;6777:7;6786:5;6744:22;:48::i;:::-;6736:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6547:307;;;;:::o;3249:92::-;3300:13;3325:9;;;;;;;;;;;;;;3249:92;:::o;275:703:11:-;331:13;557:1;548:5;:10;544:51;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;13070:122:4:-;;;;:::o;11732:782::-;11882:4;11902:15;:2;:13;;;:15::i;:::-;11898:610;;;11953:2;11937:36;;;11974:12;:10;:12::i;:::-;11988:4;11994:7;12003:5;11937:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11933:523;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12197:1;12180:6;:13;:18;12176:266;;12222:60;;;;;;;;;;:::i;:::-;;;;;;;;12176:266;12394:6;12388:13;12379:6;12375:2;12371:15;12364:38;11933:523;12069:45;;;12059:55;;;:6;:55;;;;12052:62;;;;;11898:610;12493:4;12486:11;;11732:782;;;;;;;:::o;718:377:0:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:231::-;11018:34;11014:1;11006:6;11002:14;10995:58;11087:14;11082:2;11074:6;11070:15;11063:39;10878:231;:::o;11115:366::-;11257:3;11278:67;11342:2;11337:3;11278:67;:::i;:::-;11271:74;;11354:93;11443:3;11354:93;:::i;:::-;11472:2;11467:3;11463:12;11456:19;;11115:366;;;:::o;11487:419::-;11653:4;11691:2;11680:9;11676:18;11668:26;;11740:9;11734:4;11730:20;11726:1;11715:9;11711:17;11704:47;11768:131;11894:4;11768:131;:::i;:::-;11760:139;;11487:419;;;:::o;11912:220::-;12052:34;12048:1;12040:6;12036:14;12029:58;12121:3;12116:2;12108:6;12104:15;12097:28;11912:220;:::o;12138:366::-;12280:3;12301:67;12365:2;12360:3;12301:67;:::i;:::-;12294:74;;12377:93;12466:3;12377:93;:::i;:::-;12495:2;12490:3;12486:12;12479:19;;12138:366;;;:::o;12510:419::-;12676:4;12714:2;12703:9;12699:18;12691:26;;12763:9;12757:4;12753:20;12749:1;12738:9;12734:17;12727:47;12791:131;12917:4;12791:131;:::i;:::-;12783:139;;12510:419;;;:::o;12935:243::-;13075:34;13071:1;13063:6;13059:14;13052:58;13144:26;13139:2;13131:6;13127:15;13120:51;12935:243;:::o;13184:366::-;13326:3;13347:67;13411:2;13406:3;13347:67;:::i;:::-;13340:74;;13423:93;13512:3;13423:93;:::i;:::-;13541:2;13536:3;13532:12;13525:19;;13184:366;;;:::o;13556:419::-;13722:4;13760:2;13749:9;13745:18;13737:26;;13809:9;13803:4;13799:20;13795:1;13784:9;13780:17;13773:47;13837:131;13963:4;13837:131;:::i;:::-;13829:139;;13556:419;;;:::o;13981:236::-;14121:34;14117:1;14109:6;14105:14;14098:58;14190:19;14185:2;14177:6;14173:15;14166:44;13981:236;:::o;14223:366::-;14365:3;14386:67;14450:2;14445:3;14386:67;:::i;:::-;14379:74;;14462:93;14551:3;14462:93;:::i;:::-;14580:2;14575:3;14571:12;14564:19;;14223:366;;;:::o;14595:419::-;14761:4;14799:2;14788:9;14784:18;14776:26;;14848:9;14842:4;14838:20;14834:1;14823:9;14819:17;14812:47;14876:131;15002:4;14876:131;:::i;:::-;14868:139;;14595:419;;;:::o;15020:228::-;15160:34;15156:1;15148:6;15144:14;15137:58;15229:11;15224:2;15216:6;15212:15;15205:36;15020:228;:::o;15254:366::-;15396:3;15417:67;15481:2;15476:3;15417:67;:::i;:::-;15410:74;;15493:93;15582:3;15493:93;:::i;:::-;15611:2;15606:3;15602:12;15595:19;;15254:366;;;:::o;15626:419::-;15792:4;15830:2;15819:9;15815:18;15807:26;;15879:9;15873:4;15869:20;15865:1;15854:9;15850:17;15843:47;15907:131;16033:4;15907:131;:::i;:::-;15899:139;;15626:419;;;:::o;16051:229::-;16191:34;16187:1;16179:6;16175:14;16168:58;16260:12;16255:2;16247:6;16243:15;16236:37;16051:229;:::o;16286:366::-;16428:3;16449:67;16513:2;16508:3;16449:67;:::i;:::-;16442:74;;16525:93;16614:3;16525:93;:::i;:::-;16643:2;16638:3;16634:12;16627:19;;16286:366;;;:::o;16658:419::-;16824:4;16862:2;16851:9;16847:18;16839:26;;16911:9;16905:4;16901:20;16897:1;16886:9;16882:17;16875:47;16939:131;17065:4;16939:131;:::i;:::-;16931:139;;16658:419;;;:::o;17083:175::-;17223:27;17219:1;17211:6;17207:14;17200:51;17083:175;:::o;17264:366::-;17406:3;17427:67;17491:2;17486:3;17427:67;:::i;:::-;17420:74;;17503:93;17592:3;17503:93;:::i;:::-;17621:2;17616:3;17612:12;17605:19;;17264:366;;;:::o;17636:419::-;17802:4;17840:2;17829:9;17825:18;17817:26;;17889:9;17883:4;17879:20;17875:1;17864:9;17860:17;17853:47;17917:131;18043:4;17917:131;:::i;:::-;17909:139;;17636:419;;;:::o;18061:234::-;18201:34;18197:1;18189:6;18185:14;18178:58;18270:17;18265:2;18257:6;18253:15;18246:42;18061:234;:::o;18301:366::-;18443:3;18464:67;18528:2;18523:3;18464:67;:::i;:::-;18457:74;;18540:93;18629:3;18540:93;:::i;:::-;18658:2;18653:3;18649:12;18642:19;;18301:366;;;:::o;18673:419::-;18839:4;18877:2;18866:9;18862:18;18854:26;;18926:9;18920:4;18916:20;18912:1;18901:9;18897:17;18890:47;18954:131;19080:4;18954:131;:::i;:::-;18946:139;;18673:419;;;:::o;19098:148::-;19200:11;19237:3;19222:18;;19098:148;;;;:::o;19252:390::-;19358:3;19386:39;19419:5;19386:39;:::i;:::-;19441:89;19523:6;19518:3;19441:89;:::i;:::-;19434:96;;19539:65;19597:6;19592:3;19585:4;19578:5;19574:16;19539:65;:::i;:::-;19629:6;19624:3;19620:16;19613:23;;19362:280;19252:390;;;;:::o;19648:435::-;19828:3;19850:95;19941:3;19932:6;19850:95;:::i;:::-;19843:102;;19962:95;20053:3;20044:6;19962:95;:::i;:::-;19955:102;;20074:3;20067:10;;19648:435;;;;;:::o;20089:231::-;20229:34;20225:1;20217:6;20213:14;20206:58;20298:14;20293:2;20285:6;20281:15;20274:39;20089:231;:::o;20326:366::-;20468:3;20489:67;20553:2;20548:3;20489:67;:::i;:::-;20482:74;;20565:93;20654:3;20565:93;:::i;:::-;20683:2;20678:3;20674:12;20667:19;;20326:366;;;:::o;20698:419::-;20864:4;20902:2;20891:9;20887:18;20879:26;;20951:9;20945:4;20941:20;20937:1;20926:9;20922:17;20915:47;20979:131;21105:4;20979:131;:::i;:::-;20971:139;;20698:419;;;:::o;21123:228::-;21263:34;21259:1;21251:6;21247:14;21240:58;21332:11;21327:2;21319:6;21315:15;21308:36;21123:228;:::o;21357:366::-;21499:3;21520:67;21584:2;21579:3;21520:67;:::i;:::-;21513:74;;21596:93;21685:3;21596:93;:::i;:::-;21714:2;21709:3;21705:12;21698:19;;21357:366;;;:::o;21729:419::-;21895:4;21933:2;21922:9;21918:18;21910:26;;21982:9;21976:4;21972:20;21968:1;21957:9;21953:17;21946:47;22010:131;22136:4;22010:131;:::i;:::-;22002:139;;21729:419;;;:::o;22154:223::-;22294:34;22290:1;22282:6;22278:14;22271:58;22363:6;22358:2;22350:6;22346:15;22339:31;22154:223;:::o;22383:366::-;22525:3;22546:67;22610:2;22605:3;22546:67;:::i;:::-;22539:74;;22622:93;22711:3;22622:93;:::i;:::-;22740:2;22735:3;22731:12;22724:19;;22383:366;;;:::o;22755:419::-;22921:4;22959:2;22948:9;22944:18;22936:26;;23008:9;23002:4;22998:20;22994:1;22983:9;22979:17;22972:47;23036:131;23162:4;23036:131;:::i;:::-;23028:139;;22755:419;;;:::o;23180:180::-;23228:77;23225:1;23218:88;23325:4;23322:1;23315:15;23349:4;23346:1;23339:15;23366:194;23406:4;23426:20;23444:1;23426:20;:::i;:::-;23421:25;;23460:20;23478:1;23460:20;:::i;:::-;23455:25;;23504:1;23501;23497:9;23489:17;;23528:1;23522:4;23519:11;23516:37;;;23533:18;;:::i;:::-;23516:37;23366:194;;;;:::o;23566:191::-;23606:3;23625:20;23643:1;23625:20;:::i;:::-;23620:25;;23659:20;23677:1;23659:20;:::i;:::-;23654:25;;23702:1;23699;23695:9;23688:16;;23723:3;23720:1;23717:10;23714:36;;;23730:18;;:::i;:::-;23714:36;23566:191;;;;:::o;23763:237::-;23903:34;23899:1;23891:6;23887:14;23880:58;23972:20;23967:2;23959:6;23955:15;23948:45;23763:237;:::o;24006:366::-;24148:3;24169:67;24233:2;24228:3;24169:67;:::i;:::-;24162:74;;24245:93;24334:3;24245:93;:::i;:::-;24363:2;24358:3;24354:12;24347:19;;24006:366;;;:::o;24378:419::-;24544:4;24582:2;24571:9;24567:18;24559:26;;24631:9;24625:4;24621:20;24617:1;24606:9;24602:17;24595:47;24659:131;24785:4;24659:131;:::i;:::-;24651:139;;24378:419;;;:::o;24803:233::-;24842:3;24865:24;24883:5;24865:24;:::i;:::-;24856:33;;24911:66;24904:5;24901:77;24898:103;;24981:18;;:::i;:::-;24898:103;25028:1;25021:5;25017:13;25010:20;;24803:233;;;:::o;25042:180::-;25090:77;25087:1;25080:88;25187:4;25184:1;25177:15;25211:4;25208:1;25201:15;25228:185;25268:1;25285:20;25303:1;25285:20;:::i;:::-;25280:25;;25319:20;25337:1;25319:20;:::i;:::-;25314:25;;25358:1;25348:35;;25363:18;;:::i;:::-;25348:35;25405:1;25402;25398:9;25393:14;;25228:185;;;;:::o;25419:176::-;25451:1;25468:20;25486:1;25468:20;:::i;:::-;25463:25;;25502:20;25520:1;25502:20;:::i;:::-;25497:25;;25541:1;25531:35;;25546:18;;:::i;:::-;25531:35;25587:1;25584;25580:9;25575:14;;25419:176;;;;:::o;25601:180::-;25649:77;25646:1;25639:88;25746:4;25743:1;25736:15;25770:4;25767:1;25760:15;25787:98;25838:6;25872:5;25866:12;25856:22;;25787:98;;;:::o;25891:168::-;25974:11;26008:6;26003:3;25996:19;26048:4;26043:3;26039:14;26024:29;;25891:168;;;;:::o;26065:373::-;26151:3;26179:38;26211:5;26179:38;:::i;:::-;26233:70;26296:6;26291:3;26233:70;:::i;:::-;26226:77;;26312:65;26370:6;26365:3;26358:4;26351:5;26347:16;26312:65;:::i;:::-;26402:29;26424:6;26402:29;:::i;:::-;26397:3;26393:39;26386:46;;26155:283;26065:373;;;;:::o;26444:640::-;26639:4;26677:3;26666:9;26662:19;26654:27;;26691:71;26759:1;26748:9;26744:17;26735:6;26691:71;:::i;:::-;26772:72;26840:2;26829:9;26825:18;26816:6;26772:72;:::i;:::-;26854;26922:2;26911:9;26907:18;26898:6;26854:72;:::i;:::-;26973:9;26967:4;26963:20;26958:2;26947:9;26943:18;26936:48;27001:76;27072:4;27063:6;27001:76;:::i;:::-;26993:84;;26444:640;;;;;;;:::o;27090:141::-;27146:5;27177:6;27171:13;27162:22;;27193:32;27219:5;27193:32;:::i;:::-;27090:141;;;;:::o;27237:349::-;27306:6;27355:2;27343:9;27334:7;27330:23;27326:32;27323:119;;;27361:79;;:::i;:::-;27323:119;27481:1;27506:63;27561:7;27552:6;27541:9;27537:22;27506:63;:::i;:::-;27496:73;;27452:127;27237:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1773400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"getApproved(uint256)": "5187",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2981",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2264",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1251,
									"end": 1364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1317,
									"end": 1330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1317,
									"end": 1330,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1357,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1340,
									"end": 1357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1340,
									"end": 1357,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1364,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 13194,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3f410550ea76ff02c6b78158cb1fe59f6172a859de94e02165c0326e77fce6764736f6c634300081c0033",
									".code": [
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 13194,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1431,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1431,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2349,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2349,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3860,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3860,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3860,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3398,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3398,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4724,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5120,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2052,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2052,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2052,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1790,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1790,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1790,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2511,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2511,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4144,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4144,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5365,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5365,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2679,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2679,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2679,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4500,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4500,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4500,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1608,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1568,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1688,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1568,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2416,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2428,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2428,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3963,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3979,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3963,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3955,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3955,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3494,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3517,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3494,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3537,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3527,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3527,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3616,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3616,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3665,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3665,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3641,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3616,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3595,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3595,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3771,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4932,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4932,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4913,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4954,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4913,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4905,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4905,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5019,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5035,
											"end": 5037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5046,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5019,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5019,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5019,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5253,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5253,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2212,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2212,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2212,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2212,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2212,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2185,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2185,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1881,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1881,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2592,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2592,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4258,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4246,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4246,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4270,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4238,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4238,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4330,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4408,
											"end": 4416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4394,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4394,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4418,
											"end": 4426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4379,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4427,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5553,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5553,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5534,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5575,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5534,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5526,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5526,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5670,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5672,
											"end": 5677,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5639,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5678,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5639,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2765,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2785,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2793,
											"end": 2800,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2785,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2801,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2785,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2777,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2777,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2888,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2888,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2898,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2888,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2940,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2976,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2950,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 2995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2915,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 3001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4644,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4620,
											"end": 4655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 871,
											"end": 882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 871,
											"end": 911,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 864,
											"end": 911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7157,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7252,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7275,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 658,
											"end": 675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11179,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 11008,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11097,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11105,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11164,
											"end": 11171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11160,
											"end": 11162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11135,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 11150,
											"end": 11157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11135,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11135,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11135,
											"end": 11158,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 11135,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11126,
											"end": 11172,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 11008,
											"end": 11179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11008,
											"end": 11179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11008,
											"end": 11179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7565,
											"end": 7572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7557,
											"end": 7573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7573,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7557,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7549,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7549,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7663,
											"end": 7670,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7648,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7648,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7648,
											"end": 7671,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7648,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7696,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7705,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7733,
											"end": 7740,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7721,
											"end": 7728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7709,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7729,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7709,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7740,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7689,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7761,
											"end": 7766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7744,
											"end": 7776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7776,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7744,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7689,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7440,
											"end": 7784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10897,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 10337,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10491,
											"end": 10495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10479,
											"end": 10486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10464,
											"end": 10487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10487,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10464,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10456,
											"end": 10541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10456,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10559,
											"end": 10575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10559,
											"end": 10575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10559,
											"end": 10575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10575,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10551,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 10551,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10648,
											"end": 10652,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10654,
											"end": 10656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10658,
											"end": 10665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10627,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10666,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10627,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10728,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10745,
											"end": 10746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10728,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10728,
											"end": 10757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10728,
											"end": 10757,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10728,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10768,
											"end": 10777,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10768,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 10816,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10798,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10833,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10841,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 10889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 10880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10876,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10890,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6718,
											"end": 6725,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6698,
											"end": 6726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 6726,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6698,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6786,
											"end": 6791,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6744,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6792,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6744,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6736,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6736,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3249,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 978,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 275,
											"end": 978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 331,
											"end": 344,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 548,
											"end": 558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 544,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 544,
											"end": 595,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH",
											"source": 11,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 574,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 544,
											"end": 595,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 544,
											"end": 595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 604,
											"end": 616,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 624,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 604,
											"end": 624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 604,
											"end": 624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 634,
											"end": 648,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 733,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 658,
											"end": 733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 665,
											"end": 674,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 658,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 658,
											"end": 733,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 690,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 690,
											"end": 698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 720,
											"end": 722,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 712,
											"end": 722,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 712,
											"end": 722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 712,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 712,
											"end": 722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 712,
											"end": 722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 658,
											"end": 733,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 733,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 658,
											"end": 733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 764,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 764,
											"end": 781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 742,
											"end": 781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 742,
											"end": 781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 941,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 791,
											"end": 941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 798,
											"end": 808,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 791,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 791,
											"end": 941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 824,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 824,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 824,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 824,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 892,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 892,
											"end": 902,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 892,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 892,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 892,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 892,
											"end": 902,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 892,
											"end": 902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 879,
											"end": 881,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 866,
											"end": 905,
											"name": "PUSH",
											"source": 11,
											"value": "F8"
										},
										{
											"begin": 866,
											"end": 905,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 856,
											"end": 862,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 849,
											"end": 863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 849,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 849,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 849,
											"end": 863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 849,
											"end": 863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 849,
											"end": 863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 849,
											"end": 905,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 905,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 849,
											"end": 905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 928,
											"end": 930,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 919,
											"end": 930,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 919,
											"end": 930,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 919,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 919,
											"end": 930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 919,
											"end": 930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 791,
											"end": 941,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 941,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 791,
											"end": 941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 950,
											"end": 971,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 950,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 950,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 950,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 950,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 275,
											"end": 978,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 275,
											"end": 978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 275,
											"end": 978,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 275,
											"end": 978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 275,
											"end": 978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13070,
											"end": 13192,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 13070,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13070,
											"end": 13192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13070,
											"end": 13192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13070,
											"end": 13192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13070,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11882,
											"end": 11886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11902,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11902,
											"end": 11915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11902,
											"end": 11915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11902,
											"end": 11917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11902,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 12508,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11898,
											"end": 12508,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11953,
											"end": 11955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 11974,
											"end": 11986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11974,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 11974,
											"end": 11986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11974,
											"end": 11986,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11974,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11994,
											"end": 12001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12003,
											"end": 12008,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11937,
											"end": 12009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11937,
											"end": 12009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11937,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12176,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12176,
											"end": 12442,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12222,
											"end": 12282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12176,
											"end": 12442,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12176,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12394,
											"end": 12400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12388,
											"end": 12401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12371,
											"end": 12386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12364,
											"end": 12402,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11933,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12069,
											"end": 12114,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 12069,
											"end": 12114,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12069,
											"end": 12114,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12059,
											"end": 12114,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12052,
											"end": 12114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12052,
											"end": 12114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12052,
											"end": 12114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12052,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 12052,
											"end": 12114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 12508,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11898,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12486,
											"end": 12497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12486,
											"end": 12497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11732,
											"end": 12514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1088,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11052,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11002,
											"end": 11016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10995,
											"end": 11053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11087,
											"end": 11101,
											"name": "PUSH",
											"source": 12,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10878,
											"end": 11109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11278,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 11354,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11463,
											"end": 11475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11456,
											"end": 11475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11456,
											"end": 11475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11740,
											"end": 11749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11738,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11730,
											"end": 11750,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11715,
											"end": 11724,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11711,
											"end": 11728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11704,
											"end": 11751,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 11894,
											"end": 11898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 11768,
											"end": 11899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11487,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12052,
											"end": 12086,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12036,
											"end": 12050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12029,
											"end": 12087,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12121,
											"end": 12124,
											"name": "PUSH",
											"source": 12,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12116,
											"end": 12118,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12104,
											"end": 12119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12097,
											"end": 12125,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 12132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12280,
											"end": 12283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 12360,
											"end": 12363,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 12301,
											"end": 12368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12294,
											"end": 12368,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12294,
											"end": 12368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 12466,
											"end": 12469,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 12377,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12490,
											"end": 12493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12486,
											"end": 12498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12676,
											"end": 12680,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12716,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12703,
											"end": 12712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 12772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12757,
											"end": 12761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12753,
											"end": 12773,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12738,
											"end": 12747,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12734,
											"end": 12751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12774,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 12917,
											"end": 12921,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 12791,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13109,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13059,
											"end": 13073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13144,
											"end": 13170,
											"name": "PUSH",
											"source": 12,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 13139,
											"end": 13141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13120,
											"end": 13171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12935,
											"end": 13178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 13411,
											"end": 13413,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 13406,
											"end": 13409,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 13347,
											"end": 13414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13340,
											"end": 13414,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13340,
											"end": 13414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 13512,
											"end": 13515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 13423,
											"end": 13516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13543,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13536,
											"end": 13539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13532,
											"end": 13544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13525,
											"end": 13544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13525,
											"end": 13544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13722,
											"end": 13726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13762,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13737,
											"end": 13763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13737,
											"end": 13763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13809,
											"end": 13818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13803,
											"end": 13807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13784,
											"end": 13793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13780,
											"end": 13797,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13773,
											"end": 13820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13837,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13829,
											"end": 13968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13829,
											"end": 13968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14121,
											"end": 14155,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 14117,
											"end": 14118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14190,
											"end": 14209,
											"name": "PUSH",
											"source": 12,
											"value": "776E6572206E6F7220617070726F766564000000000000000000000000000000"
										},
										{
											"begin": 14185,
											"end": 14187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14177,
											"end": 14183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14173,
											"end": 14188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14210,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13981,
											"end": 14217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 14450,
											"end": 14452,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 14386,
											"end": 14453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 14551,
											"end": 14554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 14462,
											"end": 14555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14580,
											"end": 14582,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14575,
											"end": 14578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14761,
											"end": 14765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14784,
											"end": 14802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14842,
											"end": 14846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14832,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14819,
											"end": 14836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14812,
											"end": 14859,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 14876,
											"end": 15007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14868,
											"end": 15007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14868,
											"end": 15007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 15014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15020,
											"end": 15248,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15020,
											"end": 15248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15160,
											"end": 15194,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 15156,
											"end": 15157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15148,
											"end": 15154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15144,
											"end": 15158,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15229,
											"end": 15240,
											"name": "PUSH",
											"source": 12,
											"value": "656E7420746F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15224,
											"end": 15226,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15216,
											"end": 15222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15205,
											"end": 15241,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15020,
											"end": 15248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15020,
											"end": 15248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15620,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 15254,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15396,
											"end": 15399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15417,
											"end": 15484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 15481,
											"end": 15483,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 15476,
											"end": 15479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15417,
											"end": 15484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 15417,
											"end": 15484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15417,
											"end": 15484,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 15417,
											"end": 15484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15410,
											"end": 15484,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15410,
											"end": 15484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15493,
											"end": 15586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 15582,
											"end": 15585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15493,
											"end": 15586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15493,
											"end": 15586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15493,
											"end": 15586,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 15493,
											"end": 15586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15613,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15606,
											"end": 15609,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15595,
											"end": 15614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15595,
											"end": 15614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15620,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15626,
											"end": 16045,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 15626,
											"end": 16045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15792,
											"end": 15796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15830,
											"end": 15832,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15819,
											"end": 15828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15815,
											"end": 15833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15833,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 15888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15873,
											"end": 15877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15869,
											"end": 15889,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15865,
											"end": 15866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15863,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15850,
											"end": 15867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15843,
											"end": 15890,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16033,
											"end": 16037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 15907,
											"end": 16038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 16038,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 15907,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 16038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 16038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15626,
											"end": 16045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15626,
											"end": 16045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15626,
											"end": 16045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15626,
											"end": 16045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16280,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 16051,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16191,
											"end": 16225,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 16187,
											"end": 16188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16179,
											"end": 16185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16175,
											"end": 16189,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16168,
											"end": 16226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16260,
											"end": 16272,
											"name": "PUSH",
											"source": 12,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 16255,
											"end": 16257,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16247,
											"end": 16253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16243,
											"end": 16258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16236,
											"end": 16273,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16652,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 16286,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16428,
											"end": 16431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16513,
											"end": 16515,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 16508,
											"end": 16511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16449,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 16449,
											"end": 16516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16449,
											"end": 16516,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16449,
											"end": 16516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16442,
											"end": 16516,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16442,
											"end": 16516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16525,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 16614,
											"end": 16617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16525,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 16525,
											"end": 16618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16525,
											"end": 16618,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 16525,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16643,
											"end": 16645,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16638,
											"end": 16641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16634,
											"end": 16646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16627,
											"end": 16646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16627,
											"end": 16646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 17077,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 16658,
											"end": 17077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16824,
											"end": 16828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16862,
											"end": 16864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16851,
											"end": 16860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16839,
											"end": 16865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16839,
											"end": 16865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16911,
											"end": 16920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16905,
											"end": 16909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16901,
											"end": 16921,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16897,
											"end": 16898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16886,
											"end": 16895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16882,
											"end": 16899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16875,
											"end": 16922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16939,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16939,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 16939,
											"end": 17070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16939,
											"end": 17070,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 16939,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 17070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 17070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 17077,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 17077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 17077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 17077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17258,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 17083,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17223,
											"end": 17250,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 17219,
											"end": 17220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17207,
											"end": 17221,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17251,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17630,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 17264,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17406,
											"end": 17409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17427,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17491,
											"end": 17493,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 17486,
											"end": 17489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17427,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 17427,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17427,
											"end": 17494,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17427,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17420,
											"end": 17494,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17420,
											"end": 17494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17592,
											"end": 17595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 17503,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17596,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17503,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 17623,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17616,
											"end": 17619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17636,
											"end": 18055,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 17636,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17802,
											"end": 17806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17829,
											"end": 17838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17825,
											"end": 17843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17817,
											"end": 17843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17817,
											"end": 17843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17883,
											"end": 17887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17899,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17875,
											"end": 17876,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17864,
											"end": 17873,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17860,
											"end": 17877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17853,
											"end": 17900,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 18043,
											"end": 18047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 17917,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 18048,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 17917,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 18048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 18048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17636,
											"end": 18055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17636,
											"end": 18055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17636,
											"end": 18055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17636,
											"end": 18055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18061,
											"end": 18295,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 18061,
											"end": 18295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18201,
											"end": 18235,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 18197,
											"end": 18198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18189,
											"end": 18195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18185,
											"end": 18199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18270,
											"end": 18287,
											"name": "PUSH",
											"source": 12,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 18265,
											"end": 18267,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18257,
											"end": 18263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18253,
											"end": 18268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18061,
											"end": 18295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18061,
											"end": 18295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18667,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 18301,
											"end": 18667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18443,
											"end": 18446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18464,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 18528,
											"end": 18530,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 18523,
											"end": 18526,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 18464,
											"end": 18531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18531,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 18464,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18457,
											"end": 18531,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18457,
											"end": 18531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18540,
											"end": 18633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 18629,
											"end": 18632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18540,
											"end": 18633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 18540,
											"end": 18633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18540,
											"end": 18633,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 18540,
											"end": 18633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18658,
											"end": 18660,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18653,
											"end": 18656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18649,
											"end": 18661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18642,
											"end": 18661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18642,
											"end": 18661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18667,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 19092,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 18673,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18839,
											"end": 18843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18877,
											"end": 18879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18866,
											"end": 18875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18862,
											"end": 18880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18854,
											"end": 18880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18926,
											"end": 18935,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18920,
											"end": 18924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 18936,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18912,
											"end": 18913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18901,
											"end": 18910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18897,
											"end": 18914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18937,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 19080,
											"end": 19084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 18954,
											"end": 19085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19085,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 18954,
											"end": 19085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18946,
											"end": 19085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18946,
											"end": 19085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 19092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 19092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 19092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 19092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19200,
											"end": 19211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19237,
											"end": 19240,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19222,
											"end": 19240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19222,
											"end": 19240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19358,
											"end": 19361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19386,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 19419,
											"end": 19424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19386,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 19386,
											"end": 19425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19386,
											"end": 19425,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 19386,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19441,
											"end": 19530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 19523,
											"end": 19529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19518,
											"end": 19521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19441,
											"end": 19530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 19441,
											"end": 19530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19441,
											"end": 19530,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 19441,
											"end": 19530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19434,
											"end": 19530,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19434,
											"end": 19530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19539,
											"end": 19604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 19597,
											"end": 19603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19592,
											"end": 19595,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19585,
											"end": 19589,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19578,
											"end": 19583,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19574,
											"end": 19590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19539,
											"end": 19604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 19539,
											"end": 19604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19539,
											"end": 19604,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 19539,
											"end": 19604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19624,
											"end": 19627,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19620,
											"end": 19636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19613,
											"end": 19636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19613,
											"end": 19636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19362,
											"end": 19642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19828,
											"end": 19831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 19945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 19941,
											"end": 19944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19932,
											"end": 19938,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19850,
											"end": 19945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 19850,
											"end": 19945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19850,
											"end": 19945,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 19850,
											"end": 19945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19843,
											"end": 19945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19843,
											"end": 19945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19962,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 20053,
											"end": 20056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20044,
											"end": 20050,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19962,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 19962,
											"end": 20057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19962,
											"end": 20057,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 19962,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19955,
											"end": 20057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19955,
											"end": 20057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20074,
											"end": 20077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20067,
											"end": 20077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20067,
											"end": 20077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19648,
											"end": 20083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20089,
											"end": 20320,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 20089,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20229,
											"end": 20263,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 20225,
											"end": 20226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20217,
											"end": 20223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20213,
											"end": 20227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20206,
											"end": 20264,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20298,
											"end": 20312,
											"name": "PUSH",
											"source": 12,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 20293,
											"end": 20295,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20281,
											"end": 20296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20274,
											"end": 20313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20089,
											"end": 20320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20089,
											"end": 20320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20326,
											"end": 20692,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 20326,
											"end": 20692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20468,
											"end": 20471,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20489,
											"end": 20556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 20553,
											"end": 20555,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20489,
											"end": 20556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 20489,
											"end": 20556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20489,
											"end": 20556,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 20489,
											"end": 20556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20482,
											"end": 20556,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20482,
											"end": 20556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20565,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 20654,
											"end": 20657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20565,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 20565,
											"end": 20658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20565,
											"end": 20658,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 20565,
											"end": 20658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20683,
											"end": 20685,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20678,
											"end": 20681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20674,
											"end": 20686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20667,
											"end": 20686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20667,
											"end": 20686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20326,
											"end": 20692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20326,
											"end": 20692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20326,
											"end": 20692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20326,
											"end": 20692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20864,
											"end": 20868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20902,
											"end": 20904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20879,
											"end": 20905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20879,
											"end": 20905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20951,
											"end": 20960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20945,
											"end": 20949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20941,
											"end": 20961,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20937,
											"end": 20938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20926,
											"end": 20935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20922,
											"end": 20939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20915,
											"end": 20962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 21105,
											"end": 21109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 20979,
											"end": 21110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20971,
											"end": 21110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20971,
											"end": 21110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 21117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21123,
											"end": 21351,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 21123,
											"end": 21351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21263,
											"end": 21297,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 21259,
											"end": 21260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21251,
											"end": 21257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21247,
											"end": 21261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21298,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21332,
											"end": 21343,
											"name": "PUSH",
											"source": 12,
											"value": "73206E6F74206F776E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21327,
											"end": 21329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21319,
											"end": 21325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21315,
											"end": 21330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21308,
											"end": 21344,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21123,
											"end": 21351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21123,
											"end": 21351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21723,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 21357,
											"end": 21723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21520,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 21584,
											"end": 21586,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 21579,
											"end": 21582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21520,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 21520,
											"end": 21587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21520,
											"end": 21587,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 21520,
											"end": 21587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21513,
											"end": 21587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21513,
											"end": 21587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21596,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 21685,
											"end": 21688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21596,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 21596,
											"end": 21689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21596,
											"end": 21689,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 21596,
											"end": 21689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21714,
											"end": 21716,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21709,
											"end": 21712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21705,
											"end": 21717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 22148,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 21729,
											"end": 22148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21895,
											"end": 21899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21933,
											"end": 21935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21922,
											"end": 21931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21918,
											"end": 21936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21982,
											"end": 21991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21976,
											"end": 21980,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 21992,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21968,
											"end": 21969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21957,
											"end": 21966,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21953,
											"end": 21970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21946,
											"end": 21993,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22010,
											"end": 22141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 22136,
											"end": 22140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22010,
											"end": 22141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 22010,
											"end": 22141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22010,
											"end": 22141,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 22010,
											"end": 22141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22002,
											"end": 22141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22002,
											"end": 22141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 22148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 22148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 22148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 22148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22154,
											"end": 22377,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 22154,
											"end": 22377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22328,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 22290,
											"end": 22291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22282,
											"end": 22288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22278,
											"end": 22292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22271,
											"end": 22329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22363,
											"end": 22369,
											"name": "PUSH",
											"source": 12,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22358,
											"end": 22360,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22350,
											"end": 22356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22339,
											"end": 22370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22154,
											"end": 22377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22154,
											"end": 22377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22749,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 22383,
											"end": 22749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22525,
											"end": 22528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22546,
											"end": 22613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 22610,
											"end": 22612,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 22605,
											"end": 22608,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22546,
											"end": 22613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 22546,
											"end": 22613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22546,
											"end": 22613,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 22546,
											"end": 22613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22539,
											"end": 22613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22539,
											"end": 22613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22622,
											"end": 22715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 22711,
											"end": 22714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22622,
											"end": 22715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 22622,
											"end": 22715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22622,
											"end": 22715,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 22622,
											"end": 22715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22740,
											"end": 22742,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22735,
											"end": 22738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22731,
											"end": 22743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22724,
											"end": 22743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22724,
											"end": 22743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 23174,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 22755,
											"end": 23174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22921,
											"end": 22925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22959,
											"end": 22961,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22948,
											"end": 22957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22936,
											"end": 22962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22936,
											"end": 22962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23008,
											"end": 23017,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23002,
											"end": 23006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22998,
											"end": 23018,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22994,
											"end": 22995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22983,
											"end": 22992,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22979,
											"end": 22996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22972,
											"end": 23019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23036,
											"end": 23167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 23162,
											"end": 23166,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23036,
											"end": 23167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 23036,
											"end": 23167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23036,
											"end": 23167,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 23036,
											"end": 23167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23028,
											"end": 23167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23028,
											"end": 23167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 23174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 23174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 23174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 23174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23180,
											"end": 23360,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 23180,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23228,
											"end": 23305,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23225,
											"end": 23226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23218,
											"end": 23306,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23325,
											"end": 23329,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 23322,
											"end": 23323,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 23315,
											"end": 23330,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23349,
											"end": 23353,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 23346,
											"end": 23347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23339,
											"end": 23354,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23406,
											"end": 23410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23426,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 23444,
											"end": 23445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23426,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 23426,
											"end": 23446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23426,
											"end": 23446,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 23426,
											"end": 23446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23421,
											"end": 23446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23421,
											"end": 23446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23460,
											"end": 23480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 23478,
											"end": 23479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23460,
											"end": 23480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 23460,
											"end": 23480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23460,
											"end": 23480,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 23460,
											"end": 23480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23455,
											"end": 23480,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23455,
											"end": 23480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23504,
											"end": 23505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23501,
											"end": 23502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23497,
											"end": 23506,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23489,
											"end": 23506,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23489,
											"end": 23506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23528,
											"end": 23529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23522,
											"end": 23526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23519,
											"end": 23530,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23516,
											"end": 23553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23516,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 23516,
											"end": 23553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23533,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 23533,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 23533,
											"end": 23551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23533,
											"end": 23551,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 23533,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23516,
											"end": 23553,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 23516,
											"end": 23553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23366,
											"end": 23560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23606,
											"end": 23609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23625,
											"end": 23645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 23643,
											"end": 23644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23625,
											"end": 23645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 23625,
											"end": 23645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23625,
											"end": 23645,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 23625,
											"end": 23645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23620,
											"end": 23645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23620,
											"end": 23645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 23677,
											"end": 23678,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 23659,
											"end": 23679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23679,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 23659,
											"end": 23679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23654,
											"end": 23679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23654,
											"end": 23679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23702,
											"end": 23703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23699,
											"end": 23700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23695,
											"end": 23704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23688,
											"end": 23704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23688,
											"end": 23704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23723,
											"end": 23726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23720,
											"end": 23721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23717,
											"end": 23727,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 23750,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 23750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 23714,
											"end": 23750,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23730,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 23730,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 23730,
											"end": 23748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23730,
											"end": 23748,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 23730,
											"end": 23748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23714,
											"end": 23750,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 23714,
											"end": 23750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23566,
											"end": 23757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23763,
											"end": 24000,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 23763,
											"end": 24000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23903,
											"end": 23937,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 23899,
											"end": 23900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23891,
											"end": 23897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23887,
											"end": 23901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23880,
											"end": 23938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23972,
											"end": 23992,
											"name": "PUSH",
											"source": 12,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 23967,
											"end": 23969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23959,
											"end": 23965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23955,
											"end": 23970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23948,
											"end": 23993,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23763,
											"end": 24000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23763,
											"end": 24000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24372,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 24006,
											"end": 24372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24148,
											"end": 24151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24169,
											"end": 24236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 24233,
											"end": 24235,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 24228,
											"end": 24231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24169,
											"end": 24236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 24169,
											"end": 24236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24169,
											"end": 24236,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 24169,
											"end": 24236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24162,
											"end": 24236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24162,
											"end": 24236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24245,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 24334,
											"end": 24337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24245,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 24245,
											"end": 24338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24245,
											"end": 24338,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 24245,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24363,
											"end": 24365,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24358,
											"end": 24361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24354,
											"end": 24366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24347,
											"end": 24366,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24347,
											"end": 24366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24372,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24378,
											"end": 24797,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 24378,
											"end": 24797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24544,
											"end": 24548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24582,
											"end": 24584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24571,
											"end": 24580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24567,
											"end": 24585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24559,
											"end": 24585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24559,
											"end": 24585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24631,
											"end": 24640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24625,
											"end": 24629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24621,
											"end": 24641,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24617,
											"end": 24618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24606,
											"end": 24615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24602,
											"end": 24619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24595,
											"end": 24642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 24785,
											"end": 24789,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 24659,
											"end": 24790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24790,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 24659,
											"end": 24790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24651,
											"end": 24790,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24651,
											"end": 24790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24378,
											"end": 24797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24378,
											"end": 24797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24378,
											"end": 24797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24378,
											"end": 24797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 25036,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 24803,
											"end": 25036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24842,
											"end": 24845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24865,
											"end": 24889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 24883,
											"end": 24888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24865,
											"end": 24889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 24865,
											"end": 24889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24865,
											"end": 24889,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 24865,
											"end": 24889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24856,
											"end": 24889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24856,
											"end": 24889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24911,
											"end": 24977,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24904,
											"end": 24909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24901,
											"end": 24978,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24898,
											"end": 25001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 24898,
											"end": 25001,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24981,
											"end": 24999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 24981,
											"end": 24999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 24981,
											"end": 24999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24981,
											"end": 24999,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 24981,
											"end": 24999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24898,
											"end": 25001,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 24898,
											"end": 25001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25028,
											"end": 25029,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 25021,
											"end": 25026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25017,
											"end": 25030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25010,
											"end": 25030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25010,
											"end": 25030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 25036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 25036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 25036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 25036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25042,
											"end": 25222,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 25042,
											"end": 25222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25090,
											"end": 25167,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25087,
											"end": 25088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25080,
											"end": 25168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25187,
											"end": 25191,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 25184,
											"end": 25185,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 25177,
											"end": 25192,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25211,
											"end": 25215,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 25208,
											"end": 25209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25201,
											"end": 25216,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25268,
											"end": 25269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 25303,
											"end": 25304,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25285,
											"end": 25305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 25285,
											"end": 25305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25285,
											"end": 25305,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 25285,
											"end": 25305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25280,
											"end": 25305,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25280,
											"end": 25305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 25337,
											"end": 25338,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 25319,
											"end": 25339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25314,
											"end": 25339,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25314,
											"end": 25339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25358,
											"end": 25359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25348,
											"end": 25383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 25348,
											"end": 25383,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 25363,
											"end": 25381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25348,
											"end": 25383,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 25348,
											"end": 25383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25405,
											"end": 25406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25402,
											"end": 25403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25398,
											"end": 25407,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 25393,
											"end": 25407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25393,
											"end": 25407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25228,
											"end": 25413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25451,
											"end": 25452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25468,
											"end": 25488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 25486,
											"end": 25487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25468,
											"end": 25488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 25468,
											"end": 25488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25468,
											"end": 25488,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 25468,
											"end": 25488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25463,
											"end": 25488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25463,
											"end": 25488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25502,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 25520,
											"end": 25521,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25502,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 25502,
											"end": 25522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25502,
											"end": 25522,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 25502,
											"end": 25522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25497,
											"end": 25522,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25497,
											"end": 25522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25541,
											"end": 25542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25531,
											"end": 25566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 25531,
											"end": 25566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25546,
											"end": 25564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 25546,
											"end": 25564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 25546,
											"end": 25564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25546,
											"end": 25564,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 25546,
											"end": 25564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25531,
											"end": 25566,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 25531,
											"end": 25566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25587,
											"end": 25588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25584,
											"end": 25585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25580,
											"end": 25589,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 25575,
											"end": 25589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25575,
											"end": 25589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25419,
											"end": 25595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25601,
											"end": 25781,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 25601,
											"end": 25781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25649,
											"end": 25726,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25646,
											"end": 25647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25746,
											"end": 25750,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 25743,
											"end": 25744,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 25736,
											"end": 25751,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25770,
											"end": 25774,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 25767,
											"end": 25768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25760,
											"end": 25775,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25885,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 25787,
											"end": 25885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25838,
											"end": 25844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25872,
											"end": 25877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25866,
											"end": 25878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 25856,
											"end": 25878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25856,
											"end": 25878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25974,
											"end": 25985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26008,
											"end": 26014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26003,
											"end": 26006,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25996,
											"end": 26015,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26048,
											"end": 26052,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26043,
											"end": 26046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26039,
											"end": 26053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26024,
											"end": 26053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26024,
											"end": 26053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25891,
											"end": 26059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26151,
											"end": 26154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26179,
											"end": 26217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 26211,
											"end": 26216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 26179,
											"end": 26217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26217,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 26179,
											"end": 26217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26233,
											"end": 26303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 26296,
											"end": 26302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26291,
											"end": 26294,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26233,
											"end": 26303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 26233,
											"end": 26303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26233,
											"end": 26303,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 26233,
											"end": 26303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26226,
											"end": 26303,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26226,
											"end": 26303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26312,
											"end": 26377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 26370,
											"end": 26376,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26365,
											"end": 26368,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26358,
											"end": 26362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26351,
											"end": 26356,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26347,
											"end": 26363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26312,
											"end": 26377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 26312,
											"end": 26377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26312,
											"end": 26377,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 26312,
											"end": 26377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26402,
											"end": 26431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 26424,
											"end": 26430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26402,
											"end": 26431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 26402,
											"end": 26431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26402,
											"end": 26431,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 26402,
											"end": 26431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26397,
											"end": 26400,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26393,
											"end": 26432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26386,
											"end": 26432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26386,
											"end": 26432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26155,
											"end": 26438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26065,
											"end": 26438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26639,
											"end": 26643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26677,
											"end": 26680,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 26666,
											"end": 26675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26662,
											"end": 26681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26654,
											"end": 26681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26654,
											"end": 26681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26691,
											"end": 26762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 26759,
											"end": 26760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26748,
											"end": 26757,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26744,
											"end": 26761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26735,
											"end": 26741,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 26691,
											"end": 26762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 26691,
											"end": 26762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26691,
											"end": 26762,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 26691,
											"end": 26762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26772,
											"end": 26844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 26840,
											"end": 26842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26829,
											"end": 26838,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26825,
											"end": 26843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26816,
											"end": 26822,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26772,
											"end": 26844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 26772,
											"end": 26844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26772,
											"end": 26844,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 26772,
											"end": 26844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 26922,
											"end": 26924,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 26911,
											"end": 26920,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26907,
											"end": 26925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26898,
											"end": 26904,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 26854,
											"end": 26926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26926,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 26854,
											"end": 26926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26973,
											"end": 26982,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26967,
											"end": 26971,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26963,
											"end": 26983,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26958,
											"end": 26960,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 26947,
											"end": 26956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26936,
											"end": 26984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27001,
											"end": 27077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 27072,
											"end": 27076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27063,
											"end": 27069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27001,
											"end": 27077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 27001,
											"end": 27077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27001,
											"end": 27077,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 27001,
											"end": 27077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26993,
											"end": 27077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26993,
											"end": 27077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26444,
											"end": 27084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27146,
											"end": 27151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27177,
											"end": 27183,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27171,
											"end": 27184,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27162,
											"end": 27184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27162,
											"end": 27184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27193,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 27219,
											"end": 27224,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27193,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 27193,
											"end": 27225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27193,
											"end": 27225,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 27193,
											"end": 27225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27306,
											"end": 27312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27355,
											"end": 27357,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27343,
											"end": 27352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27334,
											"end": 27341,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27330,
											"end": 27353,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27326,
											"end": 27358,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 27323,
											"end": 27442,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 27323,
											"end": 27442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 27323,
											"end": 27442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27361,
											"end": 27440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 27361,
											"end": 27440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 27361,
											"end": 27440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27361,
											"end": 27440,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 27361,
											"end": 27440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27323,
											"end": 27442,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 27323,
											"end": 27442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27481,
											"end": 27482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27506,
											"end": 27569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 27561,
											"end": 27568,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27552,
											"end": 27558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27541,
											"end": 27550,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27537,
											"end": 27559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27506,
											"end": 27569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 27506,
											"end": 27569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27506,
											"end": 27569,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 27506,
											"end": 27569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27496,
											"end": 27569,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27496,
											"end": 27569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27452,
											"end": 27579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27237,
											"end": 27586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"Address.sol",
								"Context.sol",
								"ERC165.sol",
								"ERC2981.sol",
								"ERC721.sol",
								"ERC721Royalty.sol",
								"IERC165.sol",
								"IERC2981.sol",
								"IERC721.sol",
								"IERC721Metadata.sol",
								"IERC721Receiver.sol",
								"Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"ERC721.sol\":{\"keccak256\":\"0xb456de06fe1abfac1ab67c32ddad0c07dbc1b06d96ef7c3ab1eeb1f2e9d5e85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9990ce9aefe67a5cf980641afd281ec66409a834e8b261b206bac6d565724608\",\"dweb:/ipfs/QmRNU6w7cY2hg7KkY8zETtESNNhRRoCit6NTuYJgYdMQCD\"]},\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC721.sol\":{\"keccak256\":\"0xe0e811a90fa8c9179bb9b44606f477f6c3a2243708ddeaa9156cc3ae8004239c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efef5eea5e2e0cd21be0a8ca68fa296e5759ae9acdeeb62c1a6a0e762f799\",\"dweb:/ipfs/QmTXP4rpJBHSwMrjyhXUEqv8UQ8YiLuemSzhS6XpR3SWNz\"]},\"IERC721Metadata.sol\":{\"keccak256\":\"0x0c3ee58edf8b8c487c4333710a2404b78a84230d10e1432c75998e3d8dcb9048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c26bbf3e3e32b3ce219ebaa746a5788b38524f58b54f8665fe75c7ce9b77c230\",\"dweb:/ipfs/QmWFmd8de26oUgr6X2Zqt4b5bi7P7vwCPyVT8ECZj5tgDb\"]},\"IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 633,
								"contract": "ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 635,
								"contract": "ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 639,
								"contract": "ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 643,
								"contract": "ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 647,
								"contract": "ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 653,
								"contract": "ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721Royalty.sol": {
				"ERC721Royalty": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.",
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721Royalty.sol\":\"ERC721Royalty\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"ERC2981.sol\":{\"keccak256\":\"0x24d9a2460e6d189405daae9b3316b8bd812f217ee5cc22ca8a35d3d9d801d56d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c11e4f6110bc048281b537502619b7efc1ef281cd39a811fedc1b7407d0ca0\",\"dweb:/ipfs/QmNTCHvnSvvPHujRbku6TWeQJ7nQZ71XEM7VczZZ4nZCJg\"]},\"ERC721.sol\":{\"keccak256\":\"0xb456de06fe1abfac1ab67c32ddad0c07dbc1b06d96ef7c3ab1eeb1f2e9d5e85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9990ce9aefe67a5cf980641afd281ec66409a834e8b261b206bac6d565724608\",\"dweb:/ipfs/QmRNU6w7cY2hg7KkY8zETtESNNhRRoCit6NTuYJgYdMQCD\"]},\"ERC721Royalty.sol\":{\"keccak256\":\"0x9756476617d36626868271eee7101522f26c80bca859f798f3bef9f2c54d76c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c7e5c73f12df6a78c6a8806a68ba12ddfbae62f3e405af16a46eb36a4918bf9\",\"dweb:/ipfs/QmPEh8R51zqPT6LHEv1ZRE6Bgw9nWz5awuiuQLL7w7AJiX\"]},\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC2981.sol\":{\"keccak256\":\"0xe38577182afa81deee98d6e8f736049f1cb9a2d6b30508be5ce698ee76f02c59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acf2d2401b1e6becbca62a65da22bcce558f00df5ed7ad755c3dcc7a5de45db\",\"dweb:/ipfs/QmceBQn2w3kQkPC6KdAZreT7JEip9ZasNidZyPr6QzLmzz\"]},\"IERC721.sol\":{\"keccak256\":\"0xe0e811a90fa8c9179bb9b44606f477f6c3a2243708ddeaa9156cc3ae8004239c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efef5eea5e2e0cd21be0a8ca68fa296e5759ae9acdeeb62c1a6a0e762f799\",\"dweb:/ipfs/QmTXP4rpJBHSwMrjyhXUEqv8UQ8YiLuemSzhS6XpR3SWNz\"]},\"IERC721Metadata.sol\":{\"keccak256\":\"0x0c3ee58edf8b8c487c4333710a2404b78a84230d10e1432c75998e3d8dcb9048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c26bbf3e3e32b3ce219ebaa746a5788b38524f58b54f8665fe75c7ce9b77c230\",\"dweb:/ipfs/QmWFmd8de26oUgr6X2Zqt4b5bi7P7vwCPyVT8ECZj5tgDb\"]},\"IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 360,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(RoyaltyInfo)357_storage"
							},
							{
								"astId": 365,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)357_storage)"
							},
							{
								"astId": 633,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 635,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 639,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 643,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 647,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 653,
								"contract": "ERC721Royalty.sol:ERC721Royalty",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)357_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)357_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoyaltyInfo)357_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 354,
										"contract": "ERC721Royalty.sol:ERC721Royalty",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 356,
										"contract": "ERC721Royalty.sol:ERC721Royalty",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC2981.sol\":{\"keccak256\":\"0xe38577182afa81deee98d6e8f736049f1cb9a2d6b30508be5ce698ee76f02c59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acf2d2401b1e6becbca62a65da22bcce558f00df5ed7ad755c3dcc7a5de45db\",\"dweb:/ipfs/QmceBQn2w3kQkPC6KdAZreT7JEip9ZasNidZyPr6QzLmzz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC721.sol\":{\"keccak256\":\"0xe0e811a90fa8c9179bb9b44606f477f6c3a2243708ddeaa9156cc3ae8004239c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efef5eea5e2e0cd21be0a8ca68fa296e5759ae9acdeeb62c1a6a0e762f799\",\"dweb:/ipfs/QmTXP4rpJBHSwMrjyhXUEqv8UQ8YiLuemSzhS6XpR3SWNz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"IERC721.sol\":{\"keccak256\":\"0xe0e811a90fa8c9179bb9b44606f477f6c3a2243708ddeaa9156cc3ae8004239c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efef5eea5e2e0cd21be0a8ca68fa296e5759ae9acdeeb62c1a6a0e762f799\",\"dweb:/ipfs/QmTXP4rpJBHSwMrjyhXUEqv8UQ8YiLuemSzhS6XpR3SWNz\"]},\"IERC721Metadata.sol\":{\"keccak256\":\"0x0c3ee58edf8b8c487c4333710a2404b78a84230d10e1432c75998e3d8dcb9048\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c26bbf3e3e32b3ce219ebaa746a5788b38524f58b54f8665fe75c7ce9b77c230\",\"dweb:/ipfs/QmWFmd8de26oUgr6X2Zqt4b5bi7P7vwCPyVT8ECZj5tgDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":93:1978  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":93:1978  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122095f3fee3831bbbbf5dda669c477ad150457222038b5703a68f91c92cb8eea52c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122095f3fee3831bbbbf5dda669c477ad150457222038b5703a68f91c92cb8eea52c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 RETURN INVALID 0xE3 DUP4 SHL 0xBB 0xBF TSTORE 0xDA PUSH7 0x9C477AD1504572 0x22 SUB DUP12 JUMPI SUB 0xA6 DUP16 SWAP2 0xC9 0x2C 0xB8 0xEE 0xA5 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "93:1885:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122095f3fee3831bbbbf5dda669c477ad150457222038b5703a68f91c92cb8eea52c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 RETURN INVALID 0xE3 DUP4 SHL 0xBB 0xBF TSTORE 0xDA PUSH7 0x9C477AD1504572 0x22 SUB DUP12 JUMPI SUB 0xA6 DUP16 SWAP2 0xC9 0x2C 0xB8 0xEE 0xA5 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "93:1885:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095f3fee3831bbbbf5dda669c477ad150457222038b5703a68f91c92cb8eea52c64736f6c634300081c0033",
									".code": [
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"Address.sol",
								"Context.sol",
								"ERC165.sol",
								"ERC2981.sol",
								"ERC721.sol",
								"ERC721Royalty.sol",
								"IERC165.sol",
								"IERC2981.sol",
								"IERC721.sol",
								"IERC721Metadata.sol",
								"IERC721Receiver.sol",
								"Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nameLocation": "134:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "784:311:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:0"
											},
											{
												"AST": {
													"nativeSrc": "1012:52:0",
													"nodeType": "YulBlock",
													"src": "1012:52:0",
													"statements": [
														{
															"nativeSrc": "1026:28:0",
															"nodeType": "YulAssignment",
															"src": "1026:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "1046:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1034:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:0"
																},
																"nativeSrc": "1034:20:0",
																"nodeType": "YulFunctionCall",
																"src": "1034:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1026:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1003:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1080:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1073:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 295,
									"src": "718:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2083:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2115:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2126:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2178:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2196:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2206:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2218:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2031:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2058:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:0"
									},
									"scope": 295,
									"src": "2012:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3155:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3193:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3172:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3165:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3104:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3141:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:0"
									},
									"scope": 295,
									"src": "3066:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3608:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3664:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3625:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3618:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3516:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3543:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3594:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:0"
									},
									"scope": 295,
									"src": "3461:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4189:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4206:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4199:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4110:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4175:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:0"
									},
									"scope": 295,
									"src": "4046:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4727:321:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4759:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4770:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4847:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4836:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4900:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4914:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4967:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4941:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4948:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4960:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5028:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4989:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "4982:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4588:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4612:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4639:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4662:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4713:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:0"
									},
									"scope": 295,
									"src": "4548:500:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5325:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5369:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5342:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5335:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5311:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:0"
									},
									"scope": 295,
									"src": "5225:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5764:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5793:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5853:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5867:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5901:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "5952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5961:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5973:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5934:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "5927:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5667:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5694:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5750:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:0"
									},
									"scope": 295,
									"src": "5606:387:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6269:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6307:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6315:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6286:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6279:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:0"
									},
									"scope": 295,
									"src": "6172:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6711:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6740:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6729:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6802:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6816:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6863:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6850:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6912:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6924:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6885:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "6878:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6619:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6646:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6697:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:0"
									},
									"scope": 295,
									"src": "6556:388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7110:532:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7181:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7265:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7276:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7573:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7598:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7261:365:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7288:279:0",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "7408:145:0",
																			"nodeType": "YulBlock",
																			"src": "7408:145:0",
																			"statements": [
																				{
																					"nativeSrc": "7430:40:0",
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "7459:10:0",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "7453:5:0",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:0"
																						},
																						"nativeSrc": "7453:17:0",
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "7434:15:0",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7502:2:0",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "7506:10:0",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7498:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:0"
																								},
																								"nativeSrc": "7498:19:0",
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "7519:15:0",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7491:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:0"
																						},
																						"nativeSrc": "7491:44:0",
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:0"
																					},
																					"nativeSrc": "7491:44:0",
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:0"
																				}
																			]
																		},
																		"evmVersion": "cancun",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7120:516:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7133:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7154:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7147:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6986:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7008:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7041:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7096:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:0"
									},
									"scope": 295,
									"src": "6950:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "126:7518:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:7612:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Context",
							"nameLocation": "572:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "648:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "658:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "639:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:1"
									},
									"scope": 316,
									"src": "586:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "755:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "776:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 313,
												"nodeType": "Return",
												"src": "765:15:1"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "739:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:1"
									},
									"scope": 316,
									"src": "688:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "554:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:757:1"
				},
				"id": 1
			},
			"ERC165.sol": {
				"ast": {
					"absolutePath": "ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							340
						],
						"IERC165": [
							1466
						]
					},
					"id": 341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 341,
							"sourceUnit": 1467,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "IERC165",
										"nameLocations": [
											"688:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "688:7:2"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:2"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "83:576:2",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340,
								1466
							],
							"name": "ERC165",
							"nameLocation": "678:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "854:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 331,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "871:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "891:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1466_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1466_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 332,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "886:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1466",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "900:11:2",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "886:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "871:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 330,
												"id": 337,
												"nodeType": "Return",
												"src": "864:47:2"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "830:8:2"
									},
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "790:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 324,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "848:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:2"
									},
									"scope": 340,
									"src": "763:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 341,
							"src": "660:260:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:888:2"
				},
				"id": 2
			},
			"ERC2981.sol": {
				"ast": {
					"absolutePath": "ERC2981.sol",
					"exportedSymbols": {
						"ERC165": [
							340
						],
						"ERC2981": [
							607
						],
						"IERC165": [
							1466
						],
						"IERC2981": [
							1486
						]
					},
					"id": 608,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:3"
						},
						{
							"absolutePath": "IERC2981.sol",
							"file": "./IERC2981.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 608,
							"sourceUnit": 1487,
							"src": "139:40:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 343,
										"name": "IERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "147:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165.sol",
							"file": "./ERC165.sol",
							"id": 347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 608,
							"sourceUnit": 341,
							"src": "181:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 345,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "189:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 346,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 340,
										"src": "198:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 349,
										"name": "IERC2981",
										"nameLocations": [
											"1117:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "1117:8:3"
									},
									"id": 350,
									"nodeType": "InheritanceSpecifier",
									"src": "1117:8:3"
								},
								{
									"baseName": {
										"id": 351,
										"name": "ERC165",
										"nameLocations": [
											"1127:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 340,
										"src": "1127:6:3"
									},
									"id": 352,
									"nodeType": "InheritanceSpecifier",
									"src": "1127:6:3"
								}
							],
							"canonicalName": "ERC2981",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "230:856:3",
								"text": " @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."
							},
							"fullyImplemented": true,
							"id": 607,
							"linearizedBaseContracts": [
								607,
								340,
								1486,
								1466
							],
							"name": "ERC2981",
							"nameLocation": "1106:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC2981.RoyaltyInfo",
									"id": 357,
									"members": [
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "1179:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 357,
											"src": "1171:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1171:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "royaltyFraction",
											"nameLocation": "1205:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 357,
											"src": "1198:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 355,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1198:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoyaltyInfo",
									"nameLocation": "1148:11:3",
									"nodeType": "StructDefinition",
									"scope": 607,
									"src": "1141:87:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "_defaultRoyaltyInfo",
									"nameLocation": "1256:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "1236:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
										"typeString": "struct ERC2981.RoyaltyInfo"
									},
									"typeName": {
										"id": 359,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 358,
											"name": "RoyaltyInfo",
											"nameLocations": [
												"1236:11:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 357,
											"src": "1236:11:3"
										},
										"referencedDeclaration": 357,
										"src": "1236:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
											"typeString": "struct ERC2981.RoyaltyInfo"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_tokenRoyaltyInfo",
									"nameLocation": "1330:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 607,
									"src": "1282:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$357_storage_$",
										"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
									},
									"typeName": {
										"id": 364,
										"keyName": "tokenId",
										"keyNameLocation": "1298:7:3",
										"keyType": {
											"id": 361,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1290:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1282:39:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$357_storage_$",
											"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 363,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 362,
												"name": "RoyaltyInfo",
												"nameLocations": [
													"1309:11:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1309:11:3"
											},
											"referencedDeclaration": 357,
											"src": "1309:11:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
												"typeString": "struct ERC2981.RoyaltyInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1356:98:3",
										"text": " @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "6f483d09",
									"id": 372,
									"name": "ERC2981InvalidDefaultRoyalty",
									"nameLocation": "1466:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1503:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1495:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1522:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1514:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:40:3"
									},
									"src": "1460:75:3"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1543:66:3",
										"text": " @dev The default royalty receiver is invalid."
									},
									"errorSelector": "b6d9900a",
									"id": 377,
									"name": "ERC2981InvalidDefaultRoyaltyReceiver",
									"nameLocation": "1621:36:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1666:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1658:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:18:3"
									},
									"src": "1615:61:3"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "1684:116:3",
										"text": " @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "dfd1fc1b",
									"id": 386,
									"name": "ERC2981InvalidTokenRoyalty",
									"nameLocation": "1812:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1864:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1856:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1883:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1875:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:57:3"
									},
									"src": "1806:90:3"
								},
								{
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1904:72:3",
										"text": " @dev The royalty receiver for `tokenId` is invalid."
									},
									"errorSelector": "969f0852",
									"id": 393,
									"name": "ERC2981InvalidTokenRoyaltyReceiver",
									"nameLocation": "1988:34:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2048:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2040:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:35:3"
									},
									"src": "1982:76:3"
								},
								{
									"baseFunctions": [
										339,
										1465
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "2238:107:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 404,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2256:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 406,
																		"name": "IERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "2276:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$1486_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$1486_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	],
																	"id": 405,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2271:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$1486",
																	"typeString": "type(contract IERC2981)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2286:11:3",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2271:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2256:41:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2325:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC2981_$607_$",
																	"typeString": "type(contract super ERC2981)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2307:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 339,
															"src": "2301:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2301:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2256:81:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 403,
												"id": 415,
												"nodeType": "Return",
												"src": "2249:88:3"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2066:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2139:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 400,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 398,
												"name": "IERC165",
												"nameLocations": [
													"2206:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1466,
												"src": "2206:7:3"
											},
											{
												"id": 399,
												"name": "ERC165",
												"nameLocations": [
													"2215:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 340,
												"src": "2215:6:3"
											}
										],
										"src": "2197:25:3"
									},
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2164:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2157:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 395,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2157:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:20:3"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2232:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2232:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:6:3"
									},
									"scope": 607,
									"src": "2130:215:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2545:528:3",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "_royaltyInfo",
														"nameLocation": "2576:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "2556:32:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo"
														},
														"typeName": {
															"id": 430,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 429,
																"name": "RoyaltyInfo",
																"nameLocations": [
																	"2556:11:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 357,
																"src": "2556:11:3"
															},
															"referencedDeclaration": 357,
															"src": "2556:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
																"typeString": "struct ERC2981.RoyaltyInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_tokenRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2591:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$357_storage_$",
															"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2609:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2591:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2556:61:3"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "royaltyReceiver",
														"nameLocation": "2636:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "2628:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2628:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"expression": {
														"id": 438,
														"name": "_royaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2654:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo storage pointer"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2667:8:3",
													"memberName": "receiver",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 354,
													"src": "2654:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2628:47:3"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "royaltyFraction",
														"nameLocation": "2693:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "2686:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 441,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2686:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"expression": {
														"id": 443,
														"name": "_royaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2711:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo storage pointer"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2724:15:3",
													"memberName": "royaltyFraction",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 356,
													"src": "2711:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2686:53:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 446,
														"name": "royaltyReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2756:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2783:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2775:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 447,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2775:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2775:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2756:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "2752:176:3",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "2787:141:3",
													"statements": [
														{
															"expression": {
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 452,
																	"name": "royaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2802:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 453,
																		"name": "_defaultRoyaltyInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "2820:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
																			"typeString": "struct ERC2981.RoyaltyInfo storage ref"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2840:8:3",
																	"memberName": "receiver",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 354,
																	"src": "2820:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2802:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "2802:46:3"
														},
														{
															"expression": {
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 457,
																	"name": "royaltyFraction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2863:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 458,
																		"name": "_defaultRoyaltyInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "2881:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
																			"typeString": "struct ERC2981.RoyaltyInfo storage ref"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2901:15:3",
																	"memberName": "royaltyFraction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "2881:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "2863:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 461,
															"nodeType": "ExpressionStatement",
															"src": "2863:53:3"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "royaltyAmount",
														"nameLocation": "2948:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "2940:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2940:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 466,
																	"name": "salePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "2965:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 467,
																	"name": "royaltyFraction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2977:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "2965:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 469,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2964:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 470,
															"name": "_feeDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "2996:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
																"typeString": "function () pure returns (uint96)"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2996:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2964:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2940:73:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 474,
															"name": "royaltyReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3034:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "royaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "3051:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 476,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3033:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 428,
												"id": 477,
												"nodeType": "Return",
												"src": "3026:39:3"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2353:41:3",
										"text": " @inheritdoc IERC2981"
									},
									"functionSelector": "2a55205a",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2409:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "2465:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2457:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:61:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2519:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2511:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2537:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2529:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:34:3"
									},
									"scope": 607,
									"src": "2400:673:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "3421:31:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3130303030",
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3439:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "3432:12:3"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "3081:268:3",
										"text": " @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_feeDenominator",
									"nameLocation": "3364:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3379:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "3413:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 482,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3413:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:8:3"
									},
									"scope": 607,
									"src": "3355:97:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3807:434:3",
										"statements": [
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "3826:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "3818:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3818:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 498,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "3840:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3818:39:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "3872:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 502,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "3887:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3872:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "3868:176:3",
												"trueBody": {
													"id": 509,
													"nodeType": "Block",
													"src": "3900:144:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 505,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "4006:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 506,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "4020:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 504,
																	"name": "ERC2981InvalidDefaultRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "3977:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3977:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 508,
															"nodeType": "RevertStatement",
															"src": "3970:62:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4058:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4058:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "IfStatement",
												"src": "4054:110:3",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "4082:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4149:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4141:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 518,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4141:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4141:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 517,
																	"name": "ERC2981InvalidDefaultRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "4104:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4104:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 523,
															"nodeType": "RevertStatement",
															"src": "4097:55:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4176:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 528,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4210:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 529,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "4220:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 527,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4198:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$357_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4198:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "4176:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "4176:57:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3460:257:3",
										"text": " @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDefaultRoyalty",
									"nameLocation": "3732:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3759:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3751:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "3776:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3769:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 492,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3769:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:39:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3807:0:3"
									},
									"scope": 607,
									"src": "3723:518:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "4367:45:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4378:26:3",
													"subExpression": {
														"id": 538,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4378:26:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "4249:62:3",
										"text": " @dev Removes default royalty information."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deleteDefaultRoyalty",
									"nameLocation": "4326:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4347:2:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4367:0:3"
									},
									"scope": 607,
									"src": "4317:95:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "4791:455:3",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "4810:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "4802:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "4824:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4802:39:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "4856:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 558,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4871:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4856:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "4852:183:3",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "4884:151:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 561,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "4988:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 562,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "4997:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 563,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "5011:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 560,
																	"name": "ERC2981InvalidTokenRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4961:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4961:62:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 565,
															"nodeType": "RevertStatement",
															"src": "4954:69:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 568,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "5049:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5069:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5061:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 569,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5061:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5061:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5049:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "5045:117:3",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "5073:89:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 575,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "5130:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5147:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5139:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5139:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5139:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"name": "ERC2981InvalidTokenRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "5095:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (uint256,address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5095:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "5088:62:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 584,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5174:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$357_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 586,
														"indexExpression": {
															"id": 585,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5192:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5174:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 588,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "5215:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 589,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "5225:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 587,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5203:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$357_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5203:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "5174:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5174:64:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "4420:266:3",
										"text": " @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "4701:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4726:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4718:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4743:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4735:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "4760:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 548,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4753:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:56:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4791:0:3"
									},
									"scope": 607,
									"src": "4692:554:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5419:52:3",
										"statements": [
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5430:33:3",
													"subExpression": {
														"baseExpression": {
															"id": 600,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5437:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$357_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 602,
														"indexExpression": {
															"id": 601,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5455:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5437:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$357_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "5430:33:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5254:97:3",
										"text": " @dev Resets royalty information for the token id back to the global default."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_resetTokenRoyalty",
									"nameLocation": "5366:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5393:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5385:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5384:17:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5419:0:3"
									},
									"scope": 607,
									"src": "5357:114:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 608,
							"src": "1088:4386:3",
							"usedErrors": [
								372,
								377,
								386,
								393
							],
							"usedEvents": []
						}
					],
					"src": "111:5363:3"
				},
				"id": 3
			},
			"ERC721.sol": {
				"ast": {
					"absolutePath": "ERC721.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"Context": [
							316
						],
						"ERC165": [
							340
						],
						"ERC721": [
							1425
						],
						"IERC165": [
							1466
						],
						"IERC721": [
							1602
						],
						"IERC721Metadata": [
							1629
						],
						"IERC721Receiver": [
							1647
						],
						"Strings": [
							1850
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 609,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "IERC721.sol",
							"file": "./IERC721.sol",
							"id": 610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 1603,
							"src": "58:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 1648,
							"src": "82:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC721Metadata.sol",
							"file": "./IERC721Metadata.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 1630,
							"src": "114:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 296,
							"src": "146:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 317,
							"src": "170:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 1851,
							"src": "194:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165.sol",
							"file": "./ERC165.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 341,
							"src": "218:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 618,
										"name": "Context",
										"nameLocations": [
											"508:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "508:7:4"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "508:7:4"
								},
								{
									"baseName": {
										"id": 620,
										"name": "ERC165",
										"nameLocations": [
											"517:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 340,
										"src": "517:6:4"
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "517:6:4"
								},
								{
									"baseName": {
										"id": 622,
										"name": "IERC721",
										"nameLocations": [
											"525:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1602,
										"src": "525:7:4"
									},
									"id": 623,
									"nodeType": "InheritanceSpecifier",
									"src": "525:7:4"
								},
								{
									"baseName": {
										"id": 624,
										"name": "IERC721Metadata",
										"nameLocations": [
											"534:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "534:15:4"
									},
									"id": 625,
									"nodeType": "InheritanceSpecifier",
									"src": "534:15:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "242:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425,
								1629,
								1602,
								340,
								1466,
								316
							],
							"name": "ERC721",
							"nameLocation": "498:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 628,
									"libraryName": {
										"id": 626,
										"name": "Address",
										"nameLocations": [
											"562:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "562:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "556:26:4",
									"typeName": {
										"id": 627,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "574:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 631,
									"libraryName": {
										"id": 629,
										"name": "Strings",
										"nameLocations": [
											"593:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1850,
										"src": "593:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "587:26:4",
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 633,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "652:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "637:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 632,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "637:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 635,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "699:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "684:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 634,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "684:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 639,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "795:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "759:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 638,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 636,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 637,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 643,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "889:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "853:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 642,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 640,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "853:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 641,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 647,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "990:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "954:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 646,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 644,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "962:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "954:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 645,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "973:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 653,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1113:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "1060:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 652,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 648,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1068:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1060:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 651,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 649,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1087:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1079:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 650,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1098:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "1307:57:4",
										"statements": [
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 661,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "1317:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 662,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1325:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1317:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "1317:13:4"
											},
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 665,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "1340:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 666,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1350:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1340:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "1340:17:4"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1138:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 670,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1277:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1263:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1298:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1284:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 657,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:44:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:0:4"
									},
									"scope": 1425,
									"src": "1251:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										339,
										1465
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "1539:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 681,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1568:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 683,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "1588:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1602_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1602_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 682,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1583:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1583:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1602",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1597:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1583:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1568:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1624:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 689,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "1644:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1629_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1629_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 688,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1639:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1639:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1629",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1661:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1639:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1624:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1568:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 696,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1712:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 694,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1688:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1425_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1694:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 339,
															"src": "1688:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1688:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1568:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 680,
												"id": 699,
												"nodeType": "Return",
												"src": "1549:175:4"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1370:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1440:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 677,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 675,
												"name": "ERC165",
												"nameLocations": [
													"1507:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 340,
												"src": "1507:6:4"
											},
											{
												"id": 676,
												"name": "IERC165",
												"nameLocations": [
													"1515:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1466,
												"src": "1515:7:4"
											}
										],
										"src": "1498:25:4"
									},
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1465:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1458:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 672,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1458:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:20:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1533:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:6:4"
									},
									"scope": 1425,
									"src": "1431:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1527
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1871:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 711,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "1889:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1906:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1898:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 712,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1898:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1898:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1889:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1910:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1881:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "1881:74:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 720,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1972:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1982:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1972:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 709,
												"id": 723,
												"nodeType": "Return",
												"src": "1965:23:4"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "1737:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1799:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 706,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1844:8:4"
									},
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1817:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1809:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:15:4"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1862:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:4"
									},
									"scope": 1425,
									"src": "1790:205:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1535
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2133:154:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2151:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "2143:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2143:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"baseExpression": {
														"id": 736,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 738,
													"indexExpression": {
														"id": 737,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2167:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2159:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 741,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "2193:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2210:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2202:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 742,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2202:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2202:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2193:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2214:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2185:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "2185:73:4"
											},
											{
												"expression": {
													"id": 750,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "2275:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 733,
												"id": 751,
												"nodeType": "Return",
												"src": "2268:12:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "2001:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2061:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2106:8:4"
									},
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2077:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2069:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:17:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2124:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:9:4"
									},
									"scope": 1425,
									"src": "2052:235:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1614
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "2418:29:4",
										"statements": [
											{
												"expression": {
													"id": 760,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 633,
													"src": "2435:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 759,
												"id": 761,
												"nodeType": "Return",
												"src": "2428:12:4"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "2293:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2358:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 756,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2385:8:4"
									},
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2362:2:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2403:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2403:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:15:4"
									},
									"scope": 1425,
									"src": "2349:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1620
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "2582:31:4",
										"statements": [
											{
												"expression": {
													"id": 770,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 635,
													"src": "2599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 769,
												"id": 771,
												"nodeType": "Return",
												"src": "2592:14:4"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "2453:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2520:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 766,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2549:8:4"
									},
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:2:4"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2567:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2567:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2566:15:4"
									},
									"scope": 1425,
									"src": "2511:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2767:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 784,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2793:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 783,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "2785:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2785:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2803:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2777:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "2777:76:4"
											},
											{
												"assignments": [
													790
												],
												"declarations": [
													{
														"constant": false,
														"id": 790,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2878:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "2864:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 789,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2864:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 791,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2888:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2888:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2864:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 796,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "2921:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2915:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 794,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2915:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2915:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2930:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2915:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2939:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2915:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2999:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2915:86:4",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 805,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "2967:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 806,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "2976:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2984:8:4",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1732,
																			"src": "2976:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2976:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 803,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2950:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2954:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2950:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2950:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2943:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 801,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2943:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2943:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 781,
												"id": 813,
												"nodeType": "Return",
												"src": "2908:93:4"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "2619:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2688:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 778,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2734:8:4"
									},
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2705:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2697:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2696:17:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2752:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2752:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:15:4"
									},
									"scope": 1425,
									"src": "2679:329:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "3315:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3332:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 820,
												"id": 822,
												"nodeType": "Return",
												"src": "3325:9:4"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "3014:230:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3258:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3300:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3300:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:15:4"
									},
									"scope": 1425,
									"src": "3249:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1563
									],
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "3468:331:4",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3486:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "3478:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 833,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3478:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 839,
												"initialValue": {
													"arguments": [
														{
															"id": 837,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3509:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 835,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3494:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1425_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3501:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "3494:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3494:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3478:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "3535:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 842,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3541:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3535:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3527:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "3527:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 848,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "3616:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3616:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 850,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3632:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3616:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3658:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 854,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "3665:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3665:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 852,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3641:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3641:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3616:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3595:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:165:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "3595:165:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "3780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3784:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3771:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "3771:21:4"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "3347:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3407:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 831,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3459:8:4"
									},
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3423:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "3415:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3435:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "3427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:29:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3468:0:4"
									},
									"scope": 1425,
									"src": "3398:401:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1571
									],
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "3945:132:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 878,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3971:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "3963:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3963:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3981:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3955:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3955:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "3955:73:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 883,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4046:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 885,
													"indexExpression": {
														"id": 884,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "4062:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4046:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 875,
												"id": 886,
												"nodeType": "Return",
												"src": "4039:31:4"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "3805:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3869:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 872,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3918:8:4"
									},
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3889:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3881:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:17:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3936:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:9:4"
									},
									"scope": 1425,
									"src": "3860:217:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1579
									],
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "4228:206:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "4246:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 899,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "4258:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4258:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4246:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4272:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4238:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4238:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "4238:62:4"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "4311:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 909,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 906,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "4330:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4330:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4311:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 910,
														"indexExpression": {
															"id": 908,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4344:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4311:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 911,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4356:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4311:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "4311:53:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "4394:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4394:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4408:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4418:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 914,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4379:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "EmitStatement",
												"src": "4374:53:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "4083:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4153:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 895,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4219:8:4"
									},
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4179:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "4171:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4194:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "4189:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4189:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:33:4"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:4"
									},
									"scope": 1425,
									"src": "4144:290:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1589
									],
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "4603:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 933,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4620:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 935,
														"indexExpression": {
															"id": 934,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "4639:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4620:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 937,
													"indexExpression": {
														"id": 936,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "4646:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4620:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 932,
												"id": 938,
												"nodeType": "Return",
												"src": "4613:42:4"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "4440:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4509:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 929,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4579:8:4"
									},
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4534:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "4526:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4549:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "4541:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:33:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "4597:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4597:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:6:4"
									},
									"scope": 1425,
									"src": "4500:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1555
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "4843:211:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 953,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4932:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4932:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 955,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "4946:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 952,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "4913:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4913:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4956:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4905:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4905:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4905:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5029:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "5035:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "5039:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5019:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5019:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "5019:28:4"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "4668:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4733:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 949,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4834:8:4"
									},
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4763:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4755:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4785:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4777:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4805:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4797:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:73:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4843:0:4"
									},
									"scope": 1425,
									"src": "4724:330:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1545
									],
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5243:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "5270:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "5276:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "5280:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5289:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 978,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1016
														],
														"referencedDeclaration": 1016,
														"src": "5253:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5253:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "5253:39:4"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "5060:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5129:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 976,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5234:8:4"
									},
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5163:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5155:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5185:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5177:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5205:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5197:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5197:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:73:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:4"
									},
									"scope": 1425,
									"src": "5120:179:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1601
									],
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "5516:169:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1001,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "5553:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5553:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1003,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "5567:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1000,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "5534:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5534:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "5526:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "5653:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "5659:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "5663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1012,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "5672:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1008,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "5639:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5639:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "5639:39:4"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "5305:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5374:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 997,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5507:8:4"
									},
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5408:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5400:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5430:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5422:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5422:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5450:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5442:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5467:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5467:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5390:101:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5516:0:4"
									},
									"scope": 1425,
									"src": "5365:320:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "6688:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "6708:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "6714:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "6718:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1028,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6698:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "6698:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1036,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "6767:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1037,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "6773:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1038,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "6777:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1039,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "6786:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1035,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "6744:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6744:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6794:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6736:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6736:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "6736:111:4"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "5691:851:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6556:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6587:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6579:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6579:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6609:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6601:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6621:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6659:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6646:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6569:101:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6688:0:4"
									},
									"scope": 1425,
									"src": "6547:307:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "7228:54:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1053,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1055,
														"indexExpression": {
															"id": 1054,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "7253:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7245:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7273:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7265:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1056,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7265:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7265:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7245:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1052,
												"id": 1061,
												"nodeType": "Return",
												"src": "7238:37:4"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "6860:292:4",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7166:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7182:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "7174:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7173:17:4"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "7222:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7222:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7221:6:4"
									},
									"scope": 1425,
									"src": "7157:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "7539:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1075,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "7565:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1074,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "7557:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7557:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7575:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7549:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7549:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "7549:73:4"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7640:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1103,
														"src": "7632:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1080,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7632:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"id": 1084,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "7663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1082,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "7648:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1425_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7655:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "7648:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7648:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7632:39:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "7689:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1088,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "7700:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7689:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1091,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1068,
																				"src": "7721:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1090,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "7709:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7709:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1093,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "7733:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7709:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7689:51:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1097,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "7761:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "7768:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1096,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "7744:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7744:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7689:87:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1101,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7688:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1102,
												"nodeType": "Return",
												"src": "7681:96:4"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "7288:147:4",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7449:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7476:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "7468:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7468:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7493:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "7485:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7485:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7467:34:4"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "7533:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7533:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7532:6:4"
									},
									"scope": 1425,
									"src": "7440:344:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "8179:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "8199:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "8203:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8212:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1112,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1119,
															1148
														],
														"referencedDeclaration": 1148,
														"src": "8189:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8189:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "8189:26:4"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "7790:319:4",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8123:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8141:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "8133:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8133:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "8145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8132:29:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8179:0:4"
									},
									"scope": 1425,
									"src": "8114:108:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "8558:196:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "8574:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "8578:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "8568:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8568:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "8568:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8648:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8640:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1136,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8640:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8640:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1140,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "8652:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1141,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "8656:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1142,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "8665:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1135,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "8617:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8617:54:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8685:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8596:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8596:151:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "8596:151:4"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "8228:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8452:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8479:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "8471:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8499:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "8491:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8529:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "8516:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8461:79:4"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8558:0:4"
									},
									"scope": 1425,
									"src": "8443:311:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "9137:311:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "9155:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9169:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9161:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9161:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9161:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9155:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9173:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9147:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "9147:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9226:17:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1168,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "9235:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1167,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "9227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9227:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9245:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 1166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9218:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9218:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "9218:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9316:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9308:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9308:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9308:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "9320:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "9324:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "9287:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9287:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "9287:45:4"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1183,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "9343:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1185,
														"indexExpression": {
															"id": 1184,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "9353:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9343:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9360:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9343:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "9343:18:4"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1189,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9371:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "9379:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9371:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "9390:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9371:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "9371:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9425:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9417:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9417:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9417:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "9429:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "9408:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9408:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "9403:38:4"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "8760:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9085:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9099:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "9091:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9091:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9111:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "9103:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9090:29:4"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9137:0:4"
									},
									"scope": 1425,
									"src": "9076:372:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "9714:299:4",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9732:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "9724:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1211,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9724:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"arguments": [
														{
															"id": 1215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9755:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1213,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "9740:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1425_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9747:7:4",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "9740:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9740:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9724:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9795:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9810:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9802:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9802:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9802:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1218,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "9774:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9774:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "9774:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9877:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9869:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9869:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9869:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9881:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1227,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "9860:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9860:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "9860:29:4"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1235,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "9900:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1237,
														"indexExpression": {
															"id": 1236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9910:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9900:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9900:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "9900:21:4"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9931:23:4",
													"subExpression": {
														"baseExpression": {
															"id": 1241,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1243,
														"indexExpression": {
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9946:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9938:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "9931:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1247,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9979:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9994:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9986:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9986:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9986:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "9998:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1246,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "9970:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "EmitStatement",
												"src": "9965:41:4"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "9454:206:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9674:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9688:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "9680:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9679:17:4"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9714:0:4"
									},
									"scope": 1425,
									"src": "9665:348:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "10446:451:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1269,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "10479:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1267,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "10464:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1425_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10471:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "10464:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10464:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1271,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "10491:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10464:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10497:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															},
															"value": "ERC721: transfer of token that is not own"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10456:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10456:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "10456:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1277,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "10559:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10573:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10565:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10565:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10565:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10559:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10577:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10551:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10551:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "10551:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1287,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "10648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "10654:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "10658:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "10627:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "10627:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10745:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10737:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10737:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10737:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "10749:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "10728:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10728:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "10728:29:4"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1300,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "10768:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1302,
														"indexExpression": {
															"id": 1301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "10778:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10768:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10787:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10768:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "10768:20:4"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1306,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "10798:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "10808:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10798:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10815:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10798:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "10798:18:4"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1312,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "10826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1314,
														"indexExpression": {
															"id": 1313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "10834:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10826:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1315,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "10845:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10826:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "10826:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1319,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "10872:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "10878:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "10882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "10863:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10863:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "EmitStatement",
												"src": "10858:32:4"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "10019:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10346:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10373:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "10365:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10365:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10395:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "10387:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10415:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "10407:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10407:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10355:73:4"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10446:0:4"
									},
									"scope": 1425,
									"src": "10337:560:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "11072:107:4",
										"statements": [
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1333,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "11082:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "11098:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11082:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1336,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "11109:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11082:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "11082:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1342,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "11150:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1340,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "11135:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1425_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11142:7:4",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 753,
																"src": "11135:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11135:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "11160:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "11164:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1339,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "11126:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11126:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "EmitStatement",
												"src": "11121:51:4"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "10903:100:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11017:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11034:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "11026:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11046:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "11038:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11038:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11025:29:4"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11072:0:4"
									},
									"scope": 1425,
									"src": "11008:171:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "11888:626:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "11902:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11905:10:4",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "11902:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11902:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "12472:36:4",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12493:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1362,
															"id": 1409,
															"nodeType": "Return",
															"src": "12486:11:4"
														}
													]
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "11898:610:4",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "11919:547:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1387,
																		"nodeType": "Block",
																		"src": "12034:95:4",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1379,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1377,
																						"src": "12059:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1381,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1354,
																										"src": "12085:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1380,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1647,
																									"src": "12069:15:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1647_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1382,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12069:19:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$1647",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1383,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "12089:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1646,
																							"src": "12069:36:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12106:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12069:45:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12059:55:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1362,
																				"id": 1386,
																				"nodeType": "Return",
																				"src": "12052:62:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1388,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1378,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1377,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12026:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1388,
																				"src": "12019:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1376,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12019:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12018:15:4"
																	},
																	"src": "12010:119:4"
																},
																{
																	"block": {
																		"id": 1404,
																		"nodeType": "Block",
																		"src": "12158:298:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1392,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1390,
																							"src": "12180:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1393,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12187:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12180:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12197:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12180:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1402,
																					"nodeType": "Block",
																					"src": "12307:135:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "12338:86:4",
																								"nodeType": "YulBlock",
																								"src": "12338:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "12375:2:4",
																															"nodeType": "YulLiteral",
																															"src": "12375:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "12379:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "12379:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "12371:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "12371:3:4"
																													},
																													"nativeSrc": "12371:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "12371:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "12394:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "12394:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "12388:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "12388:5:4"
																													},
																													"nativeSrc": "12388:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "12388:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "12364:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "12364:6:4"
																											},
																											"nativeSrc": "12364:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "12364:38:4"
																										},
																										"nativeSrc": "12364:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "12364:38:4"
																									}
																								]
																							},
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1390,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12379:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1390,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12394:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1401,
																							"nodeType": "InlineAssembly",
																							"src": "12329:95:4"
																						}
																					]
																				},
																				"id": 1403,
																				"nodeType": "IfStatement",
																				"src": "12176:266:4",
																				"trueBody": {
																					"id": 1400,
																					"nodeType": "Block",
																					"src": "12200:101:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1397,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12229:52:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1396,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12222:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1398,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12222:60:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1399,
																							"nodeType": "ExpressionStatement",
																							"src": "12222:60:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1405,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1391,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1390,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12150:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1405,
																				"src": "12137:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1389,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12137:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12136:21:4"
																	},
																	"src": "12130:326:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1370,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "11974:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11974:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1372,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "11988:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1373,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "11994:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1374,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "12003:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1367,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1354,
																				"src": "11953:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1366,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1647,
																			"src": "11937:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1647_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11937:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1647",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11957:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1646,
																	"src": "11937:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11937:72:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1406,
															"nodeType": "TryStatement",
															"src": "11933:523:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "11185:542:4",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "11741:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11781:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11773:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11803:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11795:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11795:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11823:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11815:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11815:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11853:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11840:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11840:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11763:101:4"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11882:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11882:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11881:6:4"
									},
									"scope": 1425,
									"src": "11732:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "13190:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "12520:545:4",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13079:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13117:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "13109:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13139:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "13131:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13131:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13159:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "13151:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13151:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13099:73:4"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13190:0:4"
									},
									"scope": 1425,
									"src": "13070:122:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "489:12705:4",
							"usedErrors": [],
							"usedEvents": [
								1501,
								1510,
								1519
							]
						}
					],
					"src": "33:13162:4"
				},
				"id": 4
			},
			"ERC721Royalty.sol": {
				"ast": {
					"absolutePath": "ERC721Royalty.sol",
					"exportedSymbols": {
						"ERC2981": [
							607
						],
						"ERC721": [
							1425
						],
						"ERC721Royalty": [
							1454
						]
					},
					"id": 1455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1455,
							"sourceUnit": 1426,
							"src": "151:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1428,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1425,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC2981.sol",
							"file": "./ERC2981.sol",
							"id": 1431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1455,
							"sourceUnit": 608,
							"src": "188:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1430,
										"name": "ERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 607,
										"src": "196:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1433,
										"name": "ERC2981",
										"nameLocations": [
											"972:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 607,
										"src": "972:7:5"
									},
									"id": 1434,
									"nodeType": "InheritanceSpecifier",
									"src": "972:7:5"
								},
								{
									"baseName": {
										"id": 1435,
										"name": "ERC721",
										"nameLocations": [
											"981:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "981:6:5"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "981:6:5"
								}
							],
							"canonicalName": "ERC721Royalty",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1432,
								"nodeType": "StructuredDocumentation",
								"src": "228:708:5",
								"text": " @dev Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n information.\n Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually\n for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."
							},
							"fullyImplemented": true,
							"id": 1454,
							"linearizedBaseContracts": [
								1454,
								1425,
								1629,
								1602,
								607,
								340,
								1486,
								1466,
								316
							],
							"name": "ERC721Royalty",
							"nameLocation": "955:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										417,
										701
									],
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "1163:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1449,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1204:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1447,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1180:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Royalty_$1454_$",
																"typeString": "type(contract super ERC721Royalty)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1186:17:5",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 701,
														"src": "1180:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1451,
												"nodeType": "Return",
												"src": "1173:43:5"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "994:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1064:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1443,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1441,
												"name": "ERC721",
												"nameLocations": [
													"1131:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1425,
												"src": "1131:6:5"
											},
											{
												"id": 1442,
												"name": "ERC2981",
												"nameLocations": [
													"1139:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 607,
												"src": "1139:7:5"
											}
										],
										"src": "1122:25:5"
									},
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1089:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1082:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:20:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1157:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1157:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:6:5"
									},
									"scope": 1454,
									"src": "1055:168:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1455,
							"src": "937:288:5",
							"usedErrors": [
								372,
								377,
								386,
								393
							],
							"usedEvents": [
								1501,
								1510,
								1519
							]
						}
					],
					"src": "125:1101:5"
				},
				"id": 5
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1457,
								"nodeType": "StructuredDocumentation",
								"src": "58:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466
							],
							"name": "IERC165",
							"nameLocation": "348:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "362:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "716:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "741:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "734:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:20:6"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "777:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:6"
									},
									"scope": 1466,
									"src": "707:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "338:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:753:6"
				},
				"id": 6
			},
			"IERC2981.sol": {
				"ast": {
					"absolutePath": "IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							1466
						],
						"IERC2981": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:7"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1487,
							"sourceUnit": 1467,
							"src": "138:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "146:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC165",
										"nameLocations": [
											"468:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "468:7:7"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "468:7:7"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "180:264:7",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 1486,
							"linearizedBaseContracts": [
								1486,
								1466
							],
							"name": "IERC2981",
							"nameLocation": "456:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "483:479:7",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."
									},
									"functionSelector": "2a55205a",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "977:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1007:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "999:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "1033:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1025:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:61:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1081:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1073:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "1099:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1091:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:41:7"
									},
									"scope": 1486,
									"src": "968:146:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1487,
							"src": "446:671:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "110:1007:7"
				},
				"id": 7
			},
			"IERC721.sol": {
				"ast": {
					"absolutePath": "IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1466
						],
						"IERC721": [
							1602
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1489,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 1467,
							"src": "58:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1491,
										"name": "IERC165",
										"nameLocations": [
											"172:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "172:7:8"
									},
									"id": 1492,
									"nodeType": "InheritanceSpecifier",
									"src": "172:7:8"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1490,
								"nodeType": "StructuredDocumentation",
								"src": "83:67:8",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1602,
							"linearizedBaseContracts": [
								1602,
								1466
							],
							"name": "IERC721",
							"nameLocation": "161:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "186:88:8",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1501,
									"name": "Transfer",
									"nameLocation": "285:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "310:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "294:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "332:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "316:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "352:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "336:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:67:8"
									},
									"src": "279:82:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "367:94:8",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1510,
									"name": "Approval",
									"nameLocation": "472:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "497:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "481:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "520:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "504:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "546:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "530:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:74:8"
									},
									"src": "466:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "561:117:8",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1519,
									"name": "ApprovalForAll",
									"nameLocation": "689:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "720:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "704:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "743:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "727:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "758:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "753:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "753:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:64:8"
									},
									"src": "683:85:8"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "774:76:8",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "864:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "882:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "874:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:15:8"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "920:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "912:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:17:8"
									},
									"scope": 1602,
									"src": "855:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "935:131:8",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1080:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1096:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1088:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:8"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1136:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1128:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:15:8"
									},
									"scope": 1602,
									"src": "1071:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "1149:690:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1853:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1887:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "1879:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1909:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "1901:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1929:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "1921:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:73:8"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:0:8"
									},
									"scope": 1602,
									"src": "1844:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "1958:504:8",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2476:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2506:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2498:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2528:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2520:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2548:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2540:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:73:8"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2570:0:8"
									},
									"scope": 1602,
									"src": "2467:104:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2577:452:8",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3043:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3059:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "3051:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3071:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "3063:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:29:8"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3088:0:8"
									},
									"scope": 1602,
									"src": "3034:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "3095:139:8",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3248:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3268:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3260:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:17:8"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3308:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3300:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:18:8"
									},
									"scope": 1602,
									"src": "3239:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "3324:309:8",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3647:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3673:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "3665:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3688:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "3683:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3683:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3664:34:8"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3707:0:8"
									},
									"scope": 1602,
									"src": "3638:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "3714:138:8",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3866:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3891:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3883:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3906:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3898:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:33:8"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "3939:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3938:6:8"
									},
									"scope": 1602,
									"src": "3857:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "3951:556:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4521:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4555:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4547:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4577:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4569:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4597:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4589:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4629:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4614:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4614:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4537:102:8"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:8"
									},
									"scope": 1602,
									"src": "4512:137:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "151:4500:8",
							"usedErrors": [],
							"usedEvents": [
								1501,
								1510,
								1519
							]
						}
					],
					"src": "33:4619:8"
				},
				"id": 8
			},
			"IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1466
						],
						"IERC721": [
							1602
						],
						"IERC721Metadata": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1605,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 1603,
							"src": "58:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1607,
										"name": "IERC721",
										"nameLocations": [
											"246:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1602,
										"src": "246:7:9"
									},
									"id": 1608,
									"nodeType": "InheritanceSpecifier",
									"src": "246:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1606,
								"nodeType": "StructuredDocumentation",
								"src": "83:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629,
								1602,
								1466
							],
							"name": "IERC721Metadata",
							"nameLocation": "227:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "260:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "332:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:2:9"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "362:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "362:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:15:9"
									},
									"scope": 1629,
									"src": "323:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "457:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:9"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "489:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "489:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:15:9"
									},
									"scope": 1629,
									"src": "448:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "510:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "614:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "631:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "623:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:17:9"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "663:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "663:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:15:9"
									},
									"scope": 1629,
									"src": "605:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "217:463:9",
							"usedErrors": [],
							"usedEvents": [
								1501,
								1510,
								1519
							]
						}
					],
					"src": "33:648:9"
				},
				"id": 9
			},
			"IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1647
						]
					},
					"id": 1648,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "58:152:10",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1647,
							"linearizedBaseContracts": [
								1647
							],
							"name": "IERC721Receiver",
							"nameLocation": "221:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "243:485:10",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "742:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "776:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "768:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "802:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "794:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "824:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "816:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "841:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "841:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:108:10"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "885:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "885:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:8:10"
									},
									"scope": 1647,
									"src": "733:160:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1648,
							"src": "211:684:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:863:10"
				},
				"id": 10
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1850
						]
					},
					"id": 1851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1649,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1650,
								"nodeType": "StructuredDocumentation",
								"src": "58:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1850,
							"linearizedBaseContracts": [
								1850
							],
							"name": "Strings",
							"nameLocation": "101:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1653,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "140:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "115:58:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1651,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1652,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "155:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "346:632:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1661,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "548:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "548:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "544:51:11",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "560:35:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "581:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1660,
															"id": 1665,
															"nodeType": "Return",
															"src": "574:10:11"
														}
													]
												}
											},
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "612:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "604:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "604:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"id": 1670,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1656,
													"src": "619:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:20:11"
											},
											{
												"assignments": [
													1673
												],
												"declarations": [
													{
														"constant": false,
														"id": 1673,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "642:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "634:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "634:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1674,
												"nodeType": "VariableDeclarationStatement",
												"src": "634:14:11"
											},
											{
												"body": {
													"id": 1685,
													"nodeType": "Block",
													"src": "676:57:11",
													"statements": [
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:8:11",
																"subExpression": {
																	"id": 1678,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "690:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "690:8:11"
														},
														{
															"expression": {
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1681,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "712:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "712:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1684,
															"nodeType": "ExpressionStatement",
															"src": "712:10:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1675,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "665:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "673:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "WhileStatement",
												"src": "658:75:11"
											},
											{
												"assignments": [
													1688
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "755:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "742:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1687,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"arguments": [
														{
															"id": 1691,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "774:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "764:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1689,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "768:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "742:39:11"
											},
											{
												"body": {
													"id": 1724,
													"nodeType": "Block",
													"src": "810:131:11",
													"statements": [
														{
															"expression": {
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1697,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "824:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "834:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "824:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "824:11:11"
														},
														{
															"expression": {
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1701,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "849:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1703,
																	"indexExpression": {
																		"id": 1702,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "856:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "849:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1708,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "879:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1713,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1711,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1656,
																									"src": "892:5:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1712,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "900:2:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "892:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1710,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "884:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1709,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "884:7:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1714,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "884:19:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "879:24:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "873:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1706,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "873:5:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "873:31:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "866:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1704,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "866:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "866:39:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "849:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1719,
															"nodeType": "ExpressionStatement",
															"src": "849:56:11"
														},
														{
															"expression": {
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "919:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "928:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "919:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "919:11:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "798:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "798:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "WhileStatement",
												"src": "791:150:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1728,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "964:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "957:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1726,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "957:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1660,
												"id": 1730,
												"nodeType": "Return",
												"src": "950:21:11"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "180:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "284:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "301:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "293:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:15:11"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "331:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:11"
									},
									"scope": 1850,
									"src": "275:703:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "1157:255:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1740,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "1171:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1171:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "1167:54:11",
												"trueBody": {
													"id": 1745,
													"nodeType": "Block",
													"src": "1183:38:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1204:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1739,
															"id": 1744,
															"nodeType": "Return",
															"src": "1197:13:11"
														}
													]
												}
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1238:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "1230:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1230:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"id": 1749,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1735,
													"src": "1245:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:20:11"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1268:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "1260:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1260:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"hexValue": "30",
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1277:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1260:18:11"
											},
											{
												"body": {
													"id": 1765,
													"nodeType": "Block",
													"src": "1306:57:11",
													"statements": [
														{
															"expression": {
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1320:8:11",
																"subExpression": {
																	"id": 1758,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1752,
																	"src": "1320:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "1320:8:11"
														},
														{
															"expression": {
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1761,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "1342:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1342:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1764,
															"nodeType": "ExpressionStatement",
															"src": "1342:10:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1755,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "1295:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1303:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1295:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1766,
												"nodeType": "WhileStatement",
												"src": "1288:75:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "1391:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1769,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "1398:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1773,
															1849
														],
														"referencedDeclaration": 1849,
														"src": "1379:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1739,
												"id": 1771,
												"nodeType": "Return",
												"src": "1372:33:11"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "984:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1092:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1112:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1104:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:15:11"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1142:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:11"
									},
									"scope": 1850,
									"src": "1083:329:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "1625:351:11",
										"statements": [
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1648:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1848,
														"src": "1635:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1783,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1635:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1793,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1667:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1788,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "1671:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1667:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1680:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1667:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1657:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1785,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1661:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:47:11"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1794,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1692:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1796,
														"indexExpression": {
															"hexValue": "30",
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1704:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1692:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "1692:15:11"
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1800,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1717:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1802,
														"indexExpression": {
															"hexValue": "31",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1717:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1729:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1717:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "1717:15:11"
											},
											{
												"body": {
													"id": 1834,
													"nodeType": "Block",
													"src": "1787:87:11",
													"statements": [
														{
															"expression": {
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1820,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "1801:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1822,
																	"indexExpression": {
																		"id": 1821,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "1808:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1801:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1823,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "1813:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1827,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1776,
																			"src": "1826:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1834:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1826:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1813:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1801:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1829,
															"nodeType": "ExpressionStatement",
															"src": "1801:37:11"
														},
														{
															"expression": {
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1776,
																	"src": "1852:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1862:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1852:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1833,
															"nodeType": "ExpressionStatement",
															"src": "1852:11:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "1775:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1775:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1835,
												"initializationExpression": {
													"assignments": [
														1807
													],
													"declarations": [
														{
															"constant": false,
															"id": 1807,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1755:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1835,
															"src": "1747:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1806,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1747:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1813,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1759:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1809,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "1763:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1759:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1759:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1747:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1782:3:11",
														"subExpression": {
															"id": 1817,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1784:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1819,
													"nodeType": "ExpressionStatement",
													"src": "1782:3:11"
												},
												"nodeType": "ForStatement",
												"src": "1742:132:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1837,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "1891:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1900:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1891:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1903:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1883:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "1883:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1845,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1962:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1955:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1843,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1955:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1782,
												"id": 1847,
												"nodeType": "Return",
												"src": "1948:21:11"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "1418:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1544:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1564:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "1556:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1579:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "1571:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:31:11"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "1610:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:15:11"
									},
									"scope": 1850,
									"src": "1535:441:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1851,
							"src": "93:1885:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1946:11"
				},
				"id": 11
			}
		}
	}
}